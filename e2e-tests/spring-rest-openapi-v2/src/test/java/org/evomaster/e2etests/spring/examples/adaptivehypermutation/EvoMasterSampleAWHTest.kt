package org.evomaster.e2etests.spring.examples.adaptivehypermutation


import  org.junit.jupiter.api.AfterAll
import  org.junit.jupiter.api.BeforeAll
import  org.junit.jupiter.api.BeforeEach
import  org.junit.jupiter.api.Test
import  org.junit.jupiter.api.Assertions.*
import  io.restassured.RestAssured
import  io.restassured.RestAssured.given
import  io.restassured.response.ValidatableResponse
import  org.evomaster.client.java.controller.api.EMTestUtils.*
import  org.evomaster.client.java.controller.SutHandler
import  org.evomaster.client.java.controller.db.dsl.SqlDsl.sql
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto
import  java.util.List
import  org.hamcrest.Matchers.*
import  io.restassured.config.JsonConfig
import  io.restassured.path.json.config.JsonPathConfig
import  io.restassured.config.RedirectConfig.redirectConfig
import  org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*
import  org.evomaster.client.java.controller.contentMatchers.StringMatcher.*
import  org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*




/**
 * This file was automatically generated by EvoMaster on 2020-12-03T11:20:15.545+01:00\[Europe/Oslo\]
 * 
 * The generated test suite contains 16 tests
 * 
 * Covered targets: 182
 * 
 * Used time: 0h 4m 23s
 * 
 * Needed budget for current results: 95%
 * 
 * 
 */
internal class EvoMasterSampleAWHTest {

    
    companion object {
        private val controller : SutHandler = com.foo.rest.examples.spring.adaptivehypermutation.AHypermutationRestController()
        private lateinit var baseUrlOfSut: String
        
        
        @BeforeAll
        @JvmStatic
        fun initClass() {
            controller.setupForGeneratedTest()
            baseUrlOfSut = controller.startSut()
            assertNotNull(baseUrlOfSut)
            RestAssured.enableLoggingOfRequestAndResponseIfValidationFails()
            RestAssured.useRelaxedHTTPSValidation()
            RestAssured.urlEncodingEnabled = false
            RestAssured.config = RestAssured.config()
                .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
                .redirect(redirectConfig().followRedirects(false))
        }
        
        
        @AfterAll
        @JvmStatic
        fun tearDown() {
            controller.stopSut()
        }
    }
    
    
    @BeforeEach
    fun initTest() {
        controller.resetStateOfSUT()
    }
    
    
    
    
    @Test
    fun test_0_with500()  {
        val insertions = sql().insertInto("FOO", 21L)
                .d("X", "1296040198")
                .d("Y", "\"evomaster_56_input\"")
                .d("ZC", "-64674")
                .d("ZT", "\"2018-01-16\"")
            .and().insertInto("FOO", 20L)
                .d("X", "131530")
                .d("Y", "\"evomaster_49_input\"")
                .d("ZC", "-1179483")
                .d("ZT", "\"1906-06-10\"")
            .and().insertInto("FOO", 19L)
                .d("X", "724")
                .d("Y", "\"evomaster_57_input\"")
                .d("ZC", "2960")
                .d("ZT", "\"1998-06-23\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"c\": 860.0, " + 
                    " \"d1\": \"evomaster_55_input\", " + 
                    " \"d2\": \"GN\", " + 
                    " \"t\": \"9238-5-92\" " + 
                    " } ")
                .post("${baseUrlOfSut}/api/foos/761?y=foo")
                .then()
                .statusCode(500) // com/foo/rest/examples/spring/adaptivehypermutation/service/FooRestAPI_36_createFoo
                .assertThat()
                .contentType("text/html")
        
        given().accept("*/*")
                .get("${baseUrlOfSut}/api/foos/761")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString())
    }
    
    
    @Test
    fun test_1()  {
        val insertions = sql().insertInto("FOO", 21L)
                .d("X", "1073741823")
                .d("Y", "\"evomaster_891_input\"")
                .d("ZC", "98316")
                .d("ZT", "\"2006-01-13\"")
            .and().insertInto("FOO", 20L)
                .d("X", "41")
                .d("Y", "\"QpzO1hzcH9w4e\"")
                .d("ZC", "-528")
                .d("ZT", "\"2036-01-09\"")
            .and().insertInto("FOO", 19L)
                .d("X", "9222")
                .d("Y", "\"evomaster_894_input\"")
                .d("ZC", "-16392")
                .d("ZT", "\"2000-09-20\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"c\": 100.0, " + 
                    " \"d1\": \"evomaster_716_input\", " + 
                    " \"d3\": \"evomaster_374_input\", " + 
                    " \"t\": \"1964-04-09\" " + 
                    " } ")
                .post("${baseUrlOfSut}/api/foos/761?y=foo")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("B1"))
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/foos/761")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'x'", numberMatches(761.0))
                .body("'y'", containsString("foo"))
                .body("'z'.'c'", numberMatches(100.0))
                .body("'z'.'t'", containsString("1964-04-09"))
                .body("'z'.'d1'", containsString("evomaster_716_input"))
                .body("'z'.'d3'", containsString("evomaster_374_input"))
    }
    
    
    @Test
    fun test_2()  {
        val insertions = sql().insertInto("FOO", 21L)
                .d("X", "1073742356")
                .d("Y", "\"IXsmKJBE\"")
                .d("ZC", "4")
                .d("ZT", "\"2064-05-25\"")
            .and().insertInto("FOO", 20L)
                .d("X", "99")
                .d("Y", "\"Rt8UUSBC5kvVk\"")
                .d("ZC", "514")
                .d("ZT", "\"1908-01-20\"")
            .and().insertInto("FOO", 19L)
                .d("X", "1073744083")
                .d("Y", "\"9944\"")
                .d("ZC", "1079")
                .d("ZT", "\"2100-06-30\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"c\": 200.0, " + 
                    " \"d1\": \"2048-01-09\", " + 
                    " \"d2\": \"9944\", " + 
                    " \"d3\": \"9620\", " + 
                    " \"t\": \"1901-03-25\" " + 
                    " } ")
                .post("${baseUrlOfSut}/api/foos/761?y=foo")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("B2"))
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/foos/761")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'x'", numberMatches(761.0))
                .body("'y'", containsString("foo"))
                .body("'z'.'c'", numberMatches(200.0))
                .body("'z'.'t'", containsString("1901-03-25"))
                .body("'z'.'d1'", containsString("2048-01-09"))
                .body("'z'.'d2'", containsString("9944"))
                .body("'z'.'d3'", containsString("9620"))
    }
    
    
    @Test
    fun test_3()  {
        val insertions = sql().insertInto("FOO", 21L)
                .d("X", "1073741823")
                .d("Y", "\"evomaster_782_input\"")
                .d("ZC", "-8388708")
                .d("ZT", "\"1916-01-20\"")
            .and().insertInto("FOO", 20L)
                .d("X", "332")
                .d("Y", "\"3IiWNWHSWsfk\"")
                .d("ZC", "524320")
                .d("ZT", "\"1900-01-18\"")
            .and().insertInto("FOO", 19L)
                .d("X", "32")
                .d("Y", "\"BLRds_SQ982\"")
                .d("ZC", "0")
                .d("ZT", "\"2000-12-29\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"c\": 300.0, " + 
                    " \"d1\": \"7568\", " + 
                    " \"d2\": \"evomaster_433_input\", " + 
                    " \"d3\": \"evomqster_374_input\", " + 
                    " \"t\": \"1902-08-29\" " + 
                    " } ")
                .post("${baseUrlOfSut}/api/foos/761?y=foo")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("B3"))
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/foos/761")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'x'", numberMatches(761.0))
                .body("'y'", containsString("foo"))
                .body("'z'.'c'", numberMatches(300.0))
                .body("'z'.'t'", containsString("1902-08-29"))
                .body("'z'.'d1'", containsString("7568"))
                .body("'z'.'d2'", containsString("evomaster_433_input"))
                .body("'z'.'d3'", containsString("evomqster_374_input"))
    }
    
    
    @Test
    fun test_4()  {
        val insertions = sql().insertInto("FOO", 11L)
                .d("X", "840")
                .d("Y", "\"wxidntGoxb2\"")
                .d("ZC", "410")
                .d("ZT", "\"2064-01-12\"")
            .and().insertInto("FOO", 10L)
                .d("X", "0")
                .d("Y", "\"RiF7DjDRUh9PA\"")
                .d("ZC", "16777497")
                .d("ZT", "\"2048-01-09\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .delete("${baseUrlOfSut}/api/foos/0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString())
    }
    
    
    @Test
    fun test_5()  {
        val insertions = sql().insertInto("FOO", 21L)
                .d("X", "1073740933")
                .d("Y", "\"S\"")
                .d("ZC", "1020")
                .d("ZT", "\"2100-10-20\"")
            .and().insertInto("FOO", 20L)
                .d("X", "42")
                .d("Y", "\"UA1t\"")
                .d("ZC", "-1030")
                .d("ZT", "\"2002-01-09\"")
            .and().insertInto("FOO", 19L)
                .d("X", "761")
                .d("Y", "\"TR\"")
                .d("ZC", "2066")
                .d("ZT", "\"2035-01-28\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"c\": 2.68436462E8, " + 
                    " \"d1\": \"ofhd\", " + 
                    " \"d2\": \"evomaster_433_input\", " + 
                    " \"t\": \"2026-12-12\" " + 
                    " } ")
                .post("${baseUrlOfSut}/api/foos/761?y=foo")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("")
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/foos/761")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'x'", numberMatches(761.0))
                .body("'y'", containsString("TR"))
                .body("'z'.'c'", numberMatches(2066.0))
                .body("'z'.'t'", containsString("2035-01-28"))
    }
    
    
    @Test
    fun test_6()  {
        val insertions = sql().insertInto("FOO", 21L)
                .d("X", "1073745663")
                .d("Y", "\"wuu\"")
                .d("ZC", "-8388608")
                .d("ZT", "\"2000-01-20\"")
            .and().insertInto("FOO", 20L)
                .d("X", "42")
                .d("Y", "\"evomaster_560_input\"")
                .d("ZC", "8192")
                .d("ZT", "\"2064-06-12\"")
            .and().insertInto("FOO", 19L)
                .d("X", "1073741823")
                .d("Y", "\"evomaster_562_input\"")
                .d("ZC", "12584972")
                .d("ZT", "\"2000-12-12\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"c\": 0.0, " + 
                    " \"d1\": \"7568\", " + 
                    " \"d2\": \"evomaster_433_input\", " + 
                    " \"d3\": \"evomaster_374_input\", " + 
                    " \"t\": \"1900-04-28\" " + 
                    " } ")
                .post("${baseUrlOfSut}/api/foos/761?y=foo")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("B0B5"))
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/foos/761")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'x'", numberMatches(761.0))
                .body("'y'", containsString("foo"))
                .body("'z'.'c'", numberMatches(0.0))
                .body("'z'.'t'", containsString("1900-04-28"))
                .body("'z'.'d1'", containsString("7568"))
                .body("'z'.'d2'", containsString("evomaster_433_input"))
                .body("'z'.'d3'", containsString("evomaster_374_input"))
    }
    
    
    @Test
    fun test_7()  {
        val insertions = sql().insertInto("FOO", 21L)
                .d("X", "1073741766")
                .d("Y", "\"V\"")
                .d("ZC", "40")
                .d("ZT", "\"2100-04-30\"")
            .and().insertInto("FOO", 20L)
                .d("X", "42")
                .d("Y", "\"V\"")
                .d("ZC", "60")
                .d("ZT", "\"1998-03-10\"")
            .and().insertInto("FOO", 19L)
                .d("X", "2297")
                .d("Y", "\"UV6\"")
                .d("ZC", "0")
                .d("ZT", "\"2000-06-28\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"c\": -256.0, " + 
                    " \"d1\": \"2048-01-09\", " + 
                    " \"d2\": \"2095-10-10\", " + 
                    " \"d3\": \"evomaster_976_input\", " + 
                    " \"t\": \"2020-08-20\" " + 
                    " } ")
                .post("${baseUrlOfSut}/api/foos/761?y=foo")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("B0B4B5"))
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/foos/761")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'x'", numberMatches(761.0))
                .body("'y'", containsString("foo"))
                .body("'z'.'c'", numberMatches(-256.0))
                .body("'z'.'t'", containsString("2020-08-20"))
                .body("'z'.'d1'", containsString("2048-01-09"))
                .body("'z'.'d2'", containsString("2095-10-10"))
                .body("'z'.'d3'", containsString("evomaster_976_input"))
    }
    
    
    @Test
    fun test_8()  {
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/foos")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0))
                .body("isEmpty()", `is`(true))
    }
    
    
    @Test
    fun test_9()  {
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/bars")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0))
                .body("isEmpty()", `is`(true))
    }
    
    
    @Test
    fun test_10()  {
        val insertions = sql().insertInto("FOO", 14L)
                .d("X", "196")
                .d("Y", "\"BDJycbEZEdQnoZ4\"")
                .d("ZC", "-876170080")
                .d("ZT", "\"1919-12-23\"")
            .and().insertInto("FOO", 13L)
                .d("X", "142")
                .d("Y", "\"xn\"")
                .d("ZC", "887")
                .d("ZT", "\"2070-02-20\"")
            .and().insertInto("FOO", 12L)
                .d("X", "106")
                .d("Y", "\"salW_G\"")
                .d("ZC", "983")
                .d("ZT", "\"2087-06-28\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/bars")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0))
                .body("isEmpty()", `is`(true))
        
        given().accept("*/*")
                .delete("${baseUrlOfSut}/api/foos/765")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString())
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/foos")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("'x'", hasItem(numberMatches(106.0)))
                .body("'y'", hasItem(containsString("salW_G")))
                .body("'x'", hasItem(numberMatches(142.0)))
                .body("'y'", hasItem(containsString("xn")))
                .body("'x'", hasItem(numberMatches(196.0)))
                .body("'y'", hasItem(containsString("BDJycbEZEdQnoZ4")))
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/bars")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0))
                .body("isEmpty()", `is`(true))
        
        given().accept("*/*")
                .get("${baseUrlOfSut}/api/foos/46")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString())
    }
    
    
    @Test
    fun test_11()  {
        val insertions = sql().insertInto("FOO", 21L)
                .d("X", "1073741823")
                .d("Y", "\"BB\"")
                .d("ZC", "1792")
                .d("ZT", "\"2000-05-17\"")
            .and().insertInto("FOO", 20L)
                .d("X", "131526")
                .d("Y", "\"evomaster_81_innut\"")
                .d("ZC", "-34734035")
                .d("ZT", "\"2000-06-18\"")
            .and().insertInto("FOO", 19L)
                .d("X", "724")
                .d("Y", "\"evomaster_64_inputH\"")
                .d("ZC", "0")
                .d("ZT", "\"1999-01-19\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"c\": 860.0, " + 
                    " \"d1\": \"evomaster_55_input\", " + 
                    " \"d2\": \"GN7\", " + 
                    " \"t\": \"2064-05-22\" " + 
                    " } ")
                .post("${baseUrlOfSut}/api/foos/761?y=foo")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("B0"))
        
        given().accept("application/json")
                .get("${baseUrlOfSut}/api/foos/761")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'x'", numberMatches(761.0))
                .body("'y'", containsString("foo"))
                .body("'z'.'c'", numberMatches(860.0))
                .body("'z'.'t'", containsString("2064-05-22"))
                .body("'z'.'d1'", containsString("evomaster_55_input"))
                .body("'z'.'d2'", containsString("GN7"))
    }
    
    
    @Test
    fun test_12()  {
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"c\": 828.0, " + 
                    " \"d2\": \"_b2hKk2\", " + 
                    " \"t\": \"StZfCbGXg\" " + 
                    " } ")
                .post("${baseUrlOfSut}/api/foos/369?y=G446BF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html")
    }
    
    
    @Test
    fun test_13()  {
        val insertions = sql().insertInto("FOO", 21L)
                .d("X", "1296040198")
                .d("Y", "\"oiBk\"")
                .d("ZC", "-64674")
                .d("ZT", "\"2002-01-16\"")
            .and().insertInto("FOO", 20L)
                .d("X", "131531")
                .d("Y", "\"evomaster_49_input\"")
                .d("ZC", "-1048411")
                .d("ZT", "\"1906-06-10\"")
            .and().insertInto("FOO", 19L)
                .d("X", "724")
                .d("Y", "\"TWP2QqSnl\"")
                .d("ZC", "2964")
                .d("ZT", "\"2000-06-24\"")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"c\": 604.0, " + 
                    " \"d1\": \"4qrSUzaRr0arXg\", " + 
                    " \"d2\": \"GN\", " + 
                    " \"t\": \"9238-5-92\" " + 
                    " } ")
                .post("${baseUrlOfSut}/api/foos/761?y=evomaster_38_input")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("")
        
        given().accept("*/*")
                .get("${baseUrlOfSut}/api/foos/761")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString())
    }
    
    
    @Test
    fun test_14()  {
        
        given().accept("*/*")
                .get("${baseUrlOfSut}/api/foos/277")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString())
    }
    
    
    @Test
    fun test_15()  {
        
        given().accept("*/*")
                .delete("${baseUrlOfSut}/api/foos/171")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString())
    }


}
