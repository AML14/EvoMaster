Index: src/em/EvoMasterTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/em/EvoMasterTest.java	(date 1600260935287)
+++ src/em/EvoMasterTest.java	(date 1600260935287)
@@ -24,13 +24,13 @@
 
 
 /**
- * This file was automatically generated by EvoMaster on 2020-09-09T16:50:40.390+02:00[Europe/Oslo]
+ * This file was automatically generated by EvoMaster on 2020-09-16T14:55:35.191+02:00[Europe/Oslo]
  * <br>
- * The generated test suite contains 256 tests
+ * The generated test suite contains 27 tests
  * <br>
- * Covered targets: 1842
+ * Covered targets: 350
  * <br>
- * Used time: 2h 26m 3s
+ * Used time: 0h 9m 46s
  * <br>
  * Needed budget for current results: 98%
  * <br>
@@ -39,7 +39,7 @@
 public class EvoMasterTest {
 
     
-    private static final SutHandler controller = new em.external.io.github.proxyprint.kitchen.ExternalEvoMasterController();
+    private static final SutHandler controller = new em.external.org.tsdes.ExternalEvoMasterController();
     private static String baseUrlOfSut;
     
     
@@ -72,2864 +72,335 @@
     
     
     @Test
-    public void test_0() throws Exception {
-        
-        try{
-            given().accept("*/*")
-                    .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                    .post(baseUrlOfSut + "/paypal/ipn/consumer/-2138")
-                    .then();
-        } catch(Exception e){
-        }
-    }
-    
-    
-    @Test
-    public void test_1() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 2171L)
-                .d("PASSWORD", "\"evomaster_26723_mnpupV\"")
-                .d("USERNAME", "\"evomaster_22624_input\"")
-            .and().insertInto("CONSUMERS", 2170L)
-                .d("BALANCE_CURRENCY", "\"gvWmaM]dsa71UeYTnpV\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-65536")
-                .d("NAME", "\"8S_rGU\"")
-                .d("ID", "16")
-            .and().insertInto("NOTIFICATION", 2169L)
-            .and().insertInto("USERS", 2168L)
-                .d("PASSWORD", "\"evomastcr[20310_inpu\"")
-                .d("USERNAME", "\"dvomasperUU9:74[inUut\"")
-            .and().insertInto("CONSUMERS", 2167L)
-                .d("BALANCE_CURRENCY", "\"Buf8h\"")
-                .d("BALANCE_FRACTIONAL_PART", "1984")
-                .d("BALANCE_INTEGER_PART", "704")
-                .d("NAME", "\"eUomasUer_22625_inputPz\"")
-                .d("ID", "1")
-            .and().insertInto("NOTIFICATION", 2166L)
-            .and().insertInto("USERS", 2165L)
-                .d("PASSWORD", "\"UvUmaUtQzU7>U0SiUUut\"")
-                .d("USERNAME", "\"o2UYUTrjbUFSfj\"")
-            .and().insertInto("CONSUMERS", 2164L)
-                .d("BALANCE_CURRENCY", "\"eUomUttUr_7U1;_ifqmth\"")
-                .d("BALANCE_FRACTIONAL_PART", "32")
-                .d("BALANCE_INTEGER_PART", "32396")
-                .d("NAME", "\"evooastUn_7562ainpsQ\"")
-                .d("ID", "7")
-            .and().insertInto("NOTIFICATION", 2163L)
-            .and().insertInto("USERS", 2162L)
-                .d("PASSWORD", "\"oHkIkBserVu3K9\"")
-                .d("USERNAME", "\"evMmUUtds_7=64_UUpu\"")
-            .and().insertInto("CONSUMERS", 2161L)
-                .d("BALANCE_CURRENCY", "\"evomaster_26722_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-4256")
-                .d("BALANCE_INTEGER_PART", "8192")
-                .d("NAME", "\"UvnmatterU731U^iUp\"")
-                .r("ID", 2162L)
-            .and().insertInto("NOTIFICATION", 2160L)
-            .and().insertInto("PRINTSHOPS", 2159L)
-                .d("ADDRESS", "\"5eUomaster_19977_inpu\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"uL6fykj2Q4kjRi\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "31808")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"6X\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"QvIny0Bvb3lIVV2T\"")
-                .d("NIF", "\"evomasper_3980_inpu\"")
-            .and().insertInto("PRINTSHOPS", 2158L)
-                .d("ADDRESS", "\"evomaster_20312_input6\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"UvomaotUU_SU10_irpuUU\"")
-                .d("BALANCE_FRACTIONAL_PART", "128")
-                .d("BALANCE_INTEGER_PART", "923")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"dlbOU9bUNq7\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_7311_input\"")
-                .d("NIF", "\"VviUaster_65Y6UinUUt\"")
-            .and().insertInto("PRINTSHOPS", 2157L)
-                .d("ADDRESS", "\"UUoUaYUeUaUUU6_iUpu\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"UouhMKtiwAh4\"")
-                .d("BALANCE_FRACTIONAL_PART", "-10")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"xuFUtzSUUs\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_28436_input\"")
-                .d("NIF", "\"evomaster_26924_input\"")
-            .and().insertInto("PRINTSHOPS", 2156L)
-                .d("ADDRESS", "\"evomaster_7567_input\"")
-                .d("AVG_RATING", "2279.2425797627006")
-                .d("BALANCE_CURRENCY", "\"evomaster_19978_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "24")
-                .d("BALANCE_INTEGER_PART", "-2")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"euUuQsUercU125_ynU\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"S\"")
-                .d("NIF", "\"S0WSrmXdoV6\"")
-            .and().insertInto("PRINTSHOPS", 2155L)
-                .d("ADDRESS", "\"YM\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_19980_inpu\"")
-                .d("BALANCE_FRACTIONAL_PART", "64")
-                .d("BALANCE_INTEGER_PART", "-256")
-                .d("LATITUDE", "70.427663370115")
-                .d("LOGO", "\"MiUIU2U_1WUSDU6\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_7568_input\"")
-                .d("NIF", "\"evomaster_26725_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        try{
-            given().accept("*/*")
-                    .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                    .post(baseUrlOfSut + "/paypal/ipn/-512")
-                    .then();
-        } catch(Exception e){
-        }
-    }
-    
-    
-    @Test
-    public void test_2_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"ringType\": \"Uw[\", " + 
-                    " \"supLim\": 117.0 " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/1/pricetable/rings")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$RingType_38_valueOf
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
-                .body("'message'", containsString("No enum constant io.github.proxyprint.kitchen.models.printshops.pricetable.Item.RingType.Uw["))
-                .body("'path'", containsString("/printshops/1/pricetable/rings"));
-    }
-    
-    
-    @Test
-    public void test_3_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"supLim\": 749.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/1/pricetable/rings")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$RingType_38_valueOf
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("Name is null"))
-                .body("'path'", containsString("/printshops/1/pricetable/rings"));
-    }
-    
-    
-    @Test
-    public void test_4_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 767L)
-                .d("ADDRESS", "\"evomaster_4689_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_13510_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_13511_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"e0OoZZfnziVBXA\"")
-                .d("NIF", "\"NKk\"")
+    public void test_0_with500() throws Exception {
+        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 6L)
+                .d("ID", "-1401868530")
+                .d("AUTHOR_ID", "\"evomaster_2269_input\"")
+                .d("COUNTRY", "\"K6DwLApUiS3Cf7c\"")
+                .d("CREATION_TIME", "\"1968-01-18 07:17:59\"")
+                .d("TEXT", "\"Wduic\"")
+            .and().insertInto("NEWS_ENTITY", 5L)
+                .d("ID", "337")
+                .d("AUTHOR_ID", "\"G9Xlax76_vDQfL\"")
+                .d("COUNTRY", "\"evomaster_2270_input\"")
+                .d("CREATION_TIME", "\"2040-03-15 07:23:06\"")
+                .d("TEXT", "\"^vtgaUkeb`40HdnputwZn9\"")
+            .and().insertInto("NEWS_ENTITY", 4L)
+                .d("ID", "951")
+                .d("AUTHOR_ID", "\"EcMjRZ2piTQKmoP\"")
+                .d("COUNTRY", "\"uHpPnf7ql\"")
+                .d("CREATION_TIME", "\"1982-01-22 18:47:36\"")
+                .d("TEXT", "\"ZvSmasiWr_H4_Id`ot\"")
             .dtos();
         controller.execInsertionsIntoDatabase(insertions);
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 432.0, " + 
-                    " \"price\": \"Nwg1W8mY\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/8/pricetable/deletering")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/pricetable/RingTableItem_74_getRingTypeForPresentationString
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/8/pricetable/deletering"));
-    }
-    
-    
-    @Test
-    public void test_5_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/satisfied")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/repositories/UserService_42_loadUserByUsername
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/satisfied"));
-    }
-    
-    
-    @Test
-    public void test_6_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/printshops/requests/214")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/repositories/UserService_42_loadUserByUsername
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/requests/214"));
-    }
-    
-    
-    @Test
-    public void test_7_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/requests/255")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/repositories/UserService_42_loadUserByUsername
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/requests/255"));
-    }
-    
-    
-    @Test
-    public void test_8_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" \"DECt\" ")
-                .post(baseUrlOfSut + "/printshops/requests/cancel/151")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/repositories/UserService_42_loadUserByUsername
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/requests/cancel/151"));
-    }
-    
-    
-    @Test
-    public void test_9_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/requests")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/repositories/UserService_42_loadUserByUsername
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/requests"));
-    }
-    
-    
-    @Test
-    public void test_10_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/history")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/repositories/UserService_42_loadUserByUsername
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/history"));
-    }
-    
-    
-    @Test
-    public void test_11_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"requestJSON\": \"bC2jt\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/consumer/budget")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/repositories/UserService_42_loadUserByUsername
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.web.multipart.MultipartException"))
-                .body("'message'", containsString("Could not parse multipart servlet request; nested exception is javax.servlet.ServletException: org.apache.tomcat.util.http.fileupload.FileUploadBase$InvalidContentTypeException: the request doesn't contain a multipart/form-data or multipart/mixed stream, content type header is application/json"))
-                .body("'path'", containsString("/consumer/budget"));
-    }
-    
-    
-    @Test
-    public void test_12_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/admin/seed")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_123_seed
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/seed"));
-    }
-    
-    
-    @Test
-    public void test_13_with500() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"requestJSON\": \"tZva0Qa\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/consumer/budget")
-                .then()
-                .statusCode(500) // framework_code
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.web.multipart.MultipartException"))
-                .body("'message'", containsString("Could not parse multipart servlet request; nested exception is javax.servlet.ServletException: org.apache.tomcat.util.http.fileupload.FileUploadBase$InvalidContentTypeException: the request doesn't contain a multipart/form-data or multipart/mixed stream, content type header is application/json"))
-                .body("'path'", containsString("/consumer/budget"));
-    }
-    
-    
-    @Test
-    public void test_14_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"bindingSpecs\": \"1O\", " + 
-                    " \"coverSpecs\": \"OvvEPnL5o8k\", " + 
-                    " \"deleted\": false, " + 
-                    " \"id\": 972.0, " + 
-                    " \"name\": \"HTzyKHDwHIsL\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/consumer/92/printingschemas")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintingSchemaController_71_addNewConsumerPrintingSchema
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/consumer/92/printingschemas"));
-    }
-    
-    
-    @Test
-    public void test_15_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 4128L)
-                .d("ADDRESS", "\"xVUJKgtZaVwPQ\"")
-                .d("AVG_RATING", "0.5922318835862416")
-                .d("BALANCE_CURRENCY", "\"WFulYoU\"")
-                .d("BALANCE_FRACTIONAL_PART", "673")
-                .d("BALANCE_INTEGER_PART", "522")
-                .d("LATITUDE", "-70.03411614943704")
-                .d("LOGO", "\"odPEh\"")
-                .d("LONGITUDE", "0.8725419458956822")
-                .d("NAME", "\"evomaster_13997_input\"")
-                .d("NIF", "\"UQQ9puGKEAy\"")
-            .and().insertInto("USERS", 4127L)
-                .d("PASSWORD", "\"evomaster_13998_input\"")
-                .d("USERNAME", "\"evomaster_13999_input\"")
-            .and().insertInto("CONSUMERS", 4126L)
-                .d("BALANCE_CURRENCY", "\"DbKTPb3bbIkUTE\"")
-                .d("BALANCE_FRACTIONAL_PART", "-29456409")
-                .d("BALANCE_INTEGER_PART", "8")
-                .d("NAME", "\"DyV\"")
-                .r("ID", 4127L)
-            .and().insertInto("REVIEWS", 4125L)
-                .d("DESCRIPTION", "\"Nw@7cU\"")
-                .d("RATING", "545")
-                .r("PRINTSHOP", 4128L)
-            .and().insertInto("PRINTSHOPS", 292L)
-                .d("ADDRESS", "\"evomaster_13853_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"kUO\"")
-                .d("BALANCE_FRACTIONAL_PART", "-1048576")
-                .d("BALANCE_INTEGER_PART", "-130540")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_13943_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_34_input\"")
-                .d("NIF", "\"OEC7UBkzOk0RUtdQ\"")
-            .and().insertInto("USERS", 291L)
-                .d("PASSWORD", "\"evomaster_14000_input\"")
-                .d("USERNAME", "\"evomaster_13919_input\"")
-            .and().insertInto("CONSUMERS", 290L)
-                .d("BALANCE_CURRENCY", "\"IWq5sJ_zWbFiq\"")
-                .d("BALANCE_FRACTIONAL_PART", "8")
-                .d("BALANCE_INTEGER_PART", "-25161051")
-                .d("NAME", "\"evomaster_14001_input\"")
-                .r("ID", 291L)
-            .and().insertInto("REVIEWS", 289L)
-                .d("DESCRIPTION", "\"evomaster_14002_input\"")
-                .d("RATING", "-16")
-            .and().insertInto("PRINTSHOPS", 288L)
-                .d("ADDRESS", "\"evomaster_13920_input\"")
-                .d("AVG_RATING", "-634.362676")
-                .d("BALANCE_CURRENCY", "\"n\"")
-                .d("BALANCE_FRACTIONAL_PART", "-256")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"cmoZb_YnbzYoy\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_13950_input\"")
-                .d("NIF", "\"eUUmaUterU13U62Ugnput\"")
-            .and().insertInto("USERS", 287L)
-                .d("PASSWORD", "\"`\"")
-                .d("USERNAME", "\"UvouastUU_43_inpUtx\"")
-            .and().insertInto("CONSUMERS", 286L)
-                .d("BALANCE_CURRENCY", "\"Abvr_fe_r5v5cY\"")
-                .d("BALANCE_FRACTIONAL_PART", "66177")
-                .d("BALANCE_INTEGER_PART", "5227008")
-                .d("NAME", "\"lJ\"")
-                .d("ID", "10")
-            .and().insertInto("REVIEWS", 285L)
-                .d("DESCRIPTION", "\"s\u0089\"")
-                .d("RATING", "8390912")
-            .and().insertInto("PRINTSHOPS", 284L)
-                .d("ADDRESS", "\"evomasxer_44_inpXutb\"")
-                .d("AVG_RATING", "-407.1056293489513")
-                .d("BALANCE_CURRENCY", "\"evomaster_14003_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_13921_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomUsUer_U3798_qnpu\"")
-                .d("NIF", "\"evomaster_14004_input\"")
-            .and().insertInto("USERS", 283L)
-                .d("PASSWORD", "\"xbHpyXt\"")
-                .d("USERNAME", "\"kTcKSHbGyaARd\"")
-            .and().insertInto("CONSUMERS", 282L)
-                .d("BALANCE_CURRENCY", "\"evomaster_13946_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-4194816")
-                .d("BALANCE_INTEGER_PART", "7868535")
-                .d("NAME", "\"evomaster_13953_input\"")
-                .d("ID", "8")
-            .and().insertInto("REVIEWS", 281L)
-                .d("DESCRIPTION", "\"evomaste\u0082_13922_input\"")
-                .d("RATING", "0")
-            .and().insertInto("PRINTSHOPS", 280L)
-                .d("ADDRESS", "\"eUoUUUtUrU4U_UvU\u0085t\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"GvEtdxVKALTGhsZ\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "8388608")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"u6aCtwo_Ya10rJg\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"CdUUDeo\"")
-                .d("NIF", "\"eUUmaUterU13U62Ugnpu\"")
-            .and().insertInto("USERS", 279L)
-                .d("PASSWORD", "\"BeKstCtEf\"")
-                .d("USERNAME", "\"evomaster_14005_input\"")
-            .and().insertInto("CONSUMERS", 278L)
-                .d("BALANCE_CURRENCY", "\"XkZ7uZtO2KqI7GEC\"")
-                .d("BALANCE_FRACTIONAL_PART", "2097850")
-                .d("BALANCE_INTEGER_PART", "973")
-                .d("NAME", "\"evom]ster_13863_inpu\"")
-                .d("ID", "9")
-            .and().insertInto("REVIEWS", 277L)
-                .d("DESCRIPTION", "\"4ohx9x4gUAK4U6Be\"")
-                .d("RATING", "1073725569")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/printshops/1/reviews/6")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/ReviewController_113_editPrintShopReview
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/1/reviews/6"));
-    }
-    
-    
-    @Test
-    public void test_16_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 2220L)
-                .d("PASSWORD", "\"le_IO\"")
-                .d("USERNAME", "\"OPBMC3a2Sj9VE\"")
-            .and().insertInto("CONSUMERS", 2219L)
-                .d("BALANCE_CURRENCY", "\"evomaster_4242_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "474")
-                .d("NAME", "\"evomaster_4235_input\"")
-                .r("ID", 2220L)
-            .and().insertInto("NOTIFICATION", 2218L)
-            .and().insertInto("USERS", 2217L)
-                .d("PASSWORD", "\"evomaster_4243_input\"")
-                .d("USERNAME", "\"evomaster_4244_input\"")
-            .and().insertInto("CONSUMERS", 2216L)
-                .d("BALANCE_CURRENCY", "\"evomaster_4237_inputS\"")
-                .d("BALANCE_FRACTIONAL_PART", "-8")
-                .d("BALANCE_INTEGER_PART", "458")
-                .d("NAME", "\"evomaster_4245_input\"")
-                .d("ID", "6")
-            .and().insertInto("NOTIFICATION", 2215L)
-            .and().insertInto("USERS", 2214L)
-                .d("PASSWORD", "\"CyNWqrCKiRC797\"")
-                .d("USERNAME", "\"evomaster_4246_input\"")
-            .and().insertInto("CONSUMERS", 2213L)
-                .d("BALANCE_CURRENCY", "\"_WB\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "433")
-                .d("NAME", "\"evomaster_4239_input\"")
-                .d("ID", "17")
-            .and().insertInto("NOTIFICATION", 2212L)
-            .and().insertInto("USERS", 2211L)
-                .d("PASSWORD", "\"hn_9m\"")
-                .d("USERNAME", "\"evomaster_4247_input\"")
-            .and().insertInto("CONSUMERS", 2210L)
-                .d("BALANCE_CURRENCY", "\"6aaIdR_82coqLs\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "131437")
-                .d("NAME", "\"evomastep_4U48_inpet\"")
-                .d("ID", "12")
-            .and().insertInto("NOTIFICATION", 2209L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/notifications/1")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_86_readNotification
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.orm.jpa.JpaSystemException"))
-                .body("'message'", containsString("Null value was assigned to a property [class io.github.proxyprint.kitchen.models.notifications.Notification.read] of primitive type setter of io.github.proxyprint.kitchen.models.notifications.Notification.read; nested exception is org.hibernate.PropertyAccessException: Null value was assigned to a property [class io.github.proxyprint.kitchen.models.notifications.Notification.read] of primitive type setter of io.github.proxyprint.kitchen.models.notifications.Notification.read"))
-                .body("'path'", containsString("/notifications/1"));
-    }
-    
-    
-    @Test
-    public void test_17_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 3256L)
-                .d("ADDRESS", "\"evomaster_6737_input\"")
-                .d("AVG_RATING", "1.9568800132442619")
-                .d("BALANCE_CURRENCY", "\"E7Face702~y\"")
-                .d("BALANCE_FRACTIONAL_PART", "-820809123")
-                .d("BALANCE_INTEGER_PART", "533321")
-                .d("LATITUDE", "2.323847235579735")
-                .d("LOGO", "\"evomaster_6749_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_6748_input\"")
-                .d("NIF", "\"evomaster_6750_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverType\": \"tYjaAvVAoxx\", " + 
-                    " \"priceA3\": \"nvTa\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/4/pricetable/deletecover")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$CoverType_33_valueOf
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
-                .body("'message'", containsString("No enum constant io.github.proxyprint.kitchen.models.printshops.pricetable.Item.CoverType.tYjaAvVAoxx"))
-                .body("'path'", containsString("/printshops/4/pricetable/deletecover"));
-    }
-    
-    
-    @Test
-    public void test_18_with500() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"id\": 567.0, " + 
-                    " \"managerName\": \"evomaster_1_input\", " + 
-                    " \"managerPassword\": \"kR8Z9Xx6oY2\", " + 
-                    " \"pShopAddress\": \"evomaster_2_input\", " + 
-                    " \"pShopDateRequest\": \"3sxCmlZFJMFf\", " + 
-                    " \"pShopNIF\": \"evomaster_3_input\", " + 
-                    " \"pShopName\": \"2_Dcnq\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/request/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/RegisterRequestController_58_registerRequest
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/request/register"));
-    }
-    
-    
-    @Test
-    public void test_19_with500() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"managerEmail\": \"0XQ_q\", " + 
-                    " \"managerName\": \"LwX3dUGLbw4Ew\", " + 
-                    " \"managerPassword\": \"kR8Z9Xx6oY2\", " + 
-                    " \"pShopAddress\": \"60y2VCPY\", " + 
-                    " \"pShopDateRequest\": \"3sxCmlZFJMFf\", " + 
-                    " \"pShopLongitude\": 0.3770670682466635, " + 
-                    " \"pShopNIF\": \"evomaster_4_input\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/request/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/RegisterRequestController_58_registerRequest
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/request/register"));
-    }
-    
-    
-    @Test
-    public void test_20_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 541L)
-                .d("ADDRESS", "\"evomaster_8291_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"AtUmqyU\"")
-                .d("BALANCE_FRACTIONAL_PART", "2097152")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"SJRlcu\"")
-                .d("LONGITUDE", "0.4113")
-                .d("NAME", "\"evomaster_564_inpu\"")
-                .d("NIF", "\"UUUmasUer[357U]Unput\"")
-            .and().insertInto("PRINTSHOPS", 540L)
-                .d("ADDRESS", "\"evomaster_3173_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"YnIrYuy\"")
-                .d("BALANCE_FRACTIONAL_PART", "131366")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_8338_input\"")
-                .d("LONGITUDE", "2.1327995367581996")
-                .d("NAME", "\"UUUgUdkJ\"")
-                .d("NIF", "\"evomaster_8292_input\"")
-            .and().insertInto("PRINTSHOPS", 539L)
-                .d("ADDRESS", "\"x7o\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"M7cH2NqXns\"")
-                .d("BALANCE_FRACTIONAL_PART", "-128")
-                .d("BALANCE_INTEGER_PART", "332")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_8293_input\"")
-                .d("LONGITUDE", "3.8563194096503955E8")
-                .d("NAME", "\"evomaster_8294_input\"")
-                .d("NIF", "\"evomaster_8295_input\"")
-            .and().insertInto("PRINTSHOPS", 538L)
-                .d("ADDRESS", "\"exomaster_3174_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomUsteq_UU9UUinUut\"")
-                .d("BALANCE_FRACTIONAL_PART", "-2048")
-                .d("BALANCE_INTEGER_PART", "524288")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"GldyiSroS3VyuBz\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"eUQmUsleU_UU7E_mUeUt\"")
-                .d("NIF", "\"7rR\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverType\": \"kLsTmbXxA\", " + 
-                    " \"priceA4\": \"iYOXVI\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/4/pricetable/covers")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$CoverType_33_valueOf
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
-                .body("'message'", containsString("No enum constant io.github.proxyprint.kitchen.models.printshops.pricetable.Item.CoverType.kLsTmbXxA"))
-                .body("'path'", containsString("/printshops/4/pricetable/covers"));
-    }
-    
-    
-    @Test
-    public void test_21_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/688/printingschemas")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintingSchemaController_45_getConsumerPrintingSchemas
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/688/printingschemas"));
-    }
-    
-    
-    @Test
-    public void test_22_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": -762.0, " + 
-                    " \"priceA3DUPLEX\": \"9Wa@\", " + 
-                    " \"priceA4DUPLEX\": \"IfB\", " + 
-                    " \"priceA4SIMPLEX\": \"-\", " + 
-                    " \"supLim\": -1230.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/8/pricetable/papers")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$Colors_28_valueOf
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("Name is null"))
-                .body("'path'", containsString("/printshops/8/pricetable/papers"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"colors\": \"9oU\", " + 
-                    " \"infLim\": 1325.0, " + 
-                    " \"priceA3DUPLEX\": \"TXVUUYUld\", " + 
-                    " \"priceA4DUPLEX\": \"LqWMaB\", " + 
-                    " \"priceA4SIMPLEX\": \"Uk;~6\" " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/8/pricetable/papers")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PayPalController_105_consumerLoadUpConfirmation
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
-                .body("'message'", containsString("No enum constant io.github.proxyprint.kitchen.models.printshops.pricetable.Item.Colors.9oU"))
-                .body("'path'", containsString("/printshops/8/pricetable/papers"));
-    }
-    
-    
-    @Test
-    public void test_23_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 2476L)
-                .d("ADDRESS", "\"evomaster_17030_input\"")
-                .d("AVG_RATING", "0.25501837")
-                .d("BALANCE_CURRENCY", "\"evomaster_4829_inputr\"")
-                .d("BALANCE_FRACTIONAL_PART", "-32372")
-                .d("BALANCE_INTEGER_PART", "-7843")
-                .d("LATITUDE", "0.954205223828")
-                .d("LOGO", "\"evomaster_17031_input\"")
-                .d("LONGITUDE", "0.034414118033047836")
-                .d("NAME", "\"evomaster_17047_input\"")
-                .d("NIF", "\"3ZGDqufgW6j\"")
-            .and().insertInto("PRINTSHOPS", 2475L)
-                .d("ADDRESS", "\"eUgmUsUur_U82U_UUpul\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"A\"")
-                .d("BALANCE_FRACTIONAL_PART", "17350")
-                .d("BALANCE_INTEGER_PART", "131107")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_17033_input\"")
-                .d("LONGITUDE", "0.7854438381894809")
-                .d("NAME", "\"evomaster_17023_input\"")
-                .d("NIF", "\"evomaster_17034_input\"")
-            .and().insertInto("USERS", 2474L)
-                .d("PASSWORD", "\"79TYs\"")
-                .d("USERNAME", "\"evomaster_17035_input\"")
-            .and().insertInto("CONSUMERS", 2473L)
-                .d("BALANCE_CURRENCY", "\"oe2F\"")
-                .d("BALANCE_FRACTIONAL_PART", "1048899")
-                .d("BALANCE_INTEGER_PART", "-262144")
-                .d("NAME", "\"evomaster_4825_input\"")
-                .d("ID", "13")
-            .and().insertInto("USERS", 2472L)
-                .d("PASSWORD", "\"evomaster_17036_input\"")
-                .d("USERNAME", "\"evomaster_17048_input\"")
-            .and().insertInto("CONSUMERS", 2471L)
-                .d("BALANCE_CURRENCY", "\"evomaster_17037_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "2097366")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"p\"")
-                .d("ID", "1")
-            .and().insertInto("PRINT_REQUESTS", 2470L)
-            .and().insertInto("PRINTSHOPS", 2469L)
-                .d("ADDRESS", "\"evomaster_17049_input\"")
-                .d("AVG_RATING", "0.26277230277613894")
-                .d("BALANCE_CURRENCY", "\"evomaster_17038_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "445")
-                .d("LATITUDE", "0.856509934432724")
-                .d("LOGO", "\"evomaster_17050_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"e\"")
-                .d("NIF", "\"Uq77xRUU\"")
-            .and().insertInto("PRINTSHOPS", 2468L)
-                .d("ADDRESS", "\"BUQDUYUUH\"")
-                .d("AVG_RATING", "29.787428710850545")
-                .d("BALANCE_CURRENCY", "\"evomaster_17039_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "594")
-                .d("BALANCE_INTEGER_PART", "994")
-                .d("LATITUDE", "0.7502788423687476")
-                .d("LOGO", "\"evomaster_17040_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"F\"")
-                .d("NIF", "\"evomaster_4829_inputr\"")
-            .and().insertInto("USERS", 2467L)
-                .d("PASSWORD", "\"evomaster_17026_input\"")
-                .d("USERNAME", "\"Ydb9lis\"")
-            .and().insertInto("CONSUMERS", 2466L)
-                .d("BALANCE_CURRENCY", "\"EFP7saIx1nBPQ\"")
-                .d("BALANCE_FRACTIONAL_PART", "-262144")
-                .d("BALANCE_INTEGER_PART", "1896830526")
-                .d("NAME", "\"evomaster_17041_input\"")
-                .d("ID", "12")
-            .and().insertInto("USERS", 2465L)
-                .d("PASSWORD", "\"eUUmasUerU4832_inlu\"")
-                .d("USERNAME", "\"T\"")
-            .and().insertInto("CONSUMERS", 2464L)
-                .d("BALANCE_CURRENCY", "\"N7o1IPMIximA6u\"")
-                .d("BALANCE_FRACTIONAL_PART", "114")
-                .d("BALANCE_INTEGER_PART", "33554942")
-                .d("NAME", "\"qUenC_wPIE\"")
-                .r("ID", 2465L)
-            .and().insertInto("PRINT_REQUESTS", 2463L)
-            .and().insertInto("PRINTSHOPS", 2462L)
-                .d("ADDRESS", "\"evomUstcU`4833_inpuU\"")
-                .d("AVG_RATING", "4.9E-324")
-                .d("BALANCE_CURRENCY", "\"evomaster_17042_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "67109206")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_4834_input\"")
-                .d("LONGITUDE", "278074.79915724066")
-                .d("NAME", "\"evomaster_4835_inpu\"")
-                .d("NIF", "\"evomastcr_17027_input\"")
-            .and().insertInto("PRINTSHOPS", 2461L)
-                .d("ADDRESS", "\"evomaster_17028_input\"")
-                .d("AVG_RATING", "2.232939272923154")
-                .d("BALANCE_CURRENCY", "\"9igxbhvBqpZ\"")
-                .d("BALANCE_FRACTIONAL_PART", "659")
-                .d("BALANCE_INTEGER_PART", "-128")
-                .d("LATITUDE", "5.40151071308E7")
-                .d("LOGO", "\"q47NOuqFhL5\"")
-                .d("LONGITUDE", "0.39420456464548154")
-                .d("NAME", "\"b7ptIqTwpsAVF\"")
-                .d("NIF", "\"TwO1DXMFClcm\"")
-            .and().insertInto("USERS", 2460L)
-                .d("PASSWORD", "\"evomaster_17051_input\"")
-                .d("USERNAME", "\"evomastep_17029_input\"")
-            .and().insertInto("CONSUMERS", 2459L)
-                .d("BALANCE_CURRENCY", "\"evUmasdUr_4837_inpU\"")
-                .d("BALANCE_FRACTIONAL_PART", "520")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"AlSDKYM4Hg\"")
-                .d("ID", "17")
-            .and().insertInto("USERS", 2458L)
-                .d("PASSWORD", "\"UXPrgr4zZioo\"")
-                .d("USERNAME", "\"evomaster_17052_input\"")
-            .and().insertInto("CONSUMERS", 2457L)
-                .d("BALANCE_CURRENCY", "\"Hb_zrzjAEhUx0kpg\"")
-                .d("BALANCE_FRACTIONAL_PART", "360")
-                .d("BALANCE_INTEGER_PART", "-64")
-                .d("NAME", "\"evomaster_17053_input\"")
-                .d("ID", "19")
-            .and().insertInto("PRINT_REQUESTS", 2456L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/info")
-                .then()
-                .statusCode(200)
-                .assertThat()
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .contentType("text/plain")
-                .body(containsString("{\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"success\":true}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/requests/cancel/0")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/printshops/stats")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/stats"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/Money_25_<init>
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
-                .body("'message'", containsString("Infinity is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method."))
-                .body("'path'", containsString("/printshops"));
-    }
-    
-    
-    @Test
-    public void test_24_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 1851L)
-                .d("ADDRESS", "\"evomaste\u0092_3902_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_2915_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "17301750")
-                .d("BALANCE_INTEGER_PART", "-1048824")
-                .d("LATITUDE", "-3001.337941267891")
-                .d("LOGO", "\"iv\u008DmUUtarUUUUU_UUpUt\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_2916_inhut\"")
-                .d("NIF", "\"1WQRItxXjgnuUGHF\"")
-            .and().insertInto("PRINTSHOPS", 1850L)
-                .d("ADDRESS", "\"QUUSbXKCU\"")
-                .d("AVG_RATING", "-499478.8675277821")
-                .d("BALANCE_CURRENCY", "\"DpVK_\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "4")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomakter_2917_input\"")
-                .d("LONGITUDE", "-0.843086")
-                .d("NAME", "\"evokaster_2@39_input\"")
-                .d("NIF", "\"evomaster_14884_input\"")
-            .and().insertInto("USERS", 1849L)
-                .d("PASSWORD", "\"]vomaster_14878_input\"")
-                .d("USERNAME", "\"evomaster_2918_input\"")
-            .and().insertInto("CONSUMERS", 1848L)
-                .d("BALANCE_CURRENCY", "\"k\"")
-                .d("BALANCE_FRACTIONAL_PART", "-7413")
-                .d("BALANCE_INTEGER_PART", "65984")
-                .d("NAME", "\"kn6wRSPU\"")
-                .d("ID", "6")
-            .and().insertInto("USERS", 1847L)
-                .d("PASSWORD", "\"evomaster_2903_inpu\"")
-                .d("USERNAME", "\"evomaster_14875_input\"")
-            .and().insertInto("CONSUMERS", 1846L)
-                .d("BALANCE_CURRENCY", "\"uSxheZRfwpW1PO\"")
-                .d("BALANCE_FRACTIONAL_PART", "524288")
-                .d("BALANCE_INTEGER_PART", "-8387699")
-                .d("NAME", "\"BgZa0M9f\"")
-                .r("ID", 1849L)
-            .and().insertInto("PRINT_REQUESTS", 1845L)
-            .and().insertInto("DOCUMENTS", 1844L)
-                .d("FILE_NAME", "\"evomaster_2920_input\"")
-                .d("TOTAL_PAGES", "-33554432")
-            .and().insertInto("PRINTSHOPS", 1843L)
-                .d("ADDRESS", "\"evomaster_2906_input\"")
-                .d("AVG_RATING", "0.8609388508770977")
-                .d("BALANCE_CURRENCY", "\"evomaster_2756_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "65595")
-                .d("BALANCE_INTEGER_PART", "-16")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomarter_2757_inputr\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_14877_input\"")
-                .d("NIF", "\"evomaster_2907_input\"")
-            .and().insertInto("PRINTSHOPS", 1842L)
-                .d("ADDRESS", "\"evomaster_2759_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_14885_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "4194600")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"YYO\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"\"")
-                .d("NIF", "\"evomaster_14879_input\"")
-            .and().insertInto("USERS", 1841L)
-                .d("PASSWORD", "\"evomaster_14880_input\"")
-                .d("USERNAME", "\"\"")
-            .and().insertInto("CONSUMERS", 1840L)
-                .d("BALANCE_CURRENCY", "\"evomaster_2923_inputu\"")
-                .d("BALANCE_FRACTIONAL_PART", "117440063")
-                .d("BALANCE_INTEGER_PART", "-2080800")
-                .d("NAME", "\"DqiCilUVrI\"")
-                .d("ID", "9")
-            .and().insertInto("USERS", 1839L)
-                .d("PASSWORD", "\"evomaster_14881_input\"")
-                .d("USERNAME", "\"evomaster_2765_input\"")
-            .and().insertInto("CONSUMERS", 1838L)
-                .d("BALANCE_CURRENCY", "\"evomast]r_2848_inpu\"")
-                .d("BALANCE_FRACTIONAL_PART", "16777216")
-                .d("BALANCE_INTEGER_PART", "-33554368")
-                .d("NAME", "\"evomaster_2924_input\"")
-                .r("ID", 1847L)
-            .and().insertInto("PRINT_REQUESTS", 1837L)
-            .and().insertInto("DOCUMENTS", 1836L)
-                .d("FILE_NAME", "\"tixMHaT4ocfpA\"")
-                .d("TOTAL_PAGES", "0")
-            .and().insertInto("PRINTSHOPS", 1835L)
-                .d("ADDRESS", "\"evomaster_14886_input\"")
-                .d("AVG_RATING", "0.761")
-                .d("BALANCE_CURRENCY", "\"evomaster_2767_inpu\"")
-                .d("BALANCE_FRACTIONAL_PART", "67108949")
-                .d("BALANCE_INTEGER_PART", "640")
-                .d("LATITUDE", "5006.942")
-                .d("LOGO", "\"F\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"Uy1whyrF0NkEMPo\"")
-                .d("NIF", "\"evomaster_2927_input\"")
-            .and().insertInto("PRINTSHOPS", 1834L)
-                .d("ADDRESS", "\"fZRH3fGJ8Jg2jtle\"")
-                .d("AVG_RATING", "1.0369754449592683E7")
-                .d("BALANCE_CURRENCY", "\"FFMOTXn9F3wo1l\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "16")
-                .d("LATITUDE", "0.405471014")
-                .d("LOGO", "\"evomUster_2U49_inpu\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"cqt\"")
-                .d("NIF", "\"evomaster_14887_input\"")
-            .and().insertInto("USERS", 1833L)
-                .d("PASSWORD", "\"lMF\"")
-                .d("USERNAME", "\"mBdH\"")
-            .and().insertInto("CONSUMERS", 1832L)
-                .d("BALANCE_CURRENCY", "\"evomaster_2852_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-120")
-                .d("NAME", "\"evomaster_2930_input\"")
-                .d("ID", "11")
-            .and().insertInto("USERS", 1831L)
-                .d("PASSWORD", "\"UvoU`uUfU_27UUUUnUut\"")
-                .d("USERNAME", "\"evomaster_14883_input\"")
-            .and().insertInto("CONSUMERS", 1830L)
-                .d("BALANCE_CURRENCY", "\"evomaster_2775_inpu\"")
-                .d("BALANCE_FRACTIONAL_PART", "-1048576")
-                .d("BALANCE_INTEGER_PART", "262144")
-                .d("NAME", "\"evomaster_14888_input\"")
-                .d("ID", "13")
-            .and().insertInto("PRINT_REQUESTS", 1829L)
-            .and().insertInto("DOCUMENTS", 1828L)
-                .d("FILE_NAME", "\"VL\u0081H8BiMxwY4Hn\"")
-                .d("TOTAL_PAGES", "886")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/documents/2")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/EmployeeController_55_getEmployees
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/documents/2"));
-    }
-    
-    
-    @Test
-    public void test_25_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/mt09YlXm1X/notifications")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_220_deleteAllNotifications
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/mt09YlXm1X/notifications"));
-    }
-    
-    
-    @Test
-    public void test_26_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/consumer/ZqMa8qGhV8MNhXP/notifications")
+                .body("G9Xlax76_vDQfL")
+                .put(baseUrlOfSut + "/news/951/text")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_234_readAllNotifications
+                .statusCode(500) // org/tsdes/spring/examples/news/api/NewsRestApi_233_updateText
                 .assertThat()
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json")
                 .body("'status'", numberMatches(500.0))
                 .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/ZqMa8qGhV8MNhXP/notifications"));
+                .body("'message'", containsString("Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction"))
+                .body("'path'", containsString("/news/951/text"));
     }
     
     
     @Test
-    public void test_27_with500() throws Exception {
+    public void test_1_with500() throws Exception {
         
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"managerName\": \"LwX3dUGLbw4Ew\", " + 
-                    " \"managerPassword\": \"kR8Z9Xx6oY2\", " + 
-                    " \"pShopAddress\": \"60y2VCPY\", " + 
-                    " \"pShopNIF\": \"0Fn0KvJRXPXc\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/request/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/RegisterRequestController_58_registerRequest
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/request/register"));
-    }
-    
-    
-    @Test
-    public void test_28_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 2084L)
-                .d("ADDRESS", "\"evomaster_6304_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_6305_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-1")
-                .d("LATITUDE", "138.73135230217528")
-                .d("LOGO", "\"Mv2iSbPCl7\"")
-                .d("LONGITUDE", "2262822.056490671")
-                .d("NAME", "\"UUUmaUlEr_U7R7_InPut\"")
-                .d("NIF", "\"evomaster_6306_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"infLim\": 738.0, " + 
-                    " \"priceA3DUPLEX\": \"G5f\", " + 
-                    " \"priceA4SIMPLEX\": \"ZlJubE\", " + 
-                    " \"supLim\": 105.0 " + 
+                    " \"authorId\": \"d9PtNII\", " + 
+                    " \"country\": \"x\", " + 
+                    " \"text\": \"sO9qN5XuhlYw\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/8/pricetable/deletepaper")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$Colors_28_valueOf
+                .statusCode(500) // org/tsdes/spring/examples/news/api/NewsRestApi_123_createNews
                 .assertThat()
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json")
                 .body("'status'", numberMatches(500.0))
                 .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("Name is null"))
-                .body("'path'", containsString("/printshops/8/pricetable/deletepaper"));
+                .body("'message'", containsString("Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction"))
+                .body("'path'", containsString("/news"));
     }
     
     
     @Test
-    public void test_29_with500() throws Exception {
+    public void test_2() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"colors\": \"qLR_l7fPqrWm\", " + 
-                    " \"infLim\": 996.0, " + 
-                    " \"priceA3DUPLEX\": \"\", " + 
-                    " \"priceA3SIMPLEX\": \"XCV8\", " + 
-                    " \"priceA4SIMPLEX\": \"Bpwc\", " + 
-                    " \"supLim\": 106.0 " + 
+                    " \"authorId\": \"50RmwP7s_6AMY0_P\", " + 
+                    " \"country\": \"Z0hgS3y43\", " + 
+                    " \"newsId\": \"8\" " + 
                     " } ")
-                .put(baseUrlOfSut + "/printshops/312/pricetable/papers")
+                .put(baseUrlOfSut + "/news/t4Z")
                 .then()
-                .statusCode(403)
+                .statusCode(409)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/312/pricetable/papers"));
+                .contentType("")
+                .body(isEmptyOrNullString());
         
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/consumer/requests")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/requests"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"id\": 670.0, " + 
-                    " \"managerName\": \"vYXCx\", " + 
-                    " \"pShopAddress\": \"d6VrOEYnW4Xz7s\", " + 
-                    " \"pShopDateRequest\": \"4_L\", " + 
-                    " \"pShopDateRequestAccepted\": \"7\", " + 
-                    " \"pShopLongitude\": 0.5181459854176795, " + 
-                    " \"pShopNIF\": \"Fk5LT_i2bU_BFr\", " + 
-                    " \"pShopName\": \"OwGYqPjQe\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/request/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/RegisterRequestController_58_registerRequest
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/request/register"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .options(baseUrlOfSut + "/consumer/subscribe")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news?" + 
+                    "authorId=HMLb2vw8juge680l&" + 
+                    "country=0sLIkrSr")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_30_with500() throws Exception {
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(0))
+                .body("isEmpty()", is(true));
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"id\": 444.0, " + 
-                    " \"managerPassword\": \"r1n\", " + 
-                    " \"managerUsername\": \"4jvBUV7ASxRobfFO\", " + 
-                    " \"pShopAddress\": \"qysI_I3\", " + 
-                    " \"pShopLatitude\": 0.5213712382689872, " + 
-                    " \"pShopLongitude\": 0.4854628064206904 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/request/register")
+                .get(baseUrlOfSut + "/news/ye7R%5C5zXqoSH87Vf")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/RegisterRequestController_58_registerRequest
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/request/register"));
+                .contentType("");
     }
     
     
     @Test
-    public void test_31_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 2084L)
-                .d("ADDRESS", "\"3VMNYm6C\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_4098_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "4195134")
-                .d("BALANCE_INTEGER_PART", "63")
-                .d("LATITUDE", "138.73135230217528")
-                .d("LOGO", "\"OgVu3Fx1\"")
-                .d("LONGITUDE", "0.172")
-                .d("NAME", "\"evomaster_3727_input\"")
-                .d("NIF", "\"eromaster_3729_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
+    public void test_3() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"infLim\": 738.0, " + 
-                    " \"priceA3DUPLEX\": \"G5f\", " + 
-                    " \"priceA3SIMPLEX\": \"Imwp\", " + 
-                    " \"priceA4DUPLEX\": \"q5RFViChaXl\", " + 
-                    " \"supLim\": 105.0 " + 
+                    " \"country\": \"dG\", " + 
+                    " \"newsId\": \"uX_\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/8/pricetable/deletepaper")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/ItemFactory_84_fromPaperTableItemToPaperItems
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/8/pricetable/deletepaper"));
-    }
-    
-    
-    @Test
-    public void test_32_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/notifications/989")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_82_removeNotification
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.EmptyResultDataAccessException"))
-                .body("'message'", containsString("No class io.github.proxyprint.kitchen.models.notifications.Notification entity with id 989 exists!"))
-                .body("'path'", containsString("/notifications/989"));
-    }
-    
-    
-    @Test
-    public void test_33_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/notifications/-1406451737")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_87_readNotification
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/notifications/-1406451737"));
-    }
-    
-    
-    @Test
-    public void test_34_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/consumer/561964634/notify")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/notifications/NotificationsController_59_greeting
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/561964634/notify"));
-    }
-    
-    
-    @Test
-    public void test_35_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .contentType("application/json")
+                .contentType("");
+        
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"coverSpecs\": \"lZ\", " + 
-                    " \"name\": \"\" " + 
+                    " \"country\": \"dG\", " + 
+                    " \"creationTime\": \"1990-02-01T22:34:55\", " + 
+                    " \"id\": \"r2pQTf3G\", " + 
+                    " \"newsId\": \"FpAFjPNZsJQ\", " + 
+                    " \"text\": \"tcw_sDCk\" " + 
                     " } ")
-                .put(baseUrlOfSut + "/consumer/402/printingschemas/429")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintingSchemaController_121_editConsumerPrintingSchema
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/402/printingschemas/429"));
-    }
-    
-    
-    @Test
-    public void test_36_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 2476L)
-                .d("ADDRESS", "\"evomaster_17030_input\"")
-                .d("AVG_RATING", "0.25501837")
-                .d("BALANCE_CURRENCY", "\"evomaster_4829_inputr\"")
-                .d("BALANCE_FRACTIONAL_PART", "-31220")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.954205223828")
-                .d("LOGO", "\"lVmHWY_\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_17047_input\"")
-                .d("NIF", "\"3ZGDqufhW6j\"")
-            .and().insertInto("PRINTSHOPS", 2475L)
-                .d("ADDRESS", "\"eUgmUsUur_U82U_UUpulT\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"wgUo7btwoA5Lkq0\"")
-                .d("BALANCE_FRACTIONAL_PART", "17350")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_17033_input\"")
-                .d("LONGITUDE", "0.7854438381894809")
-                .d("NAME", "\"evomaster_17023_input\"")
-                .d("NIF", "\"Yt2O90jbNN\"")
-            .and().insertInto("USERS", 2474L)
-                .d("PASSWORD", "\"evomaster_27891_input\"")
-                .d("USERNAME", "\"evomaster_17035_input\"")
-            .and().insertInto("CONSUMERS", 2473L)
-                .d("BALANCE_CURRENCY", "\"oe2F\"")
-                .d("BALANCE_FRACTIONAL_PART", "1048899")
-                .d("BALANCE_INTEGER_PART", "-261952")
-                .d("NAME", "\"evnmaster_4825_input\"")
-                .d("ID", "13")
-            .and().insertInto("USERS", 2472L)
-                .d("PASSWORD", "\"evomasteq_17036_input\"")
-                .d("USERNAME", "\"evomaster_17048_input\"")
-            .and().insertInto("CONSUMERS", 2471L)
-                .d("BALANCE_CURRENCY", "\"evomaster_17037_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "512")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"U\"")
-                .d("ID", "16")
-            .and().insertInto("PRINT_REQUESTS", 2470L)
-            .and().insertInto("PRINTSHOPS", 2469L)
-                .d("ADDRESS", "\"E6uZzUwPAc5\"")
-                .d("AVG_RATING", "0.26277230277613894")
-                .d("BALANCE_CURRENCY", "\"evomaster_17038_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "445")
-                .d("LATITUDE", "0.856509934432724")
-                .d("LOGO", "\"ewUmastev_U7050_inpyt\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"i\"")
-                .d("NIF", "\"Uq77xRUU\"")
-            .and().insertInto("PRINTSHOPS", 2468L)
-                .d("ADDRESS", "\"BUQDUYUUH\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_17039_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "990")
-                .d("LATITUDE", "0.7502788423687476")
-                .d("LOGO", "\"evomaster_17040_inUut\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"\"")
-                .d("NIF", "\"evomasterc4829_ifputr\"")
-            .and().insertInto("USERS", 2467L)
-                .d("PASSWORD", "\"evomaster_17026_inpu\"")
-                .d("USERNAME", "\"Ydb9lis\"")
-            .and().insertInto("CONSUMERS", 2466L)
-                .d("BALANCE_CURRENCY", "\"EFP7saIx1nBP\"")
-                .d("BALANCE_FRACTIONAL_PART", "-262144")
-                .d("BALANCE_INTEGER_PART", "1896830526")
-                .d("NAME", "\"evomaster_17041_input\"")
-                .d("ID", "12")
-            .and().insertInto("USERS", 2465L)
-                .d("PASSWORD", "\"eUUmasUerU4832_inls\"")
-                .d("USERNAME", "\"T\"")
-            .and().insertInto("CONSUMERS", 2464L)
-                .d("BALANCE_CURRENCY", "\"N7o1INMIximU6u\"")
-                .d("BALANCE_FRACTIONAL_PART", "114")
-                .d("BALANCE_INTEGER_PART", "33554942")
-                .d("NAME", "\"evomaster_27908_input\"")
-                .r("ID", 2465L)
-            .and().insertInto("PRINT_REQUESTS", 2463L)
-            .and().insertInto("PRINTSHOPS", 2462L)
-                .d("ADDRESS", "\"qar_bcG21LF\"")
-                .d("AVG_RATING", "4.9E-324")
-                .d("BALANCE_CURRENCY", "\"evomaster_17042_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "67109206")
-                .d("BALANCE_INTEGER_PART", "512")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_4834_input\"")
-                .d("LONGITUDE", "278074.79915724066")
-                .d("NAME", "\"evomaster_4835_inpu\"")
-                .d("NIF", "\"evomastcr_17027_input\"")
-            .and().insertInto("PRINTSHOPS", 2461L)
-                .d("ADDRESS", "\"evomaster[15028_inpUt\"")
-                .d("AVG_RATING", "2.23")
-                .d("BALANCE_CURRENCY", "\"9igxbhvBqpZ\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-128")
-                .d("LATITUDE", "5.40151071308E7")
-                .d("LOGO", "\"q47NOuqFhL5\"")
-                .d("LONGITUDE", "0.39420456465")
-                .d("NAME", "\"b7ptIqTwpsAVF\"")
-                .d("NIF", "\"TwO1DXMFClcm\"")
-            .and().insertInto("USERS", 2460L)
-                .d("PASSWORD", "\"evomaster_17051_input\"")
-                .d("USERNAME", "\"evomastep_17029_input\"")
-            .and().insertInto("CONSUMERS", 2459L)
-                .d("BALANCE_CURRENCY", "\"evUmasdUr_4837_inpU\"")
-                .d("BALANCE_FRACTIONAL_PART", "520")
-                .d("BALANCE_INTEGER_PART", "-4")
-                .d("NAME", "\"AlSDKYM4Hg\"")
-                .d("ID", "17")
-            .and().insertInto("USERS", 2458L)
-                .d("PASSWORD", "\"UXPrgr4zZiUo\"")
-                .d("USERNAME", "\"evomaster_17052_input\"")
-            .and().insertInto("CONSUMERS", 2457L)
-                .d("BALANCE_CURRENCY", "\"Hb_zrzjAEhUx0kpg\"")
-                .d("BALANCE_FRACTIONAL_PART", "360")
-                .d("BALANCE_INTEGER_PART", "-64")
-                .d("NAME", "\"evomaster_17053_input\"")
-                .d("ID", "19")
-            .and().insertInto("PRINT_REQUESTS", 2456L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(400.0))
+                .body("'error'", containsString("Bad Request"))
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"1990-02-01T"))
+                .body("'path'", containsString("/news"));
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"requestJSON\": \"QGk5Dk3GKPE4p\" " + 
+                    " \"country\": \"dG\", " + 
+                    " \"newsId\": \"\", " + 
+                    " \"text\": \"oNMg4Yi\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/consumer/budget")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/repositories/UserService_42_loadUserByUsername
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.web.multipart.MultipartException"))
-                .body("'message'", containsString("Could not parse multipart servlet request; nested exception is javax.servlet.ServletException: org.apache.tomcat.util.http.fileupload.FileUploadBase$InvalidContentTypeException: the request doesn't contain a multipart/form-data or multipart/mixed stream, content type header is application/json"))
-                .body("'path'", containsString("/consumer/budget"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/info")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(200)
+                .statusCode(400)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"success\":true}"));
+                .contentType("");
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/requests/cancel/4")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_289_cancelRequests
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/requests/cancel/4"));
-    }
-    
-    
-    @Test
-    public void test_37_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/history")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/history"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
+                .contentType("application/json;charset=UTF-8")
                 .body(" { " + 
-                    " \"price\": \"06_e\", " + 
-                    " \"supLim\": 117.0 " + 
+                    " \"authorId\": \"HKBwp9H7a8uck\", " + 
+                    " \"country\": \"dG\", " + 
+                    " \"id\": \"s9\", " + 
+                    " \"newsId\": \"xfctY84s1VZjZCn\", " + 
+                    " \"text\": \"FjYG5QyyTX\" " + 
                     " } ")
-                .put(baseUrlOfSut + "/printshops/9/pricetable/rings")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$RingType_38_valueOf
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("Name is null"))
-                .body("'path'", containsString("/printshops/9/pricetable/rings"));
-    }
-    
-    
-    @Test
-    public void test_38_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 2476L)
-                .d("ADDRESS", "\"evomaster_17030_input\"")
-                .d("AVG_RATING", "0.25501837")
-                .d("BALANCE_CURRENCY", "\"evomaster_4829_inputr\"")
-                .d("BALANCE_FRACTIONAL_PART", "-31220")
-                .d("BALANCE_INTEGER_PART", "-7843")
-                .d("LATITUDE", "0.954205223828")
-                .d("LOGO", "\"evomaster_17031_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_17047_input\"")
-                .d("NIF", "\"3ZGDqufgW6j\"")
-            .and().insertInto("PRINTSHOPS", 2475L)
-                .d("ADDRESS", "\"eUgmUsUur_U82U_UUpulT\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_27906_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "17350")
-                .d("BALANCE_INTEGER_PART", "131107")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_17033_input\"")
-                .d("LONGITUDE", "0.7854438381894809")
-                .d("NAME", "\"evomaster_17023_input\"")
-                .d("NIF", "\"evomaster_17034_input\"")
-            .and().insertInto("USERS", 2474L)
-                .d("PASSWORD", "\"evomaster_27891_input\"")
-                .d("USERNAME", "\"evomaster_17035_input\"")
-            .and().insertInto("CONSUMERS", 2473L)
-                .d("BALANCE_CURRENCY", "\"oe2F\"")
-                .d("BALANCE_FRACTIONAL_PART", "1048899")
-                .d("BALANCE_INTEGER_PART", "-262144")
-                .d("NAME", "\"evomaster_4825_input\"")
-                .d("ID", "13")
-            .and().insertInto("USERS", 2472L)
-                .d("PASSWORD", "\"evomasteq_17036_input\"")
-                .d("USERNAME", "\"evomaster_17048_input\"")
-            .and().insertInto("CONSUMERS", 2471L)
-                .d("BALANCE_CURRENCY", "\"evomaster_17037_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"p\"")
-                .d("ID", "16")
-            .and().insertInto("PRINT_REQUESTS", 2470L)
-            .and().insertInto("PRINTSHOPS", 2469L)
-                .d("ADDRESS", "\"evomaster_17049_input\"")
-                .d("AVG_RATING", "0.26277230277613894")
-                .d("BALANCE_CURRENCY", "\"evomaster_17038_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "445")
-                .d("LATITUDE", "0.856509934432724")
-                .d("LOGO", "\"ewUmastev_U7050_inpyt\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"e\"")
-                .d("NIF", "\"Uq77xRUU\"")
-            .and().insertInto("PRINTSHOPS", 2468L)
-                .d("ADDRESS", "\"BUQDUYUUH\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_17039_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "594")
-                .d("BALANCE_INTEGER_PART", "994")
-                .d("LATITUDE", "0.7502788423687476")
-                .d("LOGO", "\"evomaster_17040_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"\"")
-                .d("NIF", "\"evomaster_4829_ifputr\"")
-            .and().insertInto("USERS", 2467L)
-                .d("PASSWORD", "\"evomaster_17026_input\"")
-                .d("USERNAME", "\"Ydb9lis\"")
-            .and().insertInto("CONSUMERS", 2466L)
-                .d("BALANCE_CURRENCY", "\"EFP7saIx1nBP\"")
-                .d("BALANCE_FRACTIONAL_PART", "-262144")
-                .d("BALANCE_INTEGER_PART", "1896830526")
-                .d("NAME", "\"evomaster_17041_input\"")
-                .d("ID", "12")
-            .and().insertInto("USERS", 2465L)
-                .d("PASSWORD", "\"eUUmasUerU4832_inlu\"")
-                .d("USERNAME", "\"T\"")
-            .and().insertInto("CONSUMERS", 2464L)
-                .d("BALANCE_CURRENCY", "\"N7o1INMIximU6u\"")
-                .d("BALANCE_FRACTIONAL_PART", "114")
-                .d("BALANCE_INTEGER_PART", "33554942")
-                .d("NAME", "\"evomaster_27908_input\"")
-                .r("ID", 2465L)
-            .and().insertInto("PRINT_REQUESTS", 2463L)
-            .and().insertInto("PRINTSHOPS", 2462L)
-                .d("ADDRESS", "\"qar_bcG21LF\"")
-                .d("AVG_RATING", "4.9E-324")
-                .d("BALANCE_CURRENCY", "\"evomaster_17042_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "67109206")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_4834_input\"")
-                .d("LONGITUDE", "278074.79915724066")
-                .d("NAME", "\"evomaster_4835_inpu\"")
-                .d("NIF", "\"evomastcr_17027_input\"")
-            .and().insertInto("PRINTSHOPS", 2461L)
-                .d("ADDRESS", "\"evomaster[15028_inpUt\"")
-                .d("AVG_RATING", "2.232939272923154")
-                .d("BALANCE_CURRENCY", "\"9igxbhvBqpZ\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-128")
-                .d("LATITUDE", "5.40151071308E7")
-                .d("LOGO", "\"q47NOuqFhL5\"")
-                .d("LONGITUDE", "0.39420456465")
-                .d("NAME", "\"b7ptIqTwpsAVF\"")
-                .d("NIF", "\"TwO1DXMFClcm\"")
-            .and().insertInto("USERS", 2460L)
-                .d("PASSWORD", "\"evomaster_17051_input\"")
-                .d("USERNAME", "\"evomastep_17029_input\"")
-            .and().insertInto("CONSUMERS", 2459L)
-                .d("BALANCE_CURRENCY", "\"evUmasdUr_4837_inpU\"")
-                .d("BALANCE_FRACTIONAL_PART", "520")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"AlSDKYM4Hg\"")
-                .d("ID", "17")
-            .and().insertInto("USERS", 2458L)
-                .d("PASSWORD", "\"UXPrgr4zZiUo\"")
-                .d("USERNAME", "\"evomaster_17052_input\"")
-            .and().insertInto("CONSUMERS", 2457L)
-                .d("BALANCE_CURRENCY", "\"Hb_zrzjAEhUx0kpg\"")
-                .d("BALANCE_FRACTIONAL_PART", "360")
-                .d("BALANCE_INTEGER_PART", "-64")
-                .d("NAME", "\"evomaster_17053_input\"")
-                .d("ID", "19")
-            .and().insertInto("PRINT_REQUESTS", 2456L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
+                .contentType("");
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/info")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news?" + 
+                    "authorId=HKBwp9H7a8uck&" + 
+                    "country=dG")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"success\":true}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/requests/cancel/4")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_289_cancelRequests
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/requests/cancel/4"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/printshops/stats")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/stats"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(0))
+                .body("isEmpty()", is(true));
     }
     
     
     @Test
-    public void test_39_with500() throws Exception {
+    public void test_4() throws Exception {
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/727860154/printingschemas/-6104895508079210785")
+        given().accept("application/json")
+                .get(baseUrlOfSut + "/countries")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintingSchemaController_98_deleteConsumerPrintingSchema
+                .statusCode(200)
                 .assertThat()
                 .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/727860154/printingschemas/-6104895508079210785"));
+                .body("size()", equalTo(247))
+                .body("", hasItems("Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"));
     }
     
     
     @Test
-    public void test_40_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 1170L)
-                .d("PASSWORD", "\"EN8Bjz\"")
-                .d("USERNAME", "\"evomakter_U028UinpUt\"")
-            .and().insertInto("PRINTSHOPS", 1169L)
-                .d("ADDRESS", "\"evomaster_2385_input\"")
-                .d("AVG_RATING", "1.7342963993241243")
-                .d("BALANCE_CURRENCY", "\"evomaster_A030_inpu\"")
-                .d("BALANCE_FRACTIONAL_PART", "16")
-                .d("BALANCE_INTEGER_PART", "255")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"6\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_24136_input\"")
-                .d("NIF", "\"evomaster_1031_input\"")
-            .and().insertInto("EMPLOYEES", 1168L)
-                .d("NAME", "\"evomaster_2392_inputi\"")
-                .d("ID", "2")
-            .and().insertInto("USERS", 1167L)
-                .d("PASSWORD", "\"evomaster_2387_input\"")
-                .d("USERNAME", "\"tAWyPcXfRha\"")
-            .and().insertInto("PRINTSHOPS", 1166L)
-                .d("ADDRESS", "\"evomaster_7741_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_7742_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "744")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_2393_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_2394_input\"")
-                .d("NIF", "\"evomaster_2395_input\"")
-            .and().insertInto("EMPLOYEES", 1165L)
-                .d("NAME", "\"68m\"")
-                .r("ID", 1167L)
-            .and().insertInto("USERS", 1164L)
-                .d("PASSWORD", "\"VU\"")
-                .d("USERNAME", "\"evomaster_2396_inputc\"")
-            .and().insertInto("PRINTSHOPS", 1163L)
-                .d("ADDRESS", "\"evomaUtev_2397_iopuU\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_1038_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_24135_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_7743_input\"")
-                .d("NIF", "\"mvoeasUeU_1039_input\"")
-            .and().insertInto("EMPLOYEES", 1162L)
-                .d("NAME", "\"evomaster_2398_input\"")
-                .r("ID", 1164L)
-            .and().insertInto("USERS", 1161L)
-                .d("PASSWORD", "\"eUomawterU1040_UUputn\"")
-                .d("USERNAME", "\"evomaster_2389_input\"")
-            .and().insertInto("PRINTSHOPS", 1160L)
-                .d("ADDRESS", "\"R\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"\u0018T1p8H\"")
-                .d("BALANCE_FRACTIONAL_PART", "853")
-                .d("BALANCE_INTEGER_PART", "1048576")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_2390_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"UvomacTeqUU0U2Uan`uv\"")
-                .d("NIF", "\"evomaster_2399_input\"")
-            .and().insertInto("EMPLOYEES", 1159L)
-                .d("NAME", "\"XLB\"")
-                .r("ID", 1170L)
+    public void test_5() throws Exception {
+        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 515L)
+                .d("ID", "905")
+                .d("AUTHOR_ID", "\"HMLb2vw8juge680z\"")
+                .d("COUNTRY", "\"(fg_jn\"")
+                .d("CREATION_TIME", "\"2091-07-11 04:10:00\"")
+                .d("TEXT", "\"KZ0ifW3y88\"")
+            .and().insertInto("NEWS_ENTITY", 514L)
+                .d("ID", "1556")
+                .d("AUTHOR_ID", "\"BKPb.xz9lsog684or7[9y\"")
+                .d("COUNTRY", "\"T4\"")
+                .d("CREATION_TIME", "\"2036-06-01 18:59:08\"")
+                .d("TEXT", "\"_7\"")
+            .and().insertInto("NEWS_ENTITY", 513L)
+                .d("ID", "8")
+                .d("AUTHOR_ID", "\"50RmwL7s_6AQY0\"")
+                .d("COUNTRY", "\"p>^tynoHGhs6Ih`Nh<YS\"")
+                .d("CREATION_TIME", "\"1910-12-01 04:08:00\"")
+                .d("TEXT", "\"yt2Bl2\"")
             .dtos();
         controller.execInsertionsIntoDatabase(insertions);
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .delete(baseUrlOfSut + "/printshops/131072/employees/2")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/ManagerController_154_deleteEmployee
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/printshops/131072/employees/2"));
-    }
-    
-    
-    @Test
-    public void test_41_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"id\": -8.5703245374439194E17, " + 
-                    " \"name\": \"kiObX6TbMubizp\", " + 
-                    " \"paperSpecs\": \"uGEQ\" " + 
+                    " \"country\": \"Z0hfS3y43\", " + 
+                    " \"id\": \"50RmwP7s_6AQY0]\", " + 
+                    " \"newsId\": \"8\", " + 
+                    " \"text\": \"8\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/consumer/441/printingschemas")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintingSchemaController_72_addNewConsumerPrintingSchema
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/441/printingschemas"));
-    }
-    
-    
-    @Test
-    public void test_42_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 959L)
-                .d("ADDRESS", "\"evomaster_930_input\"")
-                .d("AVG_RATING", "0.9522093457734832")
-                .d("BALANCE_CURRENCY", "\"GAZgk9ZshazlZ\"")
-                .d("BALANCE_FRACTIONAL_PART", "621")
-                .d("BALANCE_INTEGER_PART", "132040")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"YgQFsJuo96lFiUkI\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"tUf?w4bVSDUC28DF\"")
-                .d("NIF", "\"m\"")
-            .and().insertInto("PRICETABLES", 958L)
-                .d("PRINTSHOP_ID", "4")
-                .d("ITEM", "\"evomaster_931_input\"")
-            .and().insertInto("PRINTSHOPS", 957L)
-                .d("ADDRESS", "\"pI5ouh_\"")
-                .d("AVG_RATING", "4.9E-324")
-                .d("BALANCE_CURRENCY", "\"evomaster_8352_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "382")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.7788531869916465")
-                .d("LOGO", "\"eUoUasUer_U35U_Unput\"")
-                .d("LONGITUDE", "-135147.16501990517")
-                .d("NAME", "\"evomaster_21637_input\"")
-                .d("NIF", "\"evomaster_8354_input\"")
-            .and().insertInto("PRICETABLES", 956L)
-                .d("PRINTSHOP_ID", "5")
-                .d("ITEM", "\"evomaster_933_input\"")
-            .and().insertInto("PRINTSHOPS", 955L)
-                .d("ADDRESS", "\"UvUmUsteU`935_inpuUc\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"i8NWGs9_tYcPfo\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.44058947683698924")
-                .d("LOGO", "\"Uvom]steUUU3U_inpUW\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"SSyXCgFxEI\"")
-                .d("NIF", "\"evomasUerU835EUUnUut\"")
-            .and().insertInto("PRICETABLES", 954L)
-                .d("PRINTSHOP_ID", "5")
-                .d("ITEM", "\"evomaster_936_input\"")
-            .and().insertInto("PRINTSHOPS", 953L)
-                .d("ADDRESS", "\"evomaster_937_input\"")
-                .d("AVG_RATING", "8.32357924888")
-                .d("BALANCE_CURRENCY", "\"evomaster_21638_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "2")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.841")
-                .d("LOGO", "\"U\"")
-                .d("LONGITUDE", "-1.0856068906885634")
-                .d("NAME", "\"UziUXzUA8U^MUegW\"")
-                .d("NIF", "\"evomaster_8396_input\"")
-            .and().insertInto("PRICETABLES", 952L)
-                .d("PRINTSHOP_ID", "2")
-                .d("ITEM", "\"evomaster_8397_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .put(baseUrlOfSut + "/consumer/prefix_subscribe.%5CE.*%7C%5E(%5CQsubscribe.%5CE.*)$%7C%5CQsubscribe_postfix/notifications")
+                .put(baseUrlOfSut + "/news/8")
                 .then()
                 .statusCode(400)
                 .assertThat()
                 .contentType("");
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" \"evomaster_941_input\" ")
-                .post(baseUrlOfSut + "/request/reject/0")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news?" + 
+                    "authorId=GMLb2vw8juge681l&" + 
+                    "country=%2CkRNjn")
                 .then()
-                .statusCode(403)
+                .statusCode(200)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/reject/0"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(0))
+                .body("isEmpty()", is(true));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/consumer/0/printingschemas")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/0/printingschemas"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/32770/pricetable")
+        given().accept("application/json")
+                .get(baseUrlOfSut + "/countries")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
                 .contentType("application/json")
-                .body(" { " + 
-                    " \"rolesSet\": [ " + 
-                    " \"SBZJ\" " + 
-                    " ] " + 
-                    " } ")
-                .post(baseUrlOfSut + "/admin/register")
+                .body("size()", equalTo(247))
+                .body("", hasItems("Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"));
+        
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .delete(baseUrlOfSut + "/news/;a3")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_77_newAdmin
+                .statusCode(405)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/register"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(405.0))
+                .body("'error'", containsString("Method Not Allowed"))
+                .body("'message'", containsString("Request method 'DELETE' not supported"))
+                .body("'path'", containsString("/news/;a3"));
         
-        given().accept("*/*")
-                .options(baseUrlOfSut + "/consumer/subscribe")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news/905")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'newsId'", containsString("905"))
+                .body("'authorId'", containsString("HMLb2vw8juge680z"))
+                .body("'text'", containsString("KZ0ifW3y88"))
+                .body("'country'", containsString("(fg_jn"))
+                .body("'creationTime'", containsString("2091-07-11T"));
     }
     
     
     @Test
-    public void test_43_with500() throws Exception {
+    public void test_6() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"priceA3DUPLEX\": \"\", " + 
-                    " \"priceA4SIMPLEX\": \"-\", " + 
-                    " \"supLim\": -160.0 " + 
+                    " \"authorId\": \"Rpa5Dn8nXR\", " + 
+                    " \"country\": \"kG7bI\", " + 
+                    " \"newsId\": \"fGNUnGgovAgIbycy\", " + 
+                    " \"text\": \"YQ6B7x_zY\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/8/pricetable/papers")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/PrintShop_221_insertPaperTableItemsInPriceTable
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/8/pricetable/papers"));
+                .contentType("");
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"colors\": \"\", " + 
-                    " \"infLim\": 194.0, " + 
-                    " \"priceA3DUPLEX\": \"e\", " + 
-                    " \"priceA3SIMPLEX\": \"Z\", " + 
-                    " \"supLim\": -130.0 " + 
+                    " \"country\": \"kG7bI\", " + 
+                    " \"creationTime\": \"1964-01-02T00:29:48\", " + 
+                    " \"id\": \"k\", " + 
+                    " \"newsId\": \"XzNUpDepcIR1csf_\", " + 
+                    " \"text\": \"g5\" " + 
                     " } ")
-                .put(baseUrlOfSut + "/printshops/8/pricetable/papers")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/PrintShop_217_insertPaperTableItemsInPriceTable
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/8/pricetable/papers"));
-    }
-    
-    
-    @Test
-    public void test_44_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/printdocument/599/budget")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintRequestController_328_calcBudgetForPrintRecipe
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printdocument/599/budget"));
-    }
-    
-    
-    @Test
-    public void test_45_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/printdocument")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintRequestController_107_processSumitedFiles
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.ClassCastException"))
-                .body("'message'", containsString("org.springframework.security.web.servletapi.HttpServlet3RequestFactory$Servlet3SecurityContextHolderAwareRequestWrapper cannot be cast to org.springframework.web.multipart.MultipartHttpServletRequest"))
-                .body("'path'", containsString("/printdocument"));
-    }
-    
-    
-    @Test
-    public void test_46_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"key_0\": \"lCF5Jzka\", " + 
-                    " \"key_1\": \"P\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/294/reviews")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/consumer/info")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/info"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"managerName\": \"qbbQ6ORog5iBF\", " + 
-                    " \"pShopAddress\": \"\", " + 
-                    " \"pShopNIF\": \"ZKqNXOR\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/request/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/RegisterRequestController_58_registerRequest
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/request/register"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"balance\": { " + 
-                    " \"currency\": \"L8QqkY\", " + 
-                    " \"integerPart\": 606.0, " + 
-                    " \"moneyAsDouble\": 0.5656613585606837, " + 
-                    " \"valid\": false " + 
-                    " }, " + 
-                    " \"email\": \"MDd\", " + 
-                    " \"roles\": { " + 
-                    " \"key_0\": \"_G_\" " + 
-                    " } " + 
-                    " } ")
-                .post(baseUrlOfSut + "/admin/register")
+                .post(baseUrlOfSut + "/news")
                 .then()
                 .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json")
                 .body("'status'", numberMatches(400.0))
                 .body("'error'", containsString("Bad Request"))
-                .body("'exception'", containsString("org.springframework.http.converter.HttpMessageNotReadableException"))
-                .body("'message'", containsString("Could not read document: Can not deserialize instance of java.util.HashSet out of START_OBJECT token\n at [Source: java.io.PushbackInputStream"))
-                .body("'path'", containsString("/admin/register"));
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"1964-01-02T"))
+                .body("'path'", containsString("/news"));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/consumer/notifications")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/-1038027947286759238")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/nearest")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news?country=kG7bI")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_47_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"priceA3SIMPLEX\": \"D_lKyc26g4yQML\", " + 
-                    " \"priceA4DUPLEX\": \"4mx31b__a6YGq\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/8/pricetable/papers")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/PrintShop_217_insertPaperTableItemsInPriceTable
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/8/pricetable/papers"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 334.0, " + 
-                    " \"priceA3SIMPLEX\": \"Xz\", " + 
-                    " \"priceA4DUPLEX\": \"x790t4fQgF\" " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/8/pricetable/papers")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/PrintShop_217_insertPaperTableItemsInPriceTable
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/8/pricetable/papers"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(0))
+                .body("isEmpty()", is(true));
     }
     
     
     @Test
-    public void test_48_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"priceA3SIMPLEX\": \"YQNT\", " + 
-                    " \"priceA4DUPLEX\": \"4i}3/cTa_a4`\", " + 
-                    " \"priceA4SIMPLEX\": \"-\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/8/pricetable/papers")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$Colors_28_valueOf
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("Name is null"))
-                .body("'path'", containsString("/printshops/8/pricetable/papers"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"colors\": \"\", " + 
-                    " \"infLim\": 194.0, " + 
-                    " \"priceA3DUPLEX\": \"\", " + 
-                    " \"priceA3SIMPLEX\": \"Z\", " + 
-                    " \"priceA4DUPLEX\": \"r\", " + 
-                    " \"supLim\": -130.0 " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/8/pricetable/papers")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/PrintShop_217_insertPaperTableItemsInPriceTable
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/8/pricetable/papers"));
-    }
-    
-    
-    @Test
-    public void test_49_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 292L)
-                .d("ADDRESS", "\"evomaster_13853_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"kUO\"")
-                .d("BALANCE_FRACTIONAL_PART", "-1048576")
-                .d("BALANCE_INTEGER_PART", "-130540")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_13943_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_34_input\"")
-                .d("NIF", "\"OEC7UBkzOk0RUtdQ\"")
-            .and().insertInto("USERS", 291L)
-                .d("PASSWORD", "\"evomaster_13794_input\"")
-                .d("USERNAME", "\"evomaster_13919_input\"")
-            .and().insertInto("CONSUMERS", 290L)
-                .d("BALANCE_CURRENCY", "\"IWq5sJ_vWbFiq\"")
-                .d("BALANCE_FRACTIONAL_PART", "8")
-                .d("BALANCE_INTEGER_PART", "-8383835")
-                .d("NAME", "\"q]3M9MUUUPU9\"")
-                .r("ID", 291L)
-            .and().insertInto("REVIEWS", 289L)
-                .d("DESCRIPTION", "\"evomaster_13944_input\"")
-                .d("RATING", "-16")
-            .and().insertInto("PRINTSHOPS", 288L)
-                .d("ADDRESS", "\"evomaster_13920_input\"")
-                .d("AVG_RATING", "-634.362676")
-                .d("BALANCE_CURRENCY", "\"v\"")
-                .d("BALANCE_FRACTIONAL_PART", "-256")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_13713_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_13950_input\"")
-                .d("NIF", "\"mvolaster_39_inputcp\"")
-            .and().insertInto("USERS", 287L)
-                .d("PASSWORD", "\"`\"")
-                .d("USERNAME", "\"UvouastUU_43_inpUtx\"")
-            .and().insertInto("CONSUMERS", 286L)
-                .d("BALANCE_CURRENCY", "\"Abvr_fe_r5v5cY\"")
-                .d("BALANCE_FRACTIONAL_PART", "66177")
-                .d("BALANCE_INTEGER_PART", "1032704")
-                .d("NAME", "\"lJ\"")
-                .d("ID", "10")
-            .and().insertInto("REVIEWS", 285L)
-                .d("DESCRIPTION", "\"s\u0089\"")
-                .d("RATING", "8388864")
-            .and().insertInto("PRINTSHOPS", 284L)
-                .d("ADDRESS", "\"evomaster_44_inpXutb\"")
-                .d("AVG_RATING", "0.72497302587")
-                .d("BALANCE_CURRENCY", "\"evomaster_13951_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_13921_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomUsUer_U3798_qnput\"")
-                .d("NIF", "\"evomaster_13952_input\"")
-            .and().insertInto("USERS", 283L)
-                .d("PASSWORD", "\"xbHpyXt\"")
-                .d("USERNAME", "\"evomaster_13799_input\"")
-            .and().insertInto("CONSUMERS", 282L)
-                .d("BALANCE_CURRENCY", "\"evomaster_13946_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-4194816")
-                .d("BALANCE_INTEGER_PART", "7864439")
-                .d("NAME", "\"evomaster_13953_input\"")
-                .d("ID", "8")
-            .and().insertInto("REVIEWS", 281L)
-                .d("DESCRIPTION", "\"evomaster_13922_input\"")
-                .d("RATING", "0")
-            .and().insertInto("PRINTSHOPS", 280L)
-                .d("ADDRESS", "\"eUoUUUtUrU4U_UvUut\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_13954_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"u6aCtwo_Ya10rJg\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"EdUUDeo\"")
-                .d("NIF", "\"eUUmaUterU13U62Ugnput\"")
-            .and().insertInto("USERS", 279L)
-                .d("PASSWORD", "\"BuKstCtEf\"")
-                .d("USERNAME", "\"evomaster_13949_input\"")
-            .and().insertInto("CONSUMERS", 278L)
-                .d("BALANCE_CURRENCY", "\"XkZ7uZtO2KqI7GEC\"")
-                .d("BALANCE_FRACTIONAL_PART", "2097850")
-                .d("BALANCE_INTEGER_PART", "973")
-                .d("NAME", "\"evomaster_13863_inpu\"")
-                .d("ID", "9")
-            .and().insertInto("REVIEWS", 277L)
-                .d("DESCRIPTION", "\"4ohx9x4gUAK4U6Be\"")
-                .d("RATING", "1073725569")
+    public void test_7() throws Exception {
+        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 101L)
+                .d("ID", "29")
+                .d("AUTHOR_ID", "\"evomaster_2684_input\"")
+                .d("COUNTRY", "\"evomaster_2683_input\"")
+                .d("CREATION_TIME", "\"2089-08-25 22:45:08\"")
+                .d("TEXT", "\"avwuasvaR_570_kpqu\"")
             .dtos();
         controller.execInsertionsIntoDatabase(insertions);
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/printshops/1/reviews/2")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/ReviewController_120_editPrintShopReview
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NumberFormatException"))
-                .body("'message'", containsString("null"))
-                .body("'path'", containsString("/printshops/1/reviews/2"));
-    }
-    
-    
-    @Test
-    public void test_50_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 2171L)
-                .d("PASSWORD", "\"ggDSUSj_\"")
-                .d("USERNAME", "\"evomaster_11455_input\"")
-            .and().insertInto("CONSUMERS", 2170L)
-                .d("BALANCE_CURRENCY", "\"evomaster_24775_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "4595")
-                .d("NAME", "\"evomaster_24772_input\"")
-                .d("ID", "18")
-            .and().insertInto("NOTIFICATION", 2169L)
-            .and().insertInto("USERS", 2168L)
-                .d("PASSWORD", "\"gvomUstgp_91U8_aUpuU\"")
-                .d("USERNAME", "\"evomaster_9169_inpu\"")
-            .and().insertInto("CONSUMERS", 2167L)
-                .d("BALANCE_CURRENCY", "\"evoo`stUv_1U843_inUut\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "4187858")
-                .d("NAME", "\"evomaster_24773_input\"")
-                .d("ID", "13")
-            .and().insertInto("NOTIFICATION", 2166L)
-            .and().insertInto("USERS", 2165L)
-                .d("PASSWORD", "\"evomaster_24774_input\"")
-                .d("USERNAME", "\"evomUsler]3:7U^inxut\"")
-            .and().insertInto("CONSUMERS", 2164L)
-                .d("BALANCE_CURRENCY", "\"N4nC\"")
-                .d("BALANCE_FRACTIONAL_PART", "32768")
-                .d("BALANCE_INTEGER_PART", "16")
-                .d("NAME", "\"evomaster_24776_input\"")
-                .r("ID", 2165L)
-            .and().insertInto("NOTIFICATION", 2163L)
-            .and().insertInto("USERS", 2162L)
-                .d("PASSWORD", "\"evomastet_U97<OUUpUtZ\"")
-                .d("USERNAME", "\"j_kSQz_tKInfss\"")
-            .and().insertInto("CONSUMERS", 2161L)
-                .d("BALANCE_CURRENCY", "\"lVzTLvqkAdOnIGSN\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-1")
-                .d("NAME", "\"007\"")
-                .d("ID", "9")
-            .and().insertInto("NOTIFICATION", 2160L)
-            .and().insertInto("PRINTSHOPS", 2159L)
-                .d("ADDRESS", "\"9yE\"")
-                .d("AVG_RATING", "474732.7879754395")
-                .d("BALANCE_CURRENCY", "\"evomaster_17845_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-524288")
-                .d("BALANCE_INTEGER_PART", "-8388347")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evom`sUeU_11U4U_UnUut\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"gv3xmS\"")
-                .d("NIF", "\"evomaster_3980_input\"")
-            .and().insertInto("PRINTSHOPS", 2158L)
-                .d("ADDRESS", "\"evomaster_3981_input\"")
-                .d("AVG_RATING", "0.35001083420963264")
-                .d("BALANCE_CURRENCY", "\"evomaster_3982_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "-1.0781385593896888")
-                .d("LOGO", "\"MUFJBMq\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_17846_input\"")
-                .d("NIF", "\"evomaster_3985_input\"")
-            .and().insertInto("PRINTSHOPS", 2157L)
-                .d("ADDRESS", "\"evomaster_3986_input\"")
-                .d("AVG_RATING", "0.7077054381351053")
-                .d("BALANCE_CURRENCY", "\"C_VIceRlPJI0\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "66429")
-                .d("LATITUDE", "0.021794")
-                .d("LOGO", "\"f4DO3kriOqrB\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"Yb0bwIIsrU\"")
-                .d("NIF", "\"DBkqG9qE\"")
-            .and().insertInto("PRINTSHOPS", 2156L)
-                .d("ADDRESS", "\"evomaster_17847_input\"")
-                .d("AVG_RATING", "0.0")
-                .d("BALANCE_CURRENCY", "\"evomaster_17848_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-261833")
-                .d("BALANCE_INTEGER_PART", "32")
-                .d("LATITUDE", "1.1643353249107746")
-                .d("LOGO", "\"kh8ekTILtSF49\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_24777_input\"")
-                .d("NIF", "\"\"")
-            .and().insertInto("PRINTSHOPS", 2155L)
-                .d("ADDRESS", "\"xKU9Xaj4T\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_3993_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "524434")
-                .d("BALANCE_INTEGER_PART", "-262144")
-                .d("LATITUDE", "0.7499086909707899")
-                .d("LOGO", "\"4BKOchw\"")
-                .d("LONGITUDE", "43.086")
-                .d("NAME", "\"evomaster_24778_input\"")
-                .d("NIF", "\"evomaster_11460_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/admin/seed")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_123_seed
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/seed"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"Olá Mundo!\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/notifications/0")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_82_removeNotification
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.EmptyResultDataAccessException"))
-                .body("'message'", containsString("No class io.github.proxyprint.kitchen.models.notifications.Notification entity with id 0 exists!"))
-                .body("'path'", containsString("/notifications/0"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/8")
-                .then()
-                .statusCode(200)
-                .assertThat()
                 .contentType("text/plain")
-                .body(containsString("{\"id\":8,\"name\":\"Video Norte\",\"address\":\"Rua Nova de Santa Cruz\",\"latitude\":41.5594,\"longitude\":-8.3972,\"nif\":\"123444378\",\"logo\":\"logo_8\",\"avgRating\":4.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/consumer/requests/cancel/896")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/requests/cancel/896"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/printshops/2046/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/2046/employees"));
-    }
-    
-    
-    @Test
-    public void test_51_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 1720L)
-                .d("PASSWORD", "\"evomaster_12908_input\"")
-                .d("USERNAME", "\"Jf6IiCY\"")
-            .and().insertInto("CONSUMERS", 1719L)
-                .d("BALANCE_CURRENCY", "\"ivomaUUUr_215U_iUpu\"")
-                .d("BALANCE_FRACTIONAL_PART", "303")
-                .d("BALANCE_INTEGER_PART", "-130572")
-                .d("NAME", "\"Ufom]stUrU21U6_iUpuU\"")
-                .d("ID", "10")
-            .and().insertInto("NOTIFICATION", 1718L)
-            .and().insertInto("USERS", 1717L)
-                .d("PASSWORD", "\"C\"")
-                .d("USERNAME", "\"BRzVKUfrzUA6Fc\"")
-            .and().insertInto("CONSUMERS", 1716L)
-                .d("BALANCE_CURRENCY", "\"Ub\"")
-                .d("BALANCE_FRACTIONAL_PART", "-15500")
-                .d("BALANCE_INTEGER_PART", "-1")
-                .d("NAME", "\"evomaster_2157_inputM7\"")
-                .r("ID", 1717L)
-            .and().insertInto("NOTIFICATION", 1715L)
-            .and().insertInto("USERS", 1714L)
-                .d("PASSWORD", "\"Ay3Y1ATZ\"")
-                .d("USERNAME", "\"evomaster_2158_inpu\"")
-            .and().insertInto("CONSUMERS", 1713L)
-                .d("BALANCE_CURRENCY", "\"ba\"")
-                .d("BALANCE_FRACTIONAL_PART", "692")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"YR_2UrkMc8T\"")
-                .d("ID", "19")
-            .and().insertInto("NOTIFICATION", 1712L)
-            .and().insertInto("PRINTSHOPS", 1711L)
-                .d("ADDRESS", "\"evomaster_12909_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_12923_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "4714")
-                .d("BALANCE_INTEGER_PART", "32")
-                .d("LATITUDE", "0.5802990513856093")
-                .d("LOGO", "\"JUMrK3UgMUfUSt\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_2159_inputC\"")
-                .d("NIF", "\"db1Y5LUYJLii9\"")
-            .and().insertInto("PRINTSHOPS", 1710L)
-                .d("ADDRESS", "\"evokaster_2161_inpu\"")
-                .d("AVG_RATING", "0.67")
-                .d("BALANCE_CURRENCY", "\"0GhCtIdxBYqF\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "16681")
-                .d("LATITUDE", "0.9220007153890281")
-                .d("LOGO", "\"evomaster_12910_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_2162_input\"")
-                .d("NIF", "\"evomaster_12911_input\"")
-            .and().insertInto("USERS", 1709L)
-                .d("PASSWORD", "\"evomaster_12924_input\"")
-                .d("USERNAME", "\"evomaster_12912_input\"")
-            .and().insertInto("CONSUMERS", 1708L)
-                .d("BALANCE_CURRENCY", "\"evomaster_12913_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "1000627297")
-                .d("BALANCE_INTEGER_PART", "-2095863")
-                .d("NAME", "\"evomaster_2165_input\"")
-                .r("ID", 1709L)
-            .and().insertInto("USERS", 1707L)
-                .d("PASSWORD", "\"@\"")
-                .d("USERNAME", "\"1UMa\"")
-            .and().insertInto("CONSUMERS", 1706L)
-                .d("BALANCE_CURRENCY", "\"evomaster_12915_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"sVMvvHIwWADyTG\"")
-                .d("ID", "9")
-            .and().insertInto("PRINT_REQUESTS", 1705L)
-            .and().insertInto("PRINTSHOPS", 1704L)
-                .d("ADDRESS", "\"z8XxCYblpUu\"")
-                .d("AVG_RATING", "1841.280942696776")
-                .d("BALANCE_CURRENCY", "\"Jzh6Y9Q7qo\"")
-                .d("BALANCE_FRACTIONAL_PART", "992")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evmqaster_2166_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"V9c\"")
-                .d("NIF", "\"QmrxrEIOS1KQbKSz\"")
-            .and().insertInto("PRINTSHOPS", 1703L)
-                .d("ADDRESS", "\"evomaster_12925_input\"")
-                .d("AVG_RATING", "2306358.3885502354")
-                .d("BALANCE_CURRENCY", "\"4\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-2096892")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"pj\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"WRJNn_Wvm\"")
-                .d("NIF", "\"evomastej_2167`input\"")
-            .and().insertInto("USERS", 1702L)
-                .d("PASSWORD", "\"evomaster_12525_input\"")
-                .d("USERNAME", "\"OdUUUNyUh5UgU\"")
-            .and().insertInto("CONSUMERS", 1701L)
-                .d("BALANCE_CURRENCY", "\"evomaster_12926_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "65")
-                .d("NAME", "\"evomaster_12526_input6\"")
-                .d("ID", "6")
-            .and().insertInto("USERS", 1700L)
-                .d("PASSWORD", "\"evomaster_12927_input\"")
-                .d("USERNAME", "\"evomaster_12527_input\"")
-            .and().insertInto("CONSUMERS", 1699L)
-                .d("BALANCE_CURRENCY", "\"evomaster_2168_inpug\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_12528_input\"")
-                .d("ID", "14")
-            .and().insertInto("PRINT_REQUESTS", 1698L)
-            .and().insertInto("PRINTSHOPS", 1697L)
-                .d("ADDRESS", "\"evomaster_12529_input\"")
-                .d("AVG_RATING", "233.33")
-                .d("BALANCE_CURRENCY", "\"evomaster_12917_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-130393")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"t6QLAUsk\"")
-                .d("LONGITUDE", "0.9172071101589248")
-                .d("NAME", "\"I\"")
-                .d("NIF", "\"njfk6zfVVVsgp\"")
-            .and().insertInto("PRINTSHOPS", 1696L)
-                .d("ADDRESS", "\"MjYm\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"N2\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "32")
-                .d("LATITUDE", "1.0")
-                .d("LOGO", "\"evomaster_12918_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"YRjY002\"")
-                .d("NIF", "\"\"")
-            .and().insertInto("USERS", 1695L)
-                .d("PASSWORD", "\"evomaster_2171_input\"")
-                .d("USERNAME", "\"9J\"")
-            .and().insertInto("CONSUMERS", 1694L)
-                .d("BALANCE_CURRENCY", "\"evomaster_2172_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "70")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"bNOqUi\"")
-                .d("ID", "1")
-            .and().insertInto("USERS", 1693L)
-                .d("PASSWORD", "\"3e1R\"")
-                .d("USERNAME", "\"evomaster_12928_input\"")
-            .and().insertInto("CONSUMERS", 1692L)
-                .d("BALANCE_CURRENCY", "\"I_P3uwuXe4EvP7\"")
-                .d("BALANCE_FRACTIONAL_PART", "1048582")
-                .d("BALANCE_INTEGER_PART", "126")
-                .d("NAME", "\"evomaster_2174_inp\"")
-                .r("ID", 1693L)
-            .and().insertInto("PRINT_REQUESTS", 1691L)
-            .and().insertInto("PRINTSHOPS", 1690L)
-                .d("ADDRESS", "\"ZwgxDr\"")
-                .d("AVG_RATING", "0.8723024604122409")
-                .d("BALANCE_CURRENCY", "\"evomaster_12929_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-16807936")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_2175cinput\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_12919_input\"")
-                .d("NIF", "\"UU0A4EWUUUSGL7B\"")
-            .and().insertInto("PRINTSHOPS", 1689L)
-                .d("ADDRESS", "\"l0cgOXEBGvo4Geml\"")
-                .d("AVG_RATING", "0.2739")
-                .d("BALANCE_CURRENCY", "\"evomaster_12533_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "112")
-                .d("BALANCE_INTEGER_PART", "-128")
-                .d("LATITUDE", "2.565")
-                .d("LOGO", "\"OfdP8GzLj2Ppj8c\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_2176_input\"")
-                .d("NIF", "\"1odtOtE\"")
-            .and().insertInto("USERS", 1688L)
-                .d("PASSWORD", "\"evomaster_12920_input\"")
-                .d("USERNAME", "\"_XpwhCYQZkqL\"")
-            .and().insertInto("CONSUMERS", 1687L)
-                .d("BALANCE_CURRENCY", "\"evomaster_12930_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-512")
-                .d("NAME", "\"evomaster_12931_input\"")
-                .r("ID", 1702L)
-            .and().insertInto("USERS", 1686L)
-                .d("PASSWORD", "\"evomaster_12535_input\"")
-                .d("USERNAME", "\"evomaster_12921_input\"")
-            .and().insertInto("CONSUMERS", 1685L)
-                .d("BALANCE_CURRENCY", "\"evomaster_12922_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-1920")
-                .d("NAME", "\"evomaster_2178_input\"")
-                .r("ID", 1700L)
-            .and().insertInto("PRINT_REQUESTS", 1684L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .put(baseUrlOfSut + "/consumer/subscribe")
+                .body("U4aI7Z20K")
+                .put(baseUrlOfSut + "/news/-255092066890241024/text")
                 .then()
                 .statusCode(404)
                 .assertThat()
@@ -2937,2656 +408,242 @@
                 .body(isEmptyOrNullString());
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/printdocument/4/budget")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintRequestController_337_calcBudgetForPrintRecipe
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printdocument/4/budget"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/nearest")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/notifications/619")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_87_readNotification
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/notifications/619"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/consumer/printrequest/0/submit")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintRequestController_210_finishAndSubmitPrintRequest
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/printrequest/0/submit"));
-    }
-    
-    
-    @Test
-    public void test_52_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 704L)
-                .d("ADDRESS", "\"dBky81zN6c1TR\"")
-                .d("AVG_RATING", "0.08915315295239012")
-                .d("BALANCE_CURRENCY", "\"DoBXhO\"")
-                .d("BALANCE_FRACTIONAL_PART", "418")
-                .d("BALANCE_INTEGER_PART", "-536870173")
-                .d("LATITUDE", "0.2668")
-                .d("LOGO", "\"evomaster_708_input\"")
-                .d("LONGITUDE", "0.3")
-                .d("NAME", "\"evomaster_709_input\"")
-                .d("NIF", "\"eXDjns\"")
-            .and().insertInto("PRINTSHOPS", 703L)
-                .d("ADDRESS", "\"sidvnD7PLPXU\"")
-                .d("AVG_RATING", "0.10200119212")
-                .d("BALANCE_CURRENCY", "\"SQru1lsLlU4\"")
-                .d("BALANCE_FRACTIONAL_PART", "740")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "-0.08082430990938472")
-                .d("LOGO", "\"\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_24828_input\"")
-                .d("NIF", "\"evwmaster_710_inlut\"")
-            .and().insertInto("USERS", 702L)
-                .d("PASSWORD", "\"evomaster_711_knput\"")
-                .d("USERNAME", "\"UhdYGby1RFi_QNJ9\"")
-            .and().insertInto("CONSUMERS", 701L)
-                .d("BALANCE_CURRENCY", "\"evomaster_713_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-262082")
-                .d("BALANCE_INTEGER_PART", "868")
-                .d("NAME", "\"evomasUeU_714_iUput\"")
-                .d("ID", "8")
-            .and().insertInto("USERS", 700L)
-                .d("PASSWORD", "\"S7IErjH7_X\"")
-                .d("USERNAME", "\"x8i\"")
-            .and().insertInto("CONSUMERS", 699L)
-                .d("BALANCE_CURRENCY", "\"8\"")
-                .d("BALANCE_FRACTIONAL_PART", "2097582")
-                .d("BALANCE_INTEGER_PART", "-2093987877")
-                .d("NAME", "\"evomaster_715_input\"")
-                .r("ID", 700L)
-            .and().insertInto("PRINT_REQUESTS", 698L)
-            .and().insertInto("PRINTSHOPS", 697L)
-                .d("ADDRESS", "\"evomaster_24795_input\"")
-                .d("AVG_RATING", "0.7293528655547962")
-                .d("BALANCE_CURRENCY", "\"m9IUDPc3NNvx\"")
-                .d("BALANCE_FRACTIONAL_PART", "754")
-                .d("BALANCE_INTEGER_PART", "811")
-                .d("LATITUDE", "0.15913")
-                .d("LOGO", "\"5zsEbNtP1Fk\"")
-                .d("LONGITUDE", "0.9751606166972813")
-                .d("NAME", "\"L3kknds9\"")
-                .d("NIF", "\"1Gz0\"")
-            .and().insertInto("PRINTSHOPS", 696L)
-                .d("ADDRESS", "\"evomaster_24756_input\"")
-                .d("AVG_RATING", "26.648929898530437")
-                .d("BALANCE_CURRENCY", "\"gmVKF9ibBjRO0Pk7\"")
-                .d("BALANCE_FRACTIONAL_PART", "509")
-                .d("BALANCE_INTEGER_PART", "445")
-                .d("LATITUDE", "0.005610468202903673")
-                .d("LOGO", "\"y96qzn\"")
-                .d("LONGITUDE", "0.46784008934700294")
-                .d("NAME", "\"Qlg1w29\"")
-                .d("NIF", "\"8BjsC3Bwxa\"")
-            .and().insertInto("USERS", 695L)
-                .d("PASSWORD", "\"evomaster_717_input\"")
-                .d("USERNAME", "\"evomaster_718_input\"")
-            .and().insertInto("CONSUMERS", 694L)
-                .d("BALANCE_CURRENCY", "\"\"")
-                .d("BALANCE_FRACTIONAL_PART", "567")
-                .d("BALANCE_INTEGER_PART", "-523586")
-                .d("NAME", "\"SaE0fd6y0r\"")
-                .r("ID", 695L)
-            .and().insertInto("USERS", 693L)
-                .d("PASSWORD", "\"Y\"")
-                .d("USERNAME", "\"evomaster_719_input\"")
-            .and().insertInto("CONSUMERS", 692L)
-                .d("BALANCE_CURRENCY", "\"z\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "8395")
-                .d("NAME", "\"evomaster_721_input\"")
-                .d("ID", "11")
-            .and().insertInto("PRINT_REQUESTS", 691L)
-            .and().insertInto("PRINTSHOPS", 690L)
-                .d("ADDRESS", "\"evomaster_24829_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_722_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "346")
-                .d("LATITUDE", "-125.73328848076073")
-                .d("LOGO", "\"onJYb13rFXNPY28\"")
-                .d("LONGITUDE", "2.51653373382463E7")
-                .d("NAME", "\"fXAmEB4aSS5hYD\"")
-                .d("NIF", "\"CiaZlAq\"")
-            .and().insertInto("PRINTSHOPS", 689L)
-                .d("ADDRESS", "\"xzKPgj\"")
-                .d("AVG_RATING", "1.1305163303514356")
-                .d("BALANCE_CURRENCY", "\"GGk\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "17037")
-                .d("LATITUDE", "0.3394163857528602")
-                .d("LOGO", "\"mlmHGpR1\"")
-                .d("LONGITUDE", "0.741076630184157")
-                .d("NAME", "\"evomaster_24830_input\"")
-                .d("NIF", "\"33WFXrN\"")
-            .and().insertInto("USERS", 688L)
-                .d("PASSWORD", "\"evomaster_726_inpu\"")
-                .d("USERNAME", "\"XyJa05WUdB\"")
-            .and().insertInto("CONSUMERS", 687L)
-                .d("BALANCE_CURRENCY", "\"axtgzK2GmoU\"")
-                .d("BALANCE_FRACTIONAL_PART", "268436025")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_728_input\"")
-                .d("ID", "16")
-            .and().insertInto("USERS", 686L)
-                .d("PASSWORD", "\"oo8v0NyvjvXORes\"")
-                .d("USERNAME", "\"vzcvw71\"")
-            .and().insertInto("CONSUMERS", 685L)
-                .d("BALANCE_CURRENCY", "\"evomasterU731`input\"")
-                .d("BALANCE_FRACTIONAL_PART", "912")
-                .d("BALANCE_INTEGER_PART", "856")
-                .d("NAME", "\"3fKuqUjU^i\"")
-                .r("ID", 702L)
-            .and().insertInto("PRINT_REQUESTS", 684L)
-            .and().insertInto("PRINTSHOPS", 683L)
-                .d("ADDRESS", "\"SSc_4CiU2\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_733_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "217")
-                .d("BALANCE_INTEGER_PART", "65564")
-                .d("LATITUDE", "0.3634830826765185")
-                .d("LOGO", "\"evomaster_734_input\"")
-                .d("LONGITUDE", "1.4")
-                .d("NAME", "\"b7y8nZ4eKM_z\"")
-                .d("NIF", "\"evUmastep_736_Ufpvt\"")
-            .and().insertInto("PRINTSHOPS", 682L)
-                .d("ADDRESS", "\"evomaster_737_input\"")
-                .d("AVG_RATING", "0.9703051032481247")
-                .d("BALANCE_CURRENCY", "\"evomaster_738_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "373")
-                .d("BALANCE_INTEGER_PART", "551")
-                .d("LATITUDE", "0.946")
-                .d("LOGO", "\"mrF\"")
-                .d("LONGITUDE", "0.8917575379414385")
-                .d("NAME", "\"evomaster_24831_input\"")
-                .d("NIF", "\"evomaster_739_input\"")
-            .and().insertInto("USERS", 681L)
-                .d("PASSWORD", "\"evomaster_24797_input\"")
-                .d("USERNAME", "\"JT9XjHb6oEX9\"")
-            .and().insertInto("CONSUMERS", 680L)
-                .d("BALANCE_CURRENCY", "\"evomaster_740_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "30764")
-                .d("BALANCE_INTEGER_PART", "-8388221")
-                .d("NAME", "\"RbELb\"")
-                .r("ID", 681L)
-            .and().insertInto("USERS", 679L)
-                .d("PASSWORD", "\"PUxU\"")
-                .d("USERNAME", "\"Efj\"")
-            .and().insertInto("CONSUMERS", 678L)
-                .d("BALANCE_CURRENCY", "\"evomaster_741_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "536871635")
-                .d("BALANCE_INTEGER_PART", "8389213")
-                .d("NAME", "\"WZUtPP0uKWXeUUU7\"")
-                .d("ID", "6")
-            .and().insertInto("PRINT_REQUESTS", 677L)
-            .and().insertInto("USERS", 676L)
-                .d("PASSWORD", "\"evomaster_742_input\"")
-                .d("USERNAME", "\"z\"")
-            .and().insertInto("CONSUMERS", 675L)
-                .d("BALANCE_CURRENCY", "\"evomaster_743_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-715")
-                .d("BALANCE_INTEGER_PART", "1030")
-                .d("NAME", "\"evomaster_24798_input\"")
-                .d("ID", "15")
-            .and().insertInto("PRINTSHOPS", 674L)
-                .d("ADDRESS", "\"evomaster_744_input\"")
-                .d("AVG_RATING", "0.5441180261417158")
-                .d("BALANCE_CURRENCY", "\"LRGZAB\"")
-                .d("BALANCE_FRACTIONAL_PART", "-8387913")
-                .d("BALANCE_INTEGER_PART", "63324023")
-                .d("LATITUDE", "0.4092850536164606")
-                .d("LOGO", "\"4L8NlqSNdlosa\"")
-                .d("LONGITUDE", "401.91393283587314")
-                .d("NAME", "\"evomastej_745_input\"")
-                .d("NIF", "\"WleWUxymp\"")
-            .and().insertInto("PRINTSHOPS", 673L)
-                .d("ADDRESS", "\"1J1fwf7fNog7HoI\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"MeJLO3\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-1523")
-                .d("LATITUDE", "8.544351547367672")
-                .d("LOGO", "\"eXju97GNMglh\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_746_input\"")
-                .d("NIF", "\"f49Mnx\"")
-            .and().insertInto("PRINTSHOPS", 672L)
-                .d("ADDRESS", "\"evomaster_747_input\"")
-                .d("AVG_RATING", "0.4")
-                .d("BALANCE_CURRENCY", "\"evomasUer_748_iUpvt\"")
-                .d("BALANCE_FRACTIONAL_PART", "-8388003")
-                .d("BALANCE_INTEGER_PART", "531")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_749_inputL\"")
-                .d("LONGITUDE", "0.8890460354060229")
-                .d("NAME", "\"O\"")
-                .d("NIF", "\"evomaster_750_input\"")
-            .and().insertInto("PRINTSHOPS", 671L)
-                .d("ADDRESS", "\"oagCeaYUinh3Y5\"")
-                .d("AVG_RATING", "0.01507802566583738")
-                .d("BALANCE_CURRENCY", "\"eyyQx\"")
-                .d("BALANCE_FRACTIONAL_PART", "653")
-                .d("BALANCE_INTEGER_PART", "17092")
-                .d("LATITUDE", "0.9835301622699465")
-                .d("LOGO", "\"evomaster_24832_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_751_input\"")
-                .d("NIF", "\"qrtuKnUVcT3fyRfh\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"colors\": \"\", " + 
-                    " \"infLim\": 837.0, " + 
-                    " \"priceA3DUPLEX\": \"u\", " + 
-                    " \"priceA3SIMPLEX\": \"2\", " + 
-                    " \"supLim\": 508.0 " + 
+                    " \"authorId\": \"m8\", " + 
+                    " \"country\": \"LFT22tswpjHJ\", " + 
+                    " \"id\": \"4ubFpd09SIvr\", " + 
+                    " \"newsId\": \"_cipOObc94\", " + 
+                    " \"text\": \"yvV_gwz99\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/4161561/pricetable/deletepaper")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/4161561/pricetable/deletepaper"));
+                .contentType("");
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/nearest")
+                .delete(baseUrlOfSut + "/news/evomaster_561_inpu")
                 .then()
-                .statusCode(200)
+                .statusCode(400)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
+                .contentType("");
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/19")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/Money_25_<init>
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
-                .body("'message'", containsString("Infinity is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method."))
-                .body("'path'", containsString("/printshops/19"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/consumer/-4185864063988930028/notify")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/notifications/NotificationsController_59_greeting
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/-4185864063988930028/notify"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/printshops/requests/1049383")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/requests/1049383"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/login")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" \"7BV0K71z\" ")
-                .post(baseUrlOfSut + "/printshops/requests/cancel/0")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news/29")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_53_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"colors\": \"MNz\", " + 
-                    " \"infLim\": 83.0, " + 
-                    " \"priceA3DUPLEX\": \"crFqTbO1BA\", " + 
-                    " \"priceA3SIMPLEX\": \"D_lKyc26g4yQML\", " + 
-                    " \"priceA4SIMPLEX\": \"m\", " + 
-                    " \"supLim\": 710.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/8/pricetable/papers")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$Colors_28_valueOf
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
-                .body("'message'", containsString("No enum constant io.github.proxyprint.kitchen.models.printshops.pricetable.Item.Colors.MNz"))
-                .body("'path'", containsString("/printshops/8/pricetable/papers"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'newsId'", containsString("29"))
+                .body("'authorId'", containsString("evomaster_2684_input"))
+                .body("'text'", containsString("avwuasvaR_570_kpqu"))
+                .body("'country'", containsString("evomaster_2683_input"))
+                .body("'creationTime'", containsString("2089-08-25T"));
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"colors\": \"tJaOQjbYDqrW\", " + 
-                    " \"infLim\": 334.0, " + 
-                    " \"priceA3DUPLEX\": \"qRrDc\", " + 
-                    " \"priceA3SIMPLEX\": \"Xz\", " + 
-                    " \"priceA4SIMPLEX\": \"Ei7Rkc4K\" " + 
+                    " \"authorId\": \"eHApyV0\", " + 
+                    " \"country\": \"z\", " + 
+                    " \"id\": \"Aga2rrZ3\", " + 
+                    " \"newsId\": \"v_WKz0lV1\", " + 
+                    " \"text\": \"RxXiXPkFL4ha09L\" " + 
                     " } ")
-                .put(baseUrlOfSut + "/printshops/8/pricetable/papers")
+                .put(baseUrlOfSut + "/news/evomaster_798_input")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$Colors_28_valueOf
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
-                .body("'message'", containsString("No enum constant io.github.proxyprint.kitchen.models.printshops.pricetable.Item.Colors.tJaOQjbYDqrW"))
-                .body("'path'", containsString("/printshops/8/pricetable/papers"));
-    }
-    
-    
-    @Test
-    public void test_54_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 1495L)
-                .d("ADDRESS", "\"evomaster_1557_input\"")
-                .d("AVG_RATING", "0.2164089")
-                .d("BALANCE_CURRENCY", "\"evomaster_1526_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "4523")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.413")
-                .d("LOGO", "\"evomaster_1558_input\"")
-                .d("LONGITUDE", "0.859441524773503")
-                .d("NAME", "\"evomaster_1528_input\"")
-                .d("NIF", "\"evomaster_1559_input\"")
-            .and().insertInto("PRINTSHOPS", 1494L)
-                .d("ADDRESS", "\"evomaster_1560_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_1561_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-31918")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.9093942705736505")
-                .d("LOGO", "\"evomaster_1529_input\"")
-                .d("LONGITUDE", "4.9E-324")
-                .d("NAME", "\"T\"")
-                .d("NIF", "\"9vOvT_4iL\"")
-            .and().insertInto("PRINTSHOPS", 1493L)
-                .d("ADDRESS", "\"evomaster_1562_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"zEVvPd\"")
-                .d("BALANCE_FRACTIONAL_PART", "459")
-                .d("BALANCE_INTEGER_PART", "1039970907")
-                .d("LATITUDE", "0.06045636")
-                .d("LOGO", "\"evomaster_1531_input\"")
-                .d("LONGITUDE", "-232.34491249243908")
-                .d("NAME", "\"uVR66lEVS\"")
-                .d("NIF", "\"yd\"")
-            .and().insertInto("PRINTSHOPS", 1492L)
-                .d("ADDRESS", "\"evomaster_1533_input\"")
-                .d("AVG_RATING", "-0.6284806839744652")
-                .d("BALANCE_CURRENCY", "\"evUmUstUr_U534UiUpuU\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_1535_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evoUUUteUU5UUVUkUpUt\"")
-                .d("NIF", "\"evomaster_1537_input\"")
-            .and().insertInto("PRINTSHOPS", 1491L)
-                .d("ADDRESS", "\"W4sv7_DMCc\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_1563_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.49766247304360456")
-                .d("LOGO", "\"evomaster_1538_inputO\"")
-                .d("LONGITUDE", "0.04623644674003552")
-                .d("NAME", "\"wpva2aHKx\"")
-                .d("NIF", "\"M\"")
-            .and().insertInto("USERS", 1490L)
-                .d("PASSWORD", "\"19Iy6ikvd\"")
-                .d("USERNAME", "\"Maw3y_rrhddI\"")
-            .and().insertInto("CONSUMERS", 1489L)
-                .d("BALANCE_CURRENCY", "\"evomaster_1564_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "191")
-                .d("NAME", "\"evomaster_1539_input\"")
-                .r("ID", 1490L)
-            .and().insertInto("USERS", 1488L)
-                .d("PASSWORD", "\"evomaster_1565_input\"")
-                .d("USERNAME", "\"rT9vn6f0suk\"")
-            .and().insertInto("CONSUMERS", 1487L)
-                .d("BALANCE_CURRENCY", "\"evomaster_1566_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"lxzKwvqMdK\"")
-                .d("ID", "19")
-            .and().insertInto("USERS", 1486L)
-                .d("PASSWORD", "\"evomaster_1541_input\"")
-                .d("USERNAME", "\"evomaster_1542_input\"")
-            .and().insertInto("CONSUMERS", 1485L)
-                .d("BALANCE_CURRENCY", "\"evomaster_1543_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "73")
-                .d("BALANCE_INTEGER_PART", "736")
-                .d("NAME", "\"evomaster_1544_input\"")
-                .d("ID", "11")
-            .and().insertInto("USERS", 1484L)
-                .d("PASSWORD", "\"36o8Cvb\"")
-                .d("USERNAME", "\"evomaster_1546_input\"")
-            .and().insertInto("CONSUMERS", 1483L)
-                .d("BALANCE_CURRENCY", "\"i\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "927")
-                .d("NAME", "\"oup0u6DU4C\"")
-                .d("ID", "15")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverType\": \"EWWYCK\", " + 
-                    " \"priceA4\": \"Xl\" " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/1048576/pricetable/covers")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/1048576/pricetable/covers"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/consumer/19/notify")
-                .then()
-                .statusCode(200)
+                .statusCode(404)
                 .assertThat()
                 .contentType("")
                 .body(isEmptyOrNullString());
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/0/printingschemas")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintingSchemaController_45_getConsumerPrintingSchemas
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/0/printingschemas"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/0/employees")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/printshops/-1048576/employees/-7109400144998894216")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/-1048576/employees/-7109400144998894216"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/requests/pending")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/requests/pending"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"colors\": \"\", " + 
-                    " \"priceA3SIMPLEX\": \"93x\", " + 
-                    " \"priceA4DUPLEX\": \"12kqaP\", " + 
-                    " \"supLim\": 233.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/1481121411/pricetable/deletepaper")
+        given().accept("application/json")
+                .get(baseUrlOfSut + "/countries")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/admin/seed")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_123_seed
-                .assertThat()
                 .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/seed"));
+                .body("size()", equalTo(247))
+                .body("", hasItems("Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"));
     }
     
     
     @Test
-    public void test_55_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 3426L)
-                .d("PASSWORD", "\"2c_c7o_jmhXN2\"")
-                .d("USERNAME", "\"pcG3n\"")
-            .and().insertInto("CONSUMERS", 3425L)
-                .d("BALANCE_CURRENCY", "\"evomaster_8117_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "631")
-                .d("NAME", "\"evomaster_8118_input\"")
-                .r("ID", 3426L)
-            .and().insertInto("NOTIFICATION", 3424L)
-                .d("CONSUMER", "2")
-            .and().insertInto("USERS", 3423L)
-                .d("PASSWORD", "\"Uup\"")
-                .d("USERNAME", "\"roux5\"")
-            .and().insertInto("CONSUMERS", 3422L)
-                .d("BALANCE_CURRENCY", "\"rcXWyVX2\"")
-                .d("BALANCE_FRACTIONAL_PART", "892")
-                .d("BALANCE_INTEGER_PART", "717")
-                .d("NAME", "\"B\"")
-                .d("ID", "14")
-            .and().insertInto("NOTIFICATION", 3421L)
-                .d("CONSUMER", "4")
-            .and().insertInto("USERS", 3420L)
-                .d("PASSWORD", "\"evomaster_8119_input\"")
-                .d("USERNAME", "\"evomaster_8120_input\"")
-            .and().insertInto("CONSUMERS", 3419L)
-                .d("BALANCE_CURRENCY", "\"Kr\"")
-                .d("BALANCE_FRACTIONAL_PART", "381")
-                .d("BALANCE_INTEGER_PART", "232")
-                .d("NAME", "\"evomaster_8121_input\"")
-                .d("ID", "1")
-            .and().insertInto("NOTIFICATION", 3418L)
-                .d("CONSUMER", "4")
-            .and().insertInto("USERS", 3417L)
-                .d("PASSWORD", "\"\"")
-                .d("USERNAME", "\"evomaster_8122_input\"")
-            .and().insertInto("USERS", 3416L)
-                .d("PASSWORD", "\"00xfLWWWPy1NGvxF\"")
-                .d("USERNAME", "\"77Gg5mbk\"")
-            .and().insertInto("USERS", 3415L)
-                .d("PASSWORD", "\"evomaster_8123_input\"")
-                .d("USERNAME", "\"evomaster_8124_input\"")
-            .and().insertInto("USERS", 3414L)
-                .d("PASSWORD", "\"evomaster_8125_input\"")
-                .d("USERNAME", "\"EXU\"")
-            .and().insertInto("USERS", 3413L)
-                .d("PASSWORD", "\"a7ee2TNl\"")
-                .d("USERNAME", "\"evomaster_8126_input\"")
+    public void test_8() throws Exception {
+        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 515L)
+                .d("ID", "969")
+                .d("AUTHOR_ID", "\"HMLb2vw8juge680l\"")
+                .d("COUNTRY", "\"/_nskiclD\"")
+                .d("CREATION_TIME", "\"1936-03-14 01:40:13\"")
+                .d("TEXT", "\"CfcRP6Ud:ap:\"")
+            .and().insertInto("NEWS_ENTITY", 514L)
+                .d("ID", "358")
+                .d("AUTHOR_ID", "\"hp1qptl}\"")
+                .d("COUNTRY", "\"7XB<zP\"")
+                .d("CREATION_TIME", "\"2025-01-13 15:18:24\"")
+                .d("TEXT", "\"n9ff{tBNer7Gn\"")
+            .and().insertInto("NEWS_ENTITY", 513L)
+                .d("ID", "320")
+                .d("AUTHOR_ID", "\"k`m9jn6kKn@g3w7W@l\"")
+                .d("COUNTRY", "\"n?dfyjlEHhg;GrdQ0\"")
+                .d("CREATION_TIME", "\"2060-02-17 06:16:02\"")
+                .d("TEXT", "\"sw797C/h\"")
             .dtos();
         controller.execInsertionsIntoDatabase(insertions);
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/YmmWfb1/notifications")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_220_deleteAllNotifications
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/YmmWfb1/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .contentType("application/json")
-                .body(" \"HCXRrtdE8nIg4t\" ")
-                .post(baseUrlOfSut + "/request/reject/9111")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/reject/9111"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/notifications")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/consumer/Consumer_144_getNotifications
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.hibernate.PropertyAccessException"))
-                .body("'message'", containsString("Null value was assigned to a property [class io.github.proxyprint.kitchen.models.notifications.Notification.read] of primitive type setter of io.github.proxyprint.kitchen.models.notifications.Notification.read"))
-                .body("'path'", containsString("/consumer/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/consumer/0/printingschemas/-6138766001004660342")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/0/printingschemas/-6138766001004660342"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/consumer/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_83_addUser
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/consumer/register"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/printshops/2984/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/2984/employees"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/printshops/-1795725418/employees/434")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/-1795725418/employees/434"));
-        
-        given().accept("*/*")
-                .delete(baseUrlOfSut + "/printshops/0/employees/675")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/0/employees/675"));
-    }
-    
-    
-    @Test
-    public void test_56_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 766L)
-                .d("PASSWORD", "\"pl19N\"")
-                .d("USERNAME", "\"3EGl_t3tI\"")
-            .and().insertInto("USERS", 765L)
-                .d("PASSWORD", "\"KaGSHWJoTgtVE\"")
-                .d("USERNAME", "\"3\"")
-            .and().insertInto("USERS", 764L)
-                .d("PASSWORD", "\"Ww\"")
-                .d("USERNAME", "\"0ve0mxg\"")
-            .and().insertInto("USERS", 763L)
-                .d("PASSWORD", "\"_aS5qg31oq6Uof\"")
-                .d("USERNAME", "\"7FdU1F\"")
-            .and().insertInto("USERS", 762L)
-                .d("PASSWORD", "\"dtA\"")
-                .d("USERNAME", "\"sl\"")
-            .and().insertInto("PRINTSHOPS", 761L)
-                .d("ADDRESS", "\"c0q5\"")
-                .d("AVG_RATING", "0.8879480102626033")
-                .d("BALANCE_CURRENCY", "\"DtkyJqMrkdM3E\"")
-                .d("BALANCE_FRACTIONAL_PART", "927")
-                .d("BALANCE_INTEGER_PART", "796")
-                .d("LATITUDE", "0.14158775576963178")
-                .d("LOGO", "\"AKerOClKmCvAXnOL\"")
-                .d("LONGITUDE", "0.0990493739450169")
-                .d("NAME", "\"Zb2\"")
-                .d("NIF", "\"cx8F0CC\"")
-            .and().insertInto("PRINTSHOPS", 760L)
-                .d("ADDRESS", "\"OFuBKuHfV_eZsZ1\"")
-                .d("AVG_RATING", "0.17529309248193048")
-                .d("BALANCE_CURRENCY", "\"lq5NJ6GJLvJOMPy\"")
-                .d("BALANCE_FRACTIONAL_PART", "496")
-                .d("BALANCE_INTEGER_PART", "134")
-                .d("LATITUDE", "0.972455985532504")
-                .d("LOGO", "\"NxYM0UDO5i9i\"")
-                .d("LONGITUDE", "0.054756166755434266")
-                .d("NAME", "\"Q\"")
-                .d("NIF", "\"M7hPrttedLtSX4\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"infLim\": 90.0, " + 
-                    " \"price\": \"wkZLd98\", " + 
-                    " \"supLim\": 965.0 " + 
+                    " \"id\": \"i9GiMw1yIO1P\", " + 
+                    " \"newsId\": \"8\", " + 
+                    " \"text\": \"2\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/502/pricetable/rings")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/809/pricetable")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/admin/useed")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"consumers seeding completed\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/admin/useed")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_639_useed
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/useed"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .put(baseUrlOfSut + "/notifications/186")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/notifications/186"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/satisfied")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/repositories/UserService_42_loadUserByUsername
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/satisfied"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 467.0, " + 
-                    " \"price\": \"F6ysNQgYbbk9eVF\", " + 
-                    " \"ringType\": \"NUoSkuu\", " + 
-                    " \"supLim\": 929.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/538/pricetable/deletering")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_57_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 411L)
-                .d("ADDRESS", "\"evomaster_253_input\"")
-                .d("AVG_RATING", "0.7238313606")
-                .d("BALANCE_CURRENCY", "\"cKcjLJPIu\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "-7.2336486910795585")
-                .d("LOGO", "\"PHYdahW6\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"TsJQm6N_teTYSNz\"")
-                .d("NIF", "\"evomaster_4027_input\"")
-            .and().insertInto("USERS", 410L)
-                .d("PASSWORD", "\"'\"")
-                .d("USERNAME", "\"evomaster_255_input\"")
-            .and().insertInto("USERS", 409L)
-                .d("PASSWORD", "\"evomaster_256_input\"")
-                .d("USERNAME", "\"evomaster_4028_input\"")
-            .and().insertInto("USERS", 408L)
-                .d("PASSWORD", "\"evomaster_4029_input\"")
-                .d("USERNAME", "\"evomaster_258_input\"")
-            .and().insertInto("USERS", 407L)
-                .d("PASSWORD", "\"evomaster_259_input\"")
-                .d("USERNAME", "\"evomaster_4030_input\"")
-            .and().insertInto("USERS", 406L)
-                .d("PASSWORD", "\"evomaster_4031_input\"")
-                .d("USERNAME", "\"evomaster_261_inputl\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/consumer/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_83_addUser
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/consumer/register"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/consumer/info")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/info"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/printshops/541/reviews/0")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/consumer/subscribe")
+                .put(baseUrlOfSut + "/news/8")
                 .then()
                 .statusCode(404)
                 .assertThat()
                 .contentType("")
                 .body(isEmptyOrNullString());
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" \"Bk_VaQ7V\" ")
-                .put(baseUrlOfSut + "/printshops/-512/pricetable/editstapling")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news?authorId=HMLb2vw8juge680l")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/paypal/ipn/-6071453629571474205")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PayPalController_61_someRequestPaymentConfirmationFromPaylPal
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/paypal/ipn/-6071453629571474205"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(1))
+                .body("'id'", hasItem(containsString("969")))
+                .body("'newsId'", hasItem(containsString("969")))
+                .body("'authorId'", hasItem(containsString("HMLb2vw8juge680l")))
+                .body("'text'", hasItem(containsString("CfcRP6Ud:ap:")))
+                .body("'country'", hasItem(containsString("/_nskiclD")))
+                .body("'creationTime'", hasItem(containsString("1936-03-14T")));
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/0/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/0/employees"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/documents/0")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/documents/0"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .delete(baseUrlOfSut + "/consumer/requests%5CE%7C%5E(%5CQrequests%5CE)$%7C%5CQsubscribe.%5CE.*%7C%5E(%5CQsubscribe.%5CE.*)$%7C%5CQsubscribe/notifications")
+                .delete(baseUrlOfSut + "/news/1%5DysjhcjH")
                 .then()
                 .statusCode(400)
                 .assertThat()
                 .contentType("");
-    }
-    
-    
-    @Test
-    public void test_58_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 3826L)
-                .d("PASSWORD", "\"3X67u\"")
-                .d("USERNAME", "\"Rzr\"")
-            .and().insertInto("CONSUMERS", 3825L)
-                .d("BALANCE_CURRENCY", "\"evomaster_10628_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "348")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_10725_input\"")
-                .r("ID", 3826L)
-            .and().insertInto("PRINTING_SCHEMAS", 3824L)
-                .d("IS_DELETED", "true")
-                .d("PSCHEMA_NAME", "\"tYb8NNU5\"")
-                .d("PAPER_SPECS", "\"evomaster_10726_input\"")
-            .and().insertInto("PRINTSHOPS", 3823L)
-                .d("ADDRESS", "\"evomaster_10629_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_10630_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "167")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_10727_input\"")
-                .d("LONGITUDE", "0.34485486921160957")
-                .d("NAME", "\"Fa\"")
-                .d("NIF", "\"evomaster_10728_input\"")
-            .and().insertInto("PRINTSHOPS", 3822L)
-                .d("ADDRESS", "\"evomaster_10631_inpu\"")
-                .d("AVG_RATING", "0.011035671888231846")
-                .d("BALANCE_CURRENCY", "\"evomaster_10632_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "688")
-                .d("BALANCE_INTEGER_PART", "775")
-                .d("LATITUDE", "0.3062551343322739")
-                .d("LOGO", "\"Ux\"")
-                .d("LONGITUDE", "55534.17192835666")
-                .d("NAME", "\"evomaster_10729_input\"")
-                .d("NIF", "\"evomaster_10730_input\"")
-            .and().insertInto("USERS", 3821L)
-                .d("PASSWORD", "\"evomaster_10731_input\"")
-                .d("USERNAME", "\"1akUHTUUU\"")
-            .and().insertInto("CONSUMERS", 3820L)
-                .d("BALANCE_CURRENCY", "\"evUmUstUUU10633UiUpuU\"")
-                .d("BALANCE_FRACTIONAL_PART", "-261608")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_10634_input\"")
-                .d("ID", "1")
-            .and().insertInto("USERS", 3819L)
-                .d("PASSWORD", "\"5V4Oi\"")
-                .d("USERNAME", "\"evomaster_10635_input\"")
-            .and().insertInto("CONSUMERS", 3818L)
-                .d("BALANCE_CURRENCY", "\"Khwf7iLU\"")
-                .d("BALANCE_FRACTIONAL_PART", "-960")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"dZi7NH0MlDrluu82\"")
-                .r("ID", 3819L)
-            .and().insertInto("PRINT_REQUESTS", 3817L)
-            .and().insertInto("DOCUMENTS", 3816L)
-                .d("FILE_NAME", "\"evomaster_10732_input\"")
-                .d("TOTAL_PAGES", "749")
-            .and().insertInto("DOCUMENTS_SPECS", 3815L)
-                .d("FIRST_PAGE", "516")
-                .d("LAST_PAGE", "427")
-                .r("DOCUMENT_ID", 3816L)
-            .and().insertInto("USERS", 3814L)
-                .d("PASSWORD", "\"W2\"")
-                .d("USERNAME", "\"T8TTB\"")
-            .and().insertInto("CONSUMERS", 3813L)
-                .d("BALANCE_CURRENCY", "\"evomaster_10733_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "693")
-                .d("NAME", "\"evomaster_10638_input\"")
-                .d("ID", "9")
-            .and().insertInto("PRINTING_SCHEMAS", 3812L)
-                .d("IS_DELETED", "false")
-                .d("PSCHEMA_NAME", "\"evomaster_10734_input\"")
-                .d("PAPER_SPECS", "\"\"")
-            .and().insertInto("PRINTSHOPS", 3811L)
-                .d("ADDRESS", "\"RUbUpBcUKkUUbgU2\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"Wdn4z6udk5QHdr\"")
-                .d("BALANCE_FRACTIONAL_PART", "-1655083433")
-                .d("BALANCE_INTEGER_PART", "152")
-                .d("LATITUDE", "2.2089306982585843")
-                .d("LOGO", "\"gxYqumSxTQ4DZAq\"")
-                .d("LONGITUDE", "0.8784162160266852")
-                .d("NAME", "\"evomaster_10735_input\"")
-                .d("NIF", "\"GK\"")
-            .and().insertInto("PRINTSHOPS", 3810L)
-                .d("ADDRESS", "\"PBKlY5l4bvEoRllD\"")
-                .d("AVG_RATING", "0.639506866145277")
-                .d("BALANCE_CURRENCY", "\"evomaster_10736_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "616")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"CvYJg\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_10639_input\"")
-                .d("NIF", "\"kUUBe\"")
-            .and().insertInto("USERS", 3809L)
-                .d("PASSWORD", "\"evomaster_10640_input\"")
-                .d("USERNAME", "\"fwBBqySDk7m\"")
-            .and().insertInto("CONSUMERS", 3808L)
-                .d("BALANCE_CURRENCY", "\"ylQuLf7tTcfd\"")
-                .d("BALANCE_FRACTIONAL_PART", "-1")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"nJWKGZvE2Uw\"")
-                .d("ID", "7")
-            .and().insertInto("USERS", 3807L)
-                .d("PASSWORD", "\"q5UJeCpyuc5jsF\"")
-                .d("USERNAME", "\"gIiQzaGA1f1i4Yyq\"")
-            .and().insertInto("CONSUMERS", 3806L)
-                .d("BALANCE_CURRENCY", "\"\"")
-                .d("BALANCE_FRACTIONAL_PART", "547")
-                .d("BALANCE_INTEGER_PART", "138")
-                .d("NAME", "\"evomaster_10737_input\"")
-                .d("ID", "18")
-            .and().insertInto("PRINT_REQUESTS", 3805L)
-            .and().insertInto("DOCUMENTS", 3804L)
-                .d("FILE_NAME", "\"evomaster_10641_input\"")
-                .d("TOTAL_PAGES", "0")
-            .and().insertInto("DOCUMENTS_SPECS", 3803L)
-                .d("FIRST_PAGE", "-1869115357")
-                .d("LAST_PAGE", "0")
-                .r("DOCUMENT_ID", 3804L)
-            .and().insertInto("USERS", 3802L)
-                .d("PASSWORD", "\"evomaster_10642_input\"")
-                .d("USERNAME", "\"YmiXX\"")
-            .and().insertInto("CONSUMERS", 3801L)
-                .d("BALANCE_CURRENCY", "\"evomaster_10643_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "763")
-                .d("BALANCE_INTEGER_PART", "766")
-                .d("NAME", "\"evomaster_10738_input\"")
-                .d("ID", "15")
-            .and().insertInto("PRINTING_SCHEMAS", 3800L)
-                .d("IS_DELETED", "false")
-                .d("PSCHEMA_NAME", "\"evomaster_10644_input\"")
-                .d("PAPER_SPECS", "\"evomaster_10739_input\"")
-            .and().insertInto("PRINTSHOPS", 3799L)
-                .d("ADDRESS", "\"evomaster_10740_input\"")
-                .d("AVG_RATING", "0.8691549593123309")
-                .d("BALANCE_CURRENCY", "\"evomaster_10645_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "812")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.4972505398589312")
-                .d("LOGO", "\"oGSNATWgV\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"UkzUG8UUgzz9\"")
-                .d("NIF", "\"evomaster_10741_input\"")
-            .and().insertInto("PRINTSHOPS", 3798L)
-                .d("ADDRESS", "\"JsiebR7sqoAcli\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_10742_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "4194322")
-                .d("BALANCE_INTEGER_PART", "342")
-                .d("LATITUDE", "0.8987581059849393")
-                .d("LOGO", "\"evomaster_10647_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"Jk_rTk3MLUJ3eQh\"")
-                .d("NIF", "\"z_FD4vp0_i\"")
-            .and().insertInto("USERS", 3797L)
-                .d("PASSWORD", "\"BG\"")
-                .d("USERNAME", "\"2cpbXzs8nljn\"")
-            .and().insertInto("CONSUMERS", 3796L)
-                .d("BALANCE_CURRENCY", "\"1LT\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"7ld80DgFM\"")
-                .r("ID", 3807L)
-            .and().insertInto("USERS", 3795L)
-                .d("PASSWORD", "\"evomaster_10649_input\"")
-                .d("USERNAME", "\"evomaster_10743_input\"")
-            .and().insertInto("CONSUMERS", 3794L)
-                .d("BALANCE_CURRENCY", "\"evomaster_10650_inputL\"")
-                .d("BALANCE_FRACTIONAL_PART", "964")
-                .d("BALANCE_INTEGER_PART", "837")
-                .d("NAME", "\"RUJgD\"")
-                .r("ID", 3809L)
-            .and().insertInto("PRINT_REQUESTS", 3793L)
-            .and().insertInto("DOCUMENTS", 3792L)
-                .d("FILE_NAME", "\"JppK6wb\"")
-                .d("TOTAL_PAGES", "534")
-            .and().insertInto("DOCUMENTS_SPECS", 3791L)
-                .d("FIRST_PAGE", "478")
-                .d("LAST_PAGE", "199")
-                .d("DOCUMENT_ID", "NULL")
-            .and().insertInto("USERS", 3790L)
-                .d("PASSWORD", "\"HeRcK8gf45\"")
-                .d("USERNAME", "\"evomaster_10744_input\"")
-            .and().insertInto("CONSUMERS", 3789L)
-                .d("BALANCE_CURRENCY", "\"evomaster_10745_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_10746_input\"")
-                .d("ID", "17")
-            .and().insertInto("PRINTING_SCHEMAS", 3788L)
-                .d("IS_DELETED", "true")
-                .d("PSCHEMA_NAME", "\"9BKt1\"")
-                .d("PAPER_SPECS", "\"Ou5JTpBG\"")
-            .and().insertInto("PRINTSHOPS", 3787L)
-                .d("ADDRESS", "\"evomaster_10651_input\"")
-                .d("AVG_RATING", "0.5764272")
-                .d("BALANCE_CURRENCY", "\"evomaster_10747_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "472")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.6570086756441751")
-                .d("LOGO", "\"evomaster_10748_input\"")
-                .d("LONGITUDE", "0.2507865954636891")
-                .d("NAME", "\"6wnhpv\"")
-                .d("NIF", "\"3uVKzAFk4p1R\"")
-            .and().insertInto("PRINTSHOPS", 3786L)
-                .d("ADDRESS", "\"evomaster_10749_input\"")
-                .d("AVG_RATING", "1.378142574353967")
-                .d("BALANCE_CURRENCY", "\"k\"")
-                .d("BALANCE_FRACTIONAL_PART", "633")
-                .d("BALANCE_INTEGER_PART", "11")
-                .d("LATITUDE", "0.9900366772237091")
-                .d("LOGO", "\"evomaster_10750_input\"")
-                .d("LONGITUDE", "0.6209543304817373")
-                .d("NAME", "\"EdyhFA\"")
-                .d("NIF", "\"IjQ4gp0vxG\"")
-            .and().insertInto("USERS", 3785L)
-                .d("PASSWORD", "\"\"")
-                .d("USERNAME", "\"Na9I\"")
-            .and().insertInto("CONSUMERS", 3784L)
-                .d("BALANCE_CURRENCY", "\"tfpm45SdiCINtSrZt\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"S\"")
-                .d("ID", "19")
-            .and().insertInto("USERS", 3783L)
-                .d("PASSWORD", "\"evomaster_10652_input\"")
-                .d("USERNAME", "\"q6ZJwtsE3JWzkIr\"")
-            .and().insertInto("CONSUMERS", 3782L)
-                .d("BALANCE_CURRENCY", "\"evomaster_10653_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "779")
-                .d("BALANCE_INTEGER_PART", "235")
-                .d("NAME", "\"evomaster_10751_input\"")
-                .d("ID", "11")
-            .and().insertInto("PRINT_REQUESTS", 3781L)
-            .and().insertInto("DOCUMENTS", 3780L)
-                .d("FILE_NAME", "\"g1euWeng\"")
-                .d("TOTAL_PAGES", "0")
-            .and().insertInto("DOCUMENTS_SPECS", 3779L)
-                .d("FIRST_PAGE", "-8388197")
-                .d("LAST_PAGE", "82")
-                .r("DOCUMENT_ID", 3780L)
-            .and().insertInto("PRINTSHOPS", 1683L)
-                .d("ADDRESS", "\"evomaster_10752_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_10753_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "365")
-                .d("LATITUDE", "40.348266801619836")
-                .d("LOGO", "\"evomaster_2032_input\"")
-                .d("LONGITUDE", "0.17609940258305257")
-                .d("NAME", "\"2SLsK19uYL5sP6\"")
-                .d("NIF", "\"evomaster_10754_input\"")
-            .and().insertInto("PRINTSHOPS", 1682L)
-                .d("ADDRESS", "\"evomaster_10654_inputO\"")
-                .d("AVG_RATING", "0.7748919570762729")
-                .d("BALANCE_CURRENCY", "\"evomaster_10755_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-16")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "-10690.351554421326")
-                .d("LOGO", "\"Ne9BtYnBM\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"sUpNcyFWvMk\"")
-                .d("NIF", "\"evomaster_10756_input\"")
-            .and().insertInto("USERS", 1681L)
-                .d("PASSWORD", "\"evomaster_10757_input\"")
-                .d("USERNAME", "\"n8lH0XlJpP7\"")
-            .and().insertInto("CONSUMERS", 1680L)
-                .d("BALANCE_CURRENCY", "\"lVUKw0zB6adqI\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-32")
-                .d("NAME", "\"evomaster_10656_input\"")
-                .r("ID", 1681L)
-            .and().insertInto("USERS", 1679L)
-                .d("PASSWORD", "\"CFjECibS\"")
-                .d("USERNAME", "\"evomaster_2035_inpu\"")
-            .and().insertInto("CONSUMERS", 1678L)
-                .d("BALANCE_CURRENCY", "\"L1URUAUU85vo\"")
-                .d("BALANCE_FRACTIONAL_PART", "151")
-                .d("BALANCE_INTEGER_PART", "-67108234")
-                .d("NAME", "\"evomaster_2036_inpu\"")
-                .d("ID", "13")
-            .and().insertInto("PRINT_REQUESTS", 1677L)
-            .and().insertInto("DOCUMENTS", 1676L)
-                .d("FILE_NAME", "\"evomaster_10758_input\"")
-                .d("TOTAL_PAGES", "0")
-                .d("PRINT_REQUEST_ID", "17")
-            .and().insertInto("PRINTSHOPS", 1675L)
-                .d("ADDRESS", "\"evomaster_10759_input\"")
-                .d("AVG_RATING", "0.39955625632936376")
-                .d("BALANCE_CURRENCY", "\"evomaster_10760_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-16776927")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.7480934211019526")
-                .d("LOGO", "\"\u00165\"")
-                .d("LONGITUDE", "0.6711720983972413")
-                .d("NAME", "\"evomaster_10657_input\"")
-                .d("NIF", "\"evomaster_2037_input\"")
-            .and().insertInto("PRINTSHOPS", 1674L)
-                .d("ADDRESS", "\"T_8DqgW3o38NiXF\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"mjsYpW7\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-1024")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"iIaZeC3\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_10658_input\"")
-                .d("NIF", "\"\"")
-            .and().insertInto("USERS", 1673L)
-                .d("PASSWORD", "\"XCzSGGJELJgFjG\"")
-                .d("USERNAME", "\"evomaster_2038_input\"")
-            .and().insertInto("CONSUMERS", 1672L)
-                .d("BALANCE_CURRENCY", "\"w6VSV90kZbehKB\"")
-                .d("BALANCE_FRACTIONAL_PART", "-16776536")
-                .d("BALANCE_INTEGER_PART", "525250")
-                .d("NAME", "\"\"")
-                .d("ID", "10")
-            .and().insertInto("USERS", 1671L)
-                .d("PASSWORD", "\"gfItTrcCfTay\"")
-                .d("USERNAME", "\"evomaster_10659_input\"")
-            .and().insertInto("CONSUMERS", 1670L)
-                .d("BALANCE_CURRENCY", "\"gk2ScaTZQ\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-6290491")
-                .d("NAME", "\"evomaster_2039_input\"")
-                .r("ID", 3795L)
-            .and().insertInto("PRINT_REQUESTS", 1669L)
-            .and().insertInto("DOCUMENTS", 1668L)
-                .d("FILE_NAME", "\"evomaster_2040_input\"")
-                .d("TOTAL_PAGES", "0")
-                .r("PRINT_REQUEST_ID", 1669L)
-            .and().insertInto("PRINTSHOPS", 1667L)
-                .d("ADDRESS", "\"cHZX91UigV\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_10761_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "803")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"PlIoAb2gWQQH\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"TA7g_\"")
-                .d("NIF", "\"evomaster_10660_input\"")
-            .and().insertInto("PRINTSHOPS", 1666L)
-                .d("ADDRESS", "\"evomaster_10661_input\"")
-                .d("AVG_RATING", "0.19021809898620312")
-                .d("BALANCE_CURRENCY", "\"uMya\"")
-                .d("BALANCE_FRACTIONAL_PART", "-291713037")
-                .d("BALANCE_INTEGER_PART", "-2")
-                .d("LATITUDE", "0.15")
-                .d("LOGO", "\"evomaster_10762_input\"")
-                .d("LONGITUDE", "0.754373745659")
-                .d("NAME", "\"evomaster_10763_input\"")
-                .d("NIF", "\"evomaster_10662_input\"")
-            .and().insertInto("USERS", 1665L)
-                .d("PASSWORD", "\"PUUWVUUUZUca8\"")
-                .d("USERNAME", "\"evomaster_2043_input\"")
-            .and().insertInto("CONSUMERS", 1664L)
-                .d("BALANCE_CURRENCY", "\"\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_10764_input\"")
-                .r("ID", 1665L)
-            .and().insertInto("USERS", 1663L)
-                .d("PASSWORD", "\"evomaster_2044_input\"")
-                .d("USERNAME", "\"biTh6cqAG5QOyj\"")
-            .and().insertInto("CONSUMERS", 1662L)
-                .d("BALANCE_CURRENCY", "\"0npwM1\"")
-                .d("BALANCE_FRACTIONAL_PART", "549")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_10663_input\"")
-                .d("ID", "6")
-            .and().insertInto("PRINT_REQUESTS", 1661L)
-            .and().insertInto("DOCUMENTS", 1660L)
-                .d("FILE_NAME", "\"M\"")
-                .d("TOTAL_PAGES", "142")
-                .d("PRINT_REQUEST_ID", "1")
-            .and().insertInto("USERS", 1659L)
-                .d("PASSWORD", "\"xmtQpb8jt\"")
-                .d("USERNAME", "\"evomaster_2046_input\"")
-            .and().insertInto("PRINTSHOPS", 1658L)
-                .d("ADDRESS", "\"AHwB\"")
-                .d("AVG_RATING", "0.3178448864773997")
-                .d("BALANCE_CURRENCY", "\"V3P98U5BrBlk7\"")
-                .d("BALANCE_FRACTIONAL_PART", "33555168")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.7927943543982099")
-                .d("LOGO", "\"TlwBHlkWE1\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"3Ck\"")
-                .d("NIF", "\"evomaster_2048_input\"")
-            .and().insertInto("EMPLOYEES", 1657L)
-                .d("NAME", "\"evomaster_10765_input\"")
-                .d("ID", "1")
-            .and().insertInto("USERS", 1656L)
-                .d("PASSWORD", "\"evomaster_2049_input\"")
-                .d("USERNAME", "\"faiMdui5JWBZC\"")
-            .and().insertInto("PRINTSHOPS", 1655L)
-                .d("ADDRESS", "\"R85N1h777zFhK\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_2050_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-3246")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.03990420461756794")
-                .d("LOGO", "\"UFUCUkpXU5WU3UUU\"")
-                .d("LONGITUDE", "2.150889341021649")
-                .d("NAME", "\"orjKucVyy67Ed\"")
-                .d("NIF", "\"evomaster_10665_input\"")
-            .and().insertInto("EMPLOYEES", 1654L)
-                .d("NAME", "\"evomaster_10766_input\"")
-                .r("ID", 3785L)
-            .and().insertInto("USERS", 1653L)
-                .d("PASSWORD", "\"7k\"")
-                .d("USERNAME", "\"evomaster_10767_input\"")
-            .and().insertInto("PRINTSHOPS", 1652L)
-                .d("ADDRESS", "\"evomaster_10667_input\"")
-                .d("AVG_RATING", "2515.6367753166874")
-                .d("BALANCE_CURRENCY", "\"evomaster_10668_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-247")
-                .d("BALANCE_INTEGER_PART", "866")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_2051_input\"")
-                .d("LONGITUDE", "0.1890024136048305")
-                .d("NAME", "\"evomaster_10669_input\"")
-                .d("NIF", "\"evomaster_10670_input\"")
-            .and().insertInto("EMPLOYEES", 1651L)
-                .d("NAME", "\"evomaster_10671_input\"")
-                .r("ID", 3783L)
-            .and().insertInto("USERS", 1650L)
-                .d("PASSWORD", "\"evomaster_10672_input\"")
-                .d("USERNAME", "\"evomaster_10768_input\"")
-            .and().insertInto("PRINTSHOPS", 1649L)
-                .d("ADDRESS", "\"a\"")
-                .d("AVG_RATING", "0.9670599135042155")
-                .d("BALANCE_CURRENCY", "\"evomaster_2064_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "453")
-                .d("LATITUDE", "204792.7490648852")
-                .d("LOGO", "\"evomaster_2055_inputV\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_4056_input\"")
-                .d("NIF", "\"evomaster_10769_input\"")
-            .and().insertInto("EMPLOYEES", 1648L)
-                .d("NAME", "\"evomaster_10673_input\"")
-                .r("ID", 1663L)
-            .and().insertInto("USERS", 1647L)
-                .d("PASSWORD", "\"I5Nzl5ZbUWyid_\"")
-                .d("USERNAME", "\"evomaster_2057_input\"")
-            .and().insertInto("PRINTSHOPS", 1646L)
-                .d("ADDRESS", "\"evomaster_2058_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_10770_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-8388608")
-                .d("BALANCE_INTEGER_PART", "600")
-                .d("LATITUDE", "0.9766723004522586")
-                .d("LOGO", "\"rLNd_s\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_2060_input\"")
-                .d("NIF", "\"evomaster_2061_input\"")
-            .and().insertInto("EMPLOYEES", 1645L)
-                .d("NAME", "\"L\"")
-                .r("ID", 1647L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .delete(baseUrlOfSut + "/printshops/617/employees/0")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/printshops/0/reviews/-5171189555586882752")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/0/reviews/-5171189555586882752"));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshop")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshop"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/stats")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/stats"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news/969")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"Olá Mundo!\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/requests")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"printrequests\":[{\"id\":3,\"cost\":2.5,\"arrivalTimestamp\":\"Sep 9, 2020 2:44:04 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":5,\"cost\":1.2,\"arrivalTimestamp\":\"Sep 9, 2020 2:44:04 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":7,\"cost\":1.4,\"arrivalTimestamp\":\"Sep 9, 2020 2:44:04 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":9,\"cost\":1.2,\"arrivalTimestamp\":\"Sep 9, 2020 2:44:04 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":12,\"cost\":1.4,\"arrivalTimestamp\":\"Sep 9, 2020 2:44:04 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":16,\"cost\":2.5,\"arrivalTimestamp\":\"Sep 9, 2020 2:44:04 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"}],\"success\":true}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/login")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"price\": \"V\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/16/pricetable/rings")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$RingType_38_valueOf
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("Name is null"))
-                .body("'path'", containsString("/printshops/16/pricetable/rings"));
-    }
-    
-    
-    @Test
-    public void test_59_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/paypal/ipn/consumer/144")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PayPalController_105_consumerLoadUpConfirmation
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/paypal/ipn/consumer/144"));
-    }
-    
-    
-    @Test
-    public void test_60_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 2171L)
-                .d("PASSWORD", "\"ggDSSj_V\"")
-                .d("USERNAME", "\"evomaster_11455_input\"")
-            .and().insertInto("CONSUMERS", 2170L)
-                .d("BALANCE_CURRENCY", "\"S\"")
-                .d("BALANCE_FRACTIONAL_PART", "-3776")
-                .d("BALANCE_INTEGER_PART", "499")
-                .d("NAME", "\"5_sUQYnU7UUJ\"")
-                .d("ID", "18")
-            .and().insertInto("NOTIFICATION", 2169L)
-            .and().insertInto("USERS", 2168L)
-                .d("PASSWORD", "\"evomastur_9168_input\"")
-                .d("USERNAME", "\"evomaster_9169_inpu\"")
-            .and().insertInto("CONSUMERS", 2167L)
-                .d("BALANCE_CURRENCY", "\"evomaster_17843_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-134249808")
-                .d("BALANCE_INTEGER_PART", "2090706")
-                .d("NAME", "\"ibhQ\"")
-                .d("ID", "13")
-            .and().insertInto("NOTIFICATION", 2166L)
-            .and().insertInto("USERS", 2165L)
-                .d("PASSWORD", "\"m\"")
-                .d("USERNAME", "\"evomaster_3973_inpu\"")
-            .and().insertInto("CONSUMERS", 2164L)
-                .d("BALANCE_CURRENCY", "\"N4nC\"")
-                .d("BALANCE_FRACTIONAL_PART", "32768")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"b0sHX\"")
-                .d("ID", "10")
-            .and().insertInto("NOTIFICATION", 2163L)
-            .and().insertInto("USERS", 2162L)
-                .d("PASSWORD", "\"evomaster_17946_input\"")
-                .d("USERNAME", "\"j_kSQz_tKInfss\"")
-            .and().insertInto("CONSUMERS", 2161L)
-                .d("BALANCE_CURRENCY", "\"lVzTLvqkAdOnIGS\"")
-                .d("BALANCE_FRACTIONAL_PART", "2")
-                .d("BALANCE_INTEGER_PART", "-1048338")
-                .d("NAME", "\"007z\"")
-                .d("ID", "9")
-            .and().insertInto("NOTIFICATION", 2160L)
-            .and().insertInto("PRINTSHOPS", 2159L)
-                .d("ADDRESS", "\"NqpfZT_Yq7F\"")
-                .d("AVG_RATING", "474732.7879754395")
-                .d("BALANCE_CURRENCY", "\"evomaster_17845_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-8388347")
-                .d("LATITUDE", "1.73")
-                .d("LOGO", "\"evomaster_17947_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"gv3xmS\"")
-                .d("NIF", "\"LtqlhVlf\"")
-            .and().insertInto("PRINTSHOPS", 2158L)
-                .d("ADDRESS", "\"evomaster_3981_input\"")
-                .d("AVG_RATING", "1.0857194068898233")
-                .d("BALANCE_CURRENCY", "\"evomaster_3982_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-268435011")
-                .d("BALANCE_INTEGER_PART", "-2048")
-                .d("LATITUDE", "-1.0781385593896888")
-                .d("LOGO", "\"evomaster_3983_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_17846_input\"")
-                .d("NIF", "\"evomaster_3985_input\"")
-            .and().insertInto("PRINTSHOPS", 2157L)
-                .d("ADDRESS", "\"evomaster_3986_input\"")
-                .d("AVG_RATING", "0.7077054381351053")
-                .d("BALANCE_CURRENCY", "\"C_VIceRlPJI0\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "66429")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"f4DO3kriOqrB\"")
-                .d("LONGITUDE", "878.1411104456676")
-                .d("NAME", "\"Ya0bUIIsbU\"")
-                .d("NIF", "\"DBkqG9qE\"")
-            .and().insertInto("PRINTSHOPS", 2156L)
-                .d("ADDRESS", "\"evomaster_17847_input\"")
-                .d("AVG_RATING", "0.0")
-                .d("BALANCE_CURRENCY", "\"evomaster_17948_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "-422.8298965773713")
-                .d("LOGO", "\"kh8eUTILtSFU9\"")
-                .d("LONGITUDE", "4578.931875171121")
-                .d("NAME", "\"evomaster_11458_input\"")
-                .d("NIF", "\"d\"")
-            .and().insertInto("PRINTSHOPS", 2155L)
-                .d("ADDRESS", "\"xKU9Xcj4T\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_3993_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "524434")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.7499086909707899")
-                .d("LOGO", "\"4BKOchw\"")
-                .d("LONGITUDE", "43.086")
-                .d("NAME", "\"evomaster_11459_input\"")
-                .d("NIF", "\"evomaster_11460_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/consumer/info")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/info"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/admin/seed")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_123_seed
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/seed"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"Olá Mundo!\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/notifications/4")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_82_removeNotification
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.orm.jpa.JpaSystemException"))
-                .body("'message'", containsString("Null value was assigned to a property [class io.github.proxyprint.kitchen.models.notifications.Notification.read] of primitive type setter of io.github.proxyprint.kitchen.models.notifications.Notification.read; nested exception is org.hibernate.PropertyAccessException: Null value was assigned to a property [class io.github.proxyprint.kitchen.models.notifications.Notification.read] of primitive type setter of io.github.proxyprint.kitchen.models.notifications.Notification.read"))
-                .body("'path'", containsString("/notifications/4"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/0")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/consumer/requests/cancel/0")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/requests/cancel/0"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/admin/printshops")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_67_getPrinShopsList
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
-                .body("'message'", containsString("Infinity is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method."))
-                .body("'path'", containsString("/admin/printshops"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/printshops/0/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/0/employees"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'newsId'", containsString("969"))
+                .body("'authorId'", containsString("HMLb2vw8juge680l"))
+                .body("'text'", containsString("CfcRP6Ud:ap:"))
+                .body("'country'", containsString("/_nskiclD"))
+                .body("'creationTime'", containsString("1936-03-14T"));
     }
     
     
     @Test
-    public void test_61_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .options(baseUrlOfSut + "/consumer/subscribe")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
+    public void test_9() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/printdocument")
+                .delete(baseUrlOfSut + "/news/Ww68Z1mE")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintRequestController_107_processSumitedFiles
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.ClassCastException"))
-                .body("'message'", containsString("org.springframework.security.web.servletapi.HttpServlet3RequestFactory$Servlet3SecurityContextHolderAwareRequestWrapper cannot be cast to org.springframework.web.multipart.MultipartHttpServletRequest"))
-                .body("'path'", containsString("/printdocument"));
+                .contentType("");
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/api/secured")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"Se estiveres autenticado, podes ver isto!\"}"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(0))
+                .body("isEmpty()", is(true));
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printdocument/740")
-                .then()
-                .statusCode(200)
-                .assertThat()
                 .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/printshops/798/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/798/employees"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .head(baseUrlOfSut + "/consumer/subscribe")
+                .body("zCgnQy42_z")
+                .put(baseUrlOfSut + "/news/-4110517215242606734/text")
                 .then()
                 .statusCode(404)
                 .assertThat()
                 .contentType("")
                 .body(isEmptyOrNullString());
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"id\": 3.0, " + 
-                    " \"managerEmail\": \"3Gz\", " + 
-                    " \"managerName\": \"ImgHiSc\", " + 
-                    " \"managerPassword\": \"\", " + 
-                    " \"pShopDateRequest\": \"\", " + 
-                    " \"pShopLatitude\": 0.18806840737917097, " + 
-                    " \"pShopLongitude\": 0.13611200313021943, " + 
-                    " \"pShopNIF\": \"tIdSWjZP\" " + 
+                    " \"authorId\": \"QXISTQcnf\", " + 
+                    " \"country\": \"74e9nwd04fb0Lj\", " + 
+                    " \"creationTime\": \"2082-13-15T05:46:12\", " + 
+                    " \"newsId\": \"4113yUGs\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/request/register")
+                .put(baseUrlOfSut + "/news/H3271QW8oDFU")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/RegisterRequestController_59_registerRequest
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/request/register"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(400.0))
+                .body("'error'", containsString("Bad Request"))
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"2082-13-15T"))
+                .body("'path'", containsString("/news/H3271QW8oDFU"));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .put(baseUrlOfSut + "/consumer/info/update")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/info/update"));
-    }
-    
-    
-    @Test
-    public void test_62_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 3994L)
-                .d("ADDRESS", "\"evomaster_11864_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_20551_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-64")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.7804441249197008")
-                .d("LOGO", "\"I7O4u\"")
-                .d("LONGITUDE", "0.43859988362798474")
-                .d("NAME", "\"evomaster_11713_inputK\"")
-                .d("NIF", "\"evomaster_20552_input\"")
-            .and().insertInto("USERS", 3993L)
-                .d("PASSWORD", "\"evnk]slUUU11775_iUped\"")
-                .d("USERNAME", "\"VseGP\"")
-            .and().insertInto("CONSUMERS", 3992L)
-                .d("BALANCE_CURRENCY", "\"evomaster_20553_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "262144")
-                .d("BALANCE_INTEGER_PART", "857")
-                .d("NAME", "\"gHT8FjlOhB8\"")
-                .d("ID", "19")
-            .and().insertInto("REVIEWS", 3991L)
-                .d("DESCRIPTION", "\"eFMp\"")
-                .d("RATING", "0")
-                .d("PRINTSHOP", "7")
-            .and().insertInto("PRINTSHOPS", 3990L)
-                .d("ADDRESS", "\"evomaster_11776_input\"")
-                .d("AVG_RATING", "0.6")
-                .d("BALANCE_CURRENCY", "\"qKiiP7yaDvSzI/\"")
-                .d("BALANCE_FRACTIONAL_PART", "599")
-                .d("BALANCE_INTEGER_PART", "4194683")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_11865_input\"")
-                .d("LONGITUDE", "0.7557642877009836")
-                .d("NAME", "\"evomaster_11777_input\"")
-                .d("NIF", "\"GNolukwenjnISX8\"")
-            .and().insertInto("USERS", 3989L)
-                .d("PASSWORD", "\"evomaster_11778_input\"")
-                .d("USERNAME", "\"I0dNmAN4xE\"")
-            .and().insertInto("CONSUMERS", 3988L)
-                .d("BALANCE_CURRENCY", "\"evomaster_20554_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "228")
-                .d("BALANCE_INTEGER_PART", "735")
-                .d("NAME", "\"evomaster_11866_input\"")
-                .r("ID", 3989L)
-            .and().insertInto("REVIEWS", 3987L)
-                .d("DESCRIPTION", "\"UIWvHixmyLUU\"")
-                .d("RATING", "0")
-                .d("PRINTSHOP", "4")
-            .and().insertInto("REGISTER_REQUESTS", 2047L)
-                .d("ACCEPTED", "true")
-                .d("MANAGER_EMAIL", "\"evomasUUr_UU7U9_inUut\"")
-                .d("MANAGER_NAME", "\"evomaster_9547_input\"")
-                .d("MANAGER_PASSWORD", "\"4HGmgUfxpAD9zno\"")
-                .d("MANAGER_USERNAME", "\"evomaster_11867_input\"")
-                .d("PSHOP_ADDRESS", "\"evomaster_20555_input\"")
-                .d("PSHOP_DATE_REQUEST", "\"VtKO3Nkm\"")
-                .d("PSHOP_LATITUDE", "8.988465674311579E307")
-                .d("PSHOP_LONGITUDE", "8.988465674311579E307")
-                .d("PSHOP_NIF", "\"evomaster_11780_input\"")
-                .d("PSHOP_NAME", "\"h1t\"")
-            .and().insertInto("USERS", 2046L)
-                .d("PASSWORD", "\"Cx8zhzrOnCJMsP\"")
-                .d("USERNAME", "\"2WHj4WGOB\"")
-            .and().insertInto("USERS", 2045L)
-                .d("PASSWORD", "\"evomaster_9548_input8\"")
-                .d("USERNAME", "\"7UIia\"")
-            .and().insertInto("USERS", 2044L)
-                .d("PASSWORD", "\"evomaster_20556_input\"")
-                .d("USERNAME", "\"evomaster_11871_input\"")
-            .and().insertInto("USERS", 2043L)
-                .d("PASSWORD", "\"evomaster_11712_input\"")
-                .d("USERNAME", "\"O9a858qDeEGnSV\"")
-            .and().insertInto("PRINTSHOPS", 2042L)
-                .d("ADDRESS", "\"iq\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"dK2eIImRNrni\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_11873_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"d5_iRI4NZ7\"")
-                .d("NIF", "\"evomaster_11713_inputK\"")
-            .and().insertInto("PRINTSHOPS", 2041L)
-                .d("ADDRESS", "\"evomaster_11714_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_11783_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "64")
-                .d("BALANCE_INTEGER_PART", "16240")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\".\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_11715_input\"")
-                .d("NIF", "\"evoUasUmrUU178UUinput\"")
-            .and().insertInto("PRINTSHOPS", 2040L)
-                .d("ADDRESS", "\"zw7nxrY\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"X6YC0a\"")
-                .d("BALANCE_FRACTIONAL_PART", "-524288")
-                .d("BALANCE_INTEGER_PART", "1049405")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"f\"")
-                .d("LONGITUDE", "0.427669")
-                .d("NAME", "\"udwZjaB6Bi2\"")
-                .d("NIF", "\"evomaster_20557_input\"")
-            .and().insertInto("PRINTSHOPS", 2039L)
-                .d("ADDRESS", "\"0aqR0M\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"5iWVkWc\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-2097152")
-                .d("LATITUDE", "0.5112200851631232")
-                .d("LOGO", "\"kYFizolnz\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"\"")
-                .d("NIF", "\"evomaster_20558_input\"")
-            .and().insertInto("PRINTSHOPS", 2038L)
-                .d("ADDRESS", "\"D26lMTsfjDIg0E\"")
-                .d("AVG_RATING", "4.9E-324")
-                .d("BALANCE_CURRENCY", "\"eUUqisUerU9552^UnUuU\"")
-                .d("BALANCE_FRACTIONAL_PART", "2828")
-                .d("BALANCE_INTEGER_PART", "582")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"UUUUZiIUkYK\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_20559_input\"")
-                .d("NIF", "\"evomaster_11874_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/printshops/-1641464769")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/8/reviews")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("[{\"id\":2,\"description\":\"Aguns funcionários poderiam ser mais simpáticos. Mas serviço ok.\",\"rating\":3,\"username\":\"Rui Moreira Campos\"},{\"id\":3,\"description\":\"Excelente!\",\"rating\":5,\"username\":\"Ana Monteiro\"},{\"id\":1,\"description\":\"Muito bom\",\"rating\":4,\"username\":\"João dos Santos\"}]"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/printshops/69/reviews/-1134842373120742548")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/69/reviews/-1134842373120742548"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/request/accept/0")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/consumer/Yu/notifications")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_234_readAllNotifications
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/Yu/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/api/secured")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/api/secured"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/json;charset=UTF-8")
                 .body(" { " + 
-                    " \"coverType\": \"HAEH0\" " + 
+                    " \"authorId\": \"jfkdmgzso3\", " + 
+                    " \"creationTime\": \"2077-04-24T24:24:54\", " + 
+                    " \"id\": \"iVNvnBKhKvf\", " + 
+                    " \"text\": \"bEa\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/169/pricetable/deletecover")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/169/pricetable/deletecover"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" \"evomaster_11787_input\" ")
-                .post(baseUrlOfSut + "/request/reject/-16384")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/reject/-16384"));
-    }
-    
-    
-    @Test
-    public void test_63_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 1720L)
-                .d("PASSWORD", "\"evomaster_23957_input\"")
-                .d("USERNAME", "\"Jf6IiCY\"")
-            .and().insertInto("CONSUMERS", 1719L)
-                .d("BALANCE_CURRENCY", "\"ivomaUUUr_215U_iUpu\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-130572")
-                .d("NAME", "\"UUgm]UtUrU21U6_iUpuU\"")
-                .d("ID", "10")
-            .and().insertInto("NOTIFICATION", 1718L)
-            .and().insertInto("USERS", 1717L)
-                .d("PASSWORD", "\"C\"")
-                .d("USERNAME", "\"BRzVKUfrzUA6Fc\"")
-            .and().insertInto("CONSUMERS", 1716L)
-                .d("BALANCE_CURRENCY", "\"Ub\"")
-                .d("BALANCE_FRACTIONAL_PART", "4096")
-                .d("BALANCE_INTEGER_PART", "-1")
-                .d("NAME", "\"evomaster_2157_inputM7\"")
-                .d("ID", "18")
-            .and().insertInto("NOTIFICATION", 1715L)
-            .and().insertInto("USERS", 1714L)
-                .d("PASSWORD", "\"Ay3Y1ATZ\"")
-                .d("USERNAME", "\"evomaster_2158_inpu\"")
-            .and().insertInto("CONSUMERS", 1713L)
-                .d("BALANCE_CURRENCY", "\"ba\"")
-                .d("BALANCE_FRACTIONAL_PART", "692")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"YR_2UrkMc8T\"")
-                .d("ID", "19")
-            .and().insertInto("NOTIFICATION", 1712L)
-            .and().insertInto("PRINTSHOPS", 1711L)
-                .d("ADDRESS", "\"evomaster_12909_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_23965_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "4714")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.580299051")
-                .d("LOGO", "\"evomaster_23966_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_2159_inputC\"")
-                .d("NIF", "\"db1Y5LUYJLii9\"")
-            .and().insertInto("PRINTSHOPS", 1710L)
-                .d("ADDRESS", "\"evokaster_2161_inpuX\"")
-                .d("AVG_RATING", "0.67")
-                .d("BALANCE_CURRENCY", "\"evomaster_23958_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-128")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.9220007153890281")
-                .d("LOGO", "\"38hM83Rg5xW\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_23959_input\"")
-                .d("NIF", "\"evomaUter_12911UinUut\"")
-            .and().insertInto("USERS", 1709L)
-                .d("PASSWORD", "\"eUomcstUr_12764_input\"")
-                .d("USERNAME", "\"evomaster_12912_input\"")
-            .and().insertInto("CONSUMERS", 1708L)
-                .d("BALANCE_CURRENCY", "\"evomaster_12913_inputr\"")
-                .d("BALANCE_FRACTIONAL_PART", "1000627297")
-                .d("BALANCE_INTEGER_PART", "-2095863")
-                .d("NAME", "\"evomaster_2165_input\"")
-                .r("ID", 1709L)
-            .and().insertInto("USERS", 1707L)
-                .d("PASSWORD", "\"@\"")
-                .d("USERNAME", "\"1UMa\"")
-            .and().insertInto("CONSUMERS", 1706L)
-                .d("BALANCE_CURRENCY", "\"lNEUzDOm2eJ9\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"sVMvvHIwWADyTG\"")
-                .r("ID", 1707L)
-            .and().insertInto("PRINT_REQUESTS", 1705L)
-            .and().insertInto("PRINTSHOPS", 1704L)
-                .d("ADDRESS", "\"evomaster_23960_input\"")
-                .d("AVG_RATING", "1841.280942696776")
-                .d("BALANCE_CURRENCY", "\"Jzh6Y9Q7qo\"")
-                .d("BALANCE_FRACTIONAL_PART", "992")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evmqaster_2166_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"V9c\"")
-                .d("NIF", "\"QmrxrEIOS1KQbKSz\"")
-            .and().insertInto("PRINTSHOPS", 1703L)
-                .d("ADDRESS", "\"evomaster_12925_inputo\"")
-                .d("AVG_RATING", "2306358.3885502354")
-                .d("BALANCE_CURRENCY", "\"4\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-2100988")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_23961_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"WRJNn_Wvm\"")
-                .d("NIF", "\"evomastej_2167`input\"")
-            .and().insertInto("USERS", 1702L)
-                .d("PASSWORD", "\"evomaster_12525_input\"")
-                .d("USERNAME", "\"OdUUUNyUh5Ug\"")
-            .and().insertInto("CONSUMERS", 1701L)
-                .d("BALANCE_CURRENCY", "\"evomaster_12926_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "128")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_12526_input6\"")
-                .d("ID", "11")
-            .and().insertInto("USERS", 1700L)
-                .d("PASSWORD", "\"evomaster_23962_input\"")
-                .d("USERNAME", "\"g4JuP3WMicnq\"")
-            .and().insertInto("CONSUMERS", 1699L)
-                .d("BALANCE_CURRENCY", "\"evsmUuter_2188_hfpug\"")
-                .d("BALANCE_FRACTIONAL_PART", "-8")
-                .d("BALANCE_INTEGER_PART", "1")
-                .d("NAME", "\"evomaster_12528_input\"")
-                .r("ID", 1702L)
-            .and().insertInto("PRINT_REQUESTS", 1698L)
-            .and().insertInto("PRINTSHOPS", 1697L)
-                .d("ADDRESS", "\"evomaster_12529_input\"")
-                .d("AVG_RATING", "233.33")
-                .d("BALANCE_CURRENCY", "\"evomaster_12917_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-130393")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"t6QLAUsk\"")
-                .d("LONGITUDE", "0.9172071101589248")
-                .d("NAME", "\"I\"")
-                .d("NIF", "\"njfk6zfVVVsgp\"")
-            .and().insertInto("PRINTSHOPS", 1696L)
-                .d("ADDRESS", "\"MjUm\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"UU\"")
-                .d("BALANCE_FRACTIONAL_PART", "64")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "1.0")
-                .d("LOGO", "\"evomaster_12918_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"YRUY812\"")
-                .d("NIF", "\"\"")
-            .and().insertInto("USERS", 1695L)
-                .d("PASSWORD", "\"evomaster_2171_input\"")
-                .d("USERNAME", "\"9J\"")
-            .and().insertInto("CONSUMERS", 1694L)
-                .d("BALANCE_CURRENCY", "\"enomaUUerU237U_intut\"")
-                .d("BALANCE_FRACTIONAL_PART", "-3994")
-                .d("BALANCE_INTEGER_PART", "1024")
-                .d("NAME", "\"bNOqUi\"")
-                .d("ID", "1")
-            .and().insertInto("USERS", 1693L)
-                .d("PASSWORD", "\"3e1U\"")
-                .d("USERNAME", "\"evomaster_23967_input\"")
-            .and().insertInto("CONSUMERS", 1692L)
-                .d("BALANCE_CURRENCY", "\"evomaster_23963_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "1048582")
-                .d("BALANCE_INTEGER_PART", "126")
-                .d("NAME", "\"evomaster_2174_inp\"")
-                .r("ID", 1693L)
-            .and().insertInto("PRINT_REQUESTS", 1691L)
-            .and().insertInto("PRINTSHOPS", 1690L)
-                .d("ADDRESS", "\"ZxgxDr\"")
-                .d("AVG_RATING", "0.8723024604122409")
-                .d("BALANCE_CURRENCY", "\"evomaster_12929_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-16807936")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"eUomaktfr_2175ciUput\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_12919_input\"")
-                .d("NIF", "\"evomaster_23968_input\"")
-            .and().insertInto("PRINTSHOPS", 1689L)
-                .d("ADDRESS", "\"evomaster_23964_inputh\"")
-                .d("AVG_RATING", "0.2739")
-                .d("BALANCE_CURRENCY", "\"evomaster_12533_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "112")
-                .d("BALANCE_INTEGER_PART", "-128")
-                .d("LATITUDE", "2.565")
-                .d("LOGO", "\"OfdP8GzLj2Ppj8c\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_2176_input\"")
-                .d("NIF", "\"1odtOtE\"")
-            .and().insertInto("USERS", 1688L)
-                .d("PASSWORD", "\"evomaster_12920_input\"")
-                .d("USERNAME", "\"_XpwhCYQZkqL\"")
-            .and().insertInto("CONSUMERS", 1687L)
-                .d("BALANCE_CURRENCY", "\"evomaster_12930_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-512")
-                .d("NAME", "\"evmmaster_12931_input\"")
-                .r("ID", 1717L)
-            .and().insertInto("USERS", 1686L)
-                .d("PASSWORD", "\"evomaster_12535_innut\"")
-                .d("USERNAME", "\"evomaster_12921_input\"")
-            .and().insertInto("CONSUMERS", 1685L)
-                .d("BALANCE_CURRENCY", "\"evoUastUr_U2U2U_iUput\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-2432")
-                .d("NAME", "\"UvomasUUtg0178_UnUu\"")
-                .r("ID", 1700L)
-            .and().insertInto("PRINT_REQUESTS", 1684L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/subscribe")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .put(baseUrlOfSut + "/consumer/subscribe")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/printdocument/20/budget")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintRequestController_327_calcBudgetForPrintRecipe
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.orm.jpa.JpaSystemException"))
-                .body("'message'", containsString("Null value was assigned to a property [class io.github.proxyprint.kitchen.models.consumer.printrequest.PrintRequest.cost] of primitive type setter of io.github.proxyprint.kitchen.models.consumer.printrequest.PrintRequest.cost; nested exception is org.hibernate.PropertyAccessException: Null value was assigned to a property [class io.github.proxyprint.kitchen.models.consumer.printrequest.PrintRequest.cost] of primitive type setter of io.github.proxyprint.kitchen.models.consumer.printrequest.PrintRequest.cost"))
-                .body("'path'", containsString("/printdocument/20/budget"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/nearest")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(400.0))
+                .body("'error'", containsString("Bad Request"))
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"2077-04-24T"))
+                .body("'path'", containsString("/news"));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/printshops/432/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/432/employees"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/json;charset=UTF-8")
                 .body(" { " + 
-                    " \"infLim\": 942.0, " + 
-                    " \"price\": \"inVMCfnNyy_C\" " + 
+                    " \"country\": \"K3qgEv\", " + 
+                    " \"creationTime\": \"1992-10-05T08:52:47\", " + 
+                    " \"id\": \"HuBvFF\", " + 
+                    " \"newsId\": \"ZvTdGONz\", " + 
+                    " \"text\": \"No7l3omp_\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/-8432702246040571142/pricetable/rings")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/-8432702246040571142/pricetable/rings"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/notifications/0")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_87_readNotification
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/notifications/0"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(400.0))
+                .body("'error'", containsString("Bad Request"))
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"1992-10-05T"))
+                .body("'path'", containsString("/news"));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/consumer/printrequest/0/submit")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintRequestController_210_finishAndSubmitPrintRequest
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/printrequest/0/submit"));
-    }
-    
-    
-    @Test
-    public void test_64_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 537L)
-                .d("ADDRESS", "\"WoxsMO9vmGPIq\"")
-                .d("AVG_RATING", "0.098782")
-                .d("BALANCE_CURRENCY", "\"evomaster_560_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "236")
-                .d("BALANCE_INTEGER_PART", "863")
-                .d("LATITUDE", "0.8188298115905663")
-                .d("LOGO", "\"evomaster_561_input\"")
-                .d("LONGITUDE", "0.5380474305598442")
-                .d("NAME", "\"j\"")
-                .d("NIF", "\"tZYLdZG\"")
-            .and().insertInto("PRINTSHOPS", 536L)
-                .d("ADDRESS", "\"L_kI\"")
-                .d("AVG_RATING", "106.64662112947455")
-                .d("BALANCE_CURRENCY", "\"@\"")
-                .d("BALANCE_FRACTIONAL_PART", "297")
-                .d("BALANCE_INTEGER_PART", "-32168")
-                .d("LATITUDE", "0.03191931376384449")
-                .d("LOGO", "\"GwhxqQ36P_Wj\"")
-                .d("LONGITUDE", "0.006115800137912464")
-                .d("NAME", "\"evomaster_562_input\"")
-                .d("NIF", "\"os\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverType\": \"\", " + 
-                    " \"priceA3\": \"h06y58gR6_\" " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/4/pricetable/covers")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news?" + 
+                    "authorId=5&" + 
+                    "country=9cPrIcbTl")
                 .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/printshops/pricetable/Item$CoverType_33_valueOf
+                .statusCode(200)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
-                .body("'message'", containsString("No enum constant io.github.proxyprint.kitchen.models.printshops.pricetable.Item.CoverType."))
-                .body("'path'", containsString("/printshops/4/pricetable/covers"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(0))
+                .body("isEmpty()", is(true));
     }
     
     
     @Test
-    public void test_65_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 2171L)
-                .d("PASSWORD", "\"KfBeBaAlZEQN\"")
-                .d("USERNAME", "\"4\"")
-            .and().insertInto("CONSUMERS", 2170L)
-                .d("BALANCE_CURRENCY", "\"evomaster_7118_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "328")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"5csUQYn87PrJ\"")
-                .r("ID", 2171L)
-            .and().insertInto("NOTIFICATION", 2169L)
-            .and().insertInto("USERS", 2168L)
-                .d("PASSWORD", "\"evomaster_7119_input\"")
-                .d("USERNAME", "\"evomaster_3971_inpu\"")
-            .and().insertInto("CONSUMERS", 2167L)
-                .d("BALANCE_CURRENCY", "\"Buf8gA\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "9938")
-                .d("NAME", "\"evomaster_3972_input\"")
-                .r("ID", 2168L)
-            .and().insertInto("NOTIFICATION", 2166L)
-            .and().insertInto("USERS", 2165L)
-                .d("PASSWORD", "\"m\"")
-                .d("USERNAME", "\"evomaster_3973_input\"")
-            .and().insertInto("CONSUMERS", 2164L)
-                .d("BALANCE_CURRENCY", "\"evomaster_7120_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-31994")
-                .d("BALANCE_INTEGER_PART", "32920")
-                .d("NAME", "\"evomaster_7121_input\"")
-                .d("ID", "6")
-            .and().insertInto("NOTIFICATION", 2163L)
-            .and().insertInto("USERS", 2162L)
-                .d("PASSWORD", "\"evomaster_3974_inputm\"")
-                .d("USERNAME", "\"j_kSQz_tKInfss\"")
-            .and().insertInto("CONSUMERS", 2161L)
-                .d("BALANCE_CURRENCY", "\"evomaster_3975_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-268434475")
-                .d("BALANCE_INTEGER_PART", "230")
-                .d("NAME", "\"evomaster_3976_input\"")
-                .d("ID", "13")
-            .and().insertInto("NOTIFICATION", 2160L)
-            .and().insertInto("PRINTSHOPS", 2159L)
-                .d("ADDRESS", "\"eUnmUstUr_UU7U_inpUt\"")
-                .d("AVG_RATING", "-3953.9910530552115")
-                .d("BALANCE_CURRENCY", "\"uL6fykj2Q4kjRi\"")
-                .d("BALANCE_FRACTIONAL_PART", "924")
-                .d("BALANCE_INTEGER_PART", "132")
-                .d("LATITUDE", "0.743600138978593")
-                .d("LOGO", "\"w7UiXN2_lXnbd\"")
-                .d("LONGITUDE", "0.9821443650271674")
-                .d("NAME", "\"evomaster_7122_input\"")
-                .d("NIF", "\"evomaster_3980_inpu\"")
-            .and().insertInto("PRINTSHOPS", 2158L)
-                .d("ADDRESS", "\"eUoUiUUUU_3U8UUinUut\"")
-                .d("AVG_RATING", "0.35001083420963264")
-                .d("BALANCE_CURRENCY", "\"evomaster_3982_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-301989443")
-                .d("BALANCE_INTEGER_PART", "411")
-                .d("LATITUDE", "0.32009156170730624")
-                .d("LOGO", "\"evomaster_3983_input\"")
-                .d("LONGITUDE", "0.5267457830912612")
-                .d("NAME", "\"evomaster_3984_input\"")
-                .d("NIF", "\"evomaster_3985_input\"")
-            .and().insertInto("PRINTSHOPS", 2157L)
-                .d("ADDRESS", "\"evomaster_3986_input\"")
-                .d("AVG_RATING", "0.7077054381351053")
-                .d("BALANCE_CURRENCY", "\"evomaster_3987_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "654")
-                .d("BALANCE_INTEGER_PART", "893")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"UvouaUUUr_39U8_iUput\"")
-                .d("LONGITUDE", "0.5638096107520666")
-                .d("NAME", "\"evomaster_7123_input\"")
-                .d("NIF", "\"DBkqG1q\"")
-            .and().insertInto("PRINTSHOPS", 2156L)
-                .d("ADDRESS", "\"2\"")
-                .d("AVG_RATING", "0.0")
-                .d("BALANCE_CURRENCY", "\"evomaster_7124_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "315")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.870773139529149")
-                .d("LOGO", "\"evomaster_7125_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"4j\"")
-                .d("NIF", "\"Q\"")
-            .and().insertInto("PRINTSHOPS", 2155L)
-                .d("ADDRESS", "\"evomaster_3992_input\"")
-                .d("AVG_RATING", "0.053413192010567045")
-                .d("BALANCE_CURRENCY", "\"evomaster_3993_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "524434")
-                .d("BALANCE_INTEGER_PART", "521")
-                .d("LATITUDE", "0.7499086909707899")
-                .d("LOGO", "\"oiMIB2Na1Hee586\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"mxEPPeY8\"")
-                .d("NIF", "\"evomaster_7126_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" \"JNASX\" ")
-                .put(baseUrlOfSut + "/printshops/8/pricetable/editstapling")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/PriceTableController_255_editStaplingPrice
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NumberFormatException"))
-                .body("'message'", containsString("For input string: \"\"JNASX\"\""))
-                .body("'path'", containsString("/printshops/8/pricetable/editstapling"));
+    public void test_10() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/admin/seed")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_123_seed
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/seed"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "")
-                .then()
-                .statusCode(200)
-                .assertThat()
                 .contentType("text/plain")
-                .body(containsString("{\"message\":\"Olá Mundo!\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/notifications/0")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_82_removeNotification
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.EmptyResultDataAccessException"))
-                .body("'message'", containsString("No class io.github.proxyprint.kitchen.models.notifications.Notification entity with id 0 exists!"))
-                .body("'path'", containsString("/notifications/0"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/0")
+                .body("U4aI7Z20K")
+                .put(baseUrlOfSut + "/news/890/text")
                 .then()
                 .statusCode(404)
                 .assertThat()
@@ -5594,69 +651,25 @@
                 .body(isEmptyOrNullString());
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/consumer/requests/cancel/-4193920")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/requests/cancel/-4193920"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/printshops/0/employees")
+                .contentType("application/json;charset=UTF-8")
+                .body(" { " + 
+                    " \"id\": \"4ubFpd09SIvr\" " + 
+                    " } ")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/0/employees"));
-    }
-    
-    
-    @Test
-    public void test_66_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 3436L)
-                .d("PASSWORD", "\"evomaster_15191_inpu\"")
-                .d("USERNAME", "\"fxrGPONX\"")
-            .and().insertInto("USERS", 3435L)
-                .d("PASSWORD", "\"evomaster_15192_input\"")
-                .d("USERNAME", "\"t\"")
-            .and().insertInto("USERS", 3434L)
-                .d("PASSWORD", "\"JtvEVg8_\"")
-                .d("USERNAME", "\"evomaster_15237_input\"")
-            .and().insertInto("USERS", 3433L)
-                .d("PASSWORD", "\"UvUmaUteU_MU4U_jUUU\"")
-                .d("USERNAME", "\"5M6sUUSkUUkUUEg\"")
-            .and().insertInto("USERS", 3432L)
-                .d("PASSWORD", "\"Uvomaster_8958UUnput\"")
-                .d("USERNAME", "\"evomaster_15236_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
+                .contentType("");
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/;%5Bd_/notifications")
+                .delete(baseUrlOfSut + "/news/wH_yHLaGb_eZFQN")
                 .then()
-                .statusCode(405)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(405.0))
-                .body("'error'", containsString("Method Not Allowed"))
-                .body("'exception'", containsString("org.springframework.web.HttpRequestMethodNotSupportedException"))
-                .body("'message'", containsString("Request method 'DELETE' not supported"))
-                .body("'path'", containsString("/consumer/;%5Bd_/notifications"));
+                .contentType("");
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/consumer/subscribe")
+                .get(baseUrlOfSut + "/news/2")
                 .then()
                 .statusCode(404)
                 .assertThat()
@@ -5664,3368 +677,186 @@
                 .body(isEmptyOrNullString());
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .options(baseUrlOfSut + "/*")
-                .then()
-                .statusCode(204)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/request/accept/0")
-                .then()
-                .statusCode(403)
-                .assertThat()
                 .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/accept/0"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .head(baseUrlOfSut + "/consumer/subscribe")
+                .body(" { " + 
+                    " \"authorId\": \"eHApyV0\", " + 
+                    " \"country\": \"z\", " + 
+                    " \"id\": \"Aga2rrZ3\", " + 
+                    " \"newsId\": \"v_WKz0lV1\", " + 
+                    " \"text\": \"RxXiXPkFL4ha09L\" " + 
+                    " } ")
+                .put(baseUrlOfSut + "/news/__Cy7le")
                 .then()
                 .statusCode(404)
                 .assertThat()
                 .contentType("")
                 .body(isEmptyOrNullString());
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/subscribe")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"balance\": { " + 
-                    " \"currency\": \"i\", " + 
-                    " \"fractionalPart\": 791.0, " + 
-                    " \"integerPart\": 946.0, " + 
-                    " \"moneyAsDouble\": 0.8182187237212465, " + 
-                    " \"valid\": true " + 
-                    " }, " + 
-                    " \"email\": \"dm0cVm\", " + 
-                    " \"rolesSet\": [ " + 
-                    " \"T0qIOLh4WBunu\" " + 
-                    " ], " + 
-                    " \"username\": \"2y\\\\y1\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/admin/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_77_newAdmin
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/register"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/requests/pending")
+        given().accept("application/json")
+                .get(baseUrlOfSut + "/countries")
                 .then()
                 .statusCode(200)
                 .assertThat()
                 .contentType("application/json")
-                .body("size()", equalTo(4))
-                .body("'id'", hasItem(numberMatches(1.0)))
-                .body("'managerName'", hasItem(containsString("Jorge Caldas")))
-                .body("'managerUsername'", hasItem(containsString("jcaldas")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua das Cruzes n31")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Printer Style")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()))
-                .body("'id'", hasItem(numberMatches(2.0)))
-                .body("'managerName'", hasItem(containsString("Martim da Silva")))
-                .body("'managerUsername'", hasItem(containsString("msilva")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua das Cruzes n32")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Print More")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()))
-                .body("'id'", hasItem(numberMatches(3.0)))
-                .body("'managerName'", hasItem(containsString("Carlos Pinto")))
-                .body("'managerUsername'", hasItem(containsString("cpin")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua n33")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Papelaria Pinto")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()))
-                .body("'id'", hasItem(numberMatches(4.0)))
-                .body("'managerName'", hasItem(containsString("Ana Carolina Matos")))
-                .body("'managerUsername'", hasItem(containsString("acmatos")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua das Cerejas n33")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Impressões Matos")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/consumer/info/update")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_134_updateConsumerInfo
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/info/update"));
-    }
-    
-    
-    @Test
-    public void test_67_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 2171L)
-                .d("PASSWORD", "\"evomastar_7559_inru\"")
-                .d("USERNAME", "\"UU\"")
-            .and().insertInto("CONSUMERS", 2170L)
-                .d("BALANCE_CURRENCY", "\"eUomaster_25125_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-24")
-                .d("BALANCE_INTEGER_PART", "-128")
-                .d("NAME", "\"Y0kXuGsZU\"")
-                .d("ID", "10")
-            .and().insertInto("NOTIFICATION", 2169L)
-            .and().insertInto("USERS", 2168L)
-                .d("PASSWORD", "\"Uz_m_dUerUV31U_iUpus\"")
-                .d("USERNAME", "\"evomaster_19974_input\"")
-            .and().insertInto("CONSUMERS", 2167L)
-                .d("BALANCE_CURRENCY", "\">qf8gA\"")
-                .d("BALANCE_FRACTIONAL_PART", "-64")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evom]ster_2U096UinputWU\"")
-                .r("ID", 2168L)
-            .and().insertInto("NOTIFICATION", 2166L)
-            .and().insertInto("USERS", 2165L)
-                .d("PASSWORD", "\"EsHFe_om\"")
-                .d("USERNAME", "\"d\"")
-            .and().insertInto("CONSUMERS", 2164L)
-                .d("BALANCE_CURRENCY", "\"evomaster_1997ScinUut\"")
-                .d("BALANCE_FRACTIONAL_PART", "-27938")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"U4UV\"")
-                .d("ID", "1")
-            .and().insertInto("NOTIFICATION", 2163L)
-            .and().insertInto("USERS", 2162L)
-                .d("PASSWORD", "\"npocEsaUOa\"")
-                .d("USERNAME", "\"cHUrx0v\"")
-            .and().insertInto("CONSUMERS", 2161L)
-                .d("BALANCE_CURRENCY", "\"8\"")
-                .d("BALANCE_FRACTIONAL_PART", "-200")
-                .d("BALANCE_INTEGER_PART", "-66")
-                .d("NAME", "\"gUUmaUUerU730U_inru\"")
-                .r("ID", 2162L)
-            .and().insertInto("NOTIFICATION", 2160L)
-            .and().insertInto("PRINTSHOPS", 2159L)
-                .d("ADDRESS", "\"cvomastcr_19977_inputG\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"uL8fykj2Q4UjRiM\"")
-                .d("BALANCE_FRACTIONAL_PART", "-1039842")
-                .d("BALANCE_INTEGER_PART", "-1")
-                .d("LATITUDE", "110.90799931768146")
-                .d("LOGO", "\"eUom]stes_7565_input\"")
-                .d("LONGITUDE", "1.0")
-                .d("NAME", "\"QvIny0Bvb/lIVV2\"")
-                .d("NIF", "\"evYmasterY3980_Snpu\"")
-            .and().insertInto("PRINTSHOPS", 2158L)
-                .d("ADDRESS", "\"e]pUiSEUU[3U<]EinYuU\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evokastejU7310_inputJh\"")
-                .d("BALANCE_FRACTIONAL_PART", "-128")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"dlbOE9bJNm7\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_7311_mnput\"")
-                .d("NIF", "\"NQAxMM2\"")
-            .and().insertInto("PRINTSHOPS", 2157L)
-                .d("ADDRESS", "\"UPUUUQUeU_SUV6_iUUut\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"UouhMKtUwAh\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "1021")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"xuF3tzSXbt\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_28386_UnpuU8\"")
-                .d("NIF", "\"kk\"")
-            .and().insertInto("PRINTSHOPS", 2156L)
-                .d("ADDRESS", "\"evpmawtfr_756U_input2\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"UxomasYeUR1UU78_irpuU\"")
-                .d("BALANCE_FRACTIONAL_PART", "-24")
-                .d("BALANCE_INTEGER_PART", "-1208")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"euUmaster]7125_input`\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"U\"")
-                .d("NIF", "\"O5c080irMa35F6q\"")
-            .and().insertInto("PRINTSHOPS", 2155L)
-                .d("ADDRESS", "\"BMP\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_19980_jnput9A\"")
-                .d("BALANCE_FRACTIONAL_PART", "-1572422")
-                .d("BALANCE_INTEGER_PART", "-176")
-                .d("LATITUDE", "69.27522166014137")
-                .d("LOGO", "\"MiUIUQSc1YUSEU6\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomasteU_7568ainput\"")
-                .d("NIF", "\"UOxnMUMw7u\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
+                .body("size()", equalTo(247))
+                .body("", hasItems("Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" \"FLAR\" ")
-                .put(baseUrlOfSut + "/printshops/8/pricetable/editstapling")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/PriceTableController_255_editStaplingPrice
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NumberFormatException"))
-                .body("'message'", containsString("For input string: \"\"FLAR\"\""))
-                .body("'path'", containsString("/printshops/8/pricetable/editstapling"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/admin/seed")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_123_seed
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/seed"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"Olá Mundo!\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/notifications/0")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_82_removeNotification
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.EmptyResultDataAccessException"))
-                .body("'message'", containsString("No class io.github.proxyprint.kitchen.models.notifications.Notification entity with id 0 exists!"))
-                .body("'path'", containsString("/notifications/0"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/consumer/evomaster_19981_input/notifications")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_234_readAllNotifications
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/evomaster_19981_input/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/nearest")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/printshops/2097153/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/2097153/employees"));
-    }
-    
-    
-    @Test
-    public void test_68_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/consumer/printrequest/773/submit")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintRequestController_210_finishAndSubmitPrintRequest
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/printrequest/773/submit"));
-    }
-    
-    
-    @Test
-    public void test_69_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"balance\": { " + 
-                    " \"fractionalPart\": 713.0, " + 
-                    " \"integerPart\": 241.0, " + 
-                    " \"moneyAsDouble\": 0.9053389684689644, " + 
-                    " \"valid\": true " + 
-                    " }, " + 
-                    " \"email\": \"Jli9dEwg\", " + 
-                    " \"id\": 169.0, " + 
-                    " \"rolesSet\": [ " + 
-                    " \"\", " + 
-                    " \"f09uUH\", " + 
-                    " \"qD1r2RYY0\" " + 
-                    " ], " + 
-                    " \"username\": \"jYrE5scSh\" " + 
+                    " \"authorId\": \"\", " + 
+                    " \"creationTime\": \"1941-09-13T00:15:02\", " + 
+                    " \"newsId\": \"7cdEX\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/admin/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_77_newAdmin
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/register"));
-    }
-    
-    
-    @Test
-    public void test_70_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 2034L)
-                .d("PASSWORD", "\"YCSkCA4VZOV7ZkU\"")
-                .d("USERNAME", "\"e\"")
-            .and().insertInto("CONSUMERS", 2033L)
-                .d("BALANCE_CURRENCY", "\"Wujdjvk3WztRn_\"")
-                .d("BALANCE_FRACTIONAL_PART", "508")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_4049_input\"")
-                .d("ID", "14")
-            .and().insertInto("NOTIFICATION", 2032L)
-                .d("CONSUMER", "2")
-            .and().insertInto("USERS", 2031L)
-                .d("PASSWORD", "\"4ZYArSs\"")
-                .d("USERNAME", "\"lD7aM\"")
-            .and().insertInto("CONSUMERS", 2030L)
-                .d("BALANCE_CURRENCY", "\"evomaster_4050_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "995")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"Si3WY3xJTbk\"")
-                .r("ID", 2031L)
-            .and().insertInto("NOTIFICATION", 2029L)
-                .r("CONSUMER", 2030L)
-            .and().insertInto("USERS", 2028L)
-                .d("PASSWORD", "\"evomaster_4051_input\"")
-                .d("USERNAME", "\"evomaster_4052_input\"")
-            .and().insertInto("CONSUMERS", 2027L)
-                .d("BALANCE_CURRENCY", "\"5mC\"")
-                .d("BALANCE_FRACTIONAL_PART", "25")
-                .d("BALANCE_INTEGER_PART", "45")
-                .d("NAME", "\"tsEl7_\"")
-                .d("ID", "19")
-            .and().insertInto("NOTIFICATION", 2026L)
-                .d("CONSUMER", "NULL")
-            .and().insertInto("USERS", 2025L)
-                .d("PASSWORD", "\"\"")
-                .d("USERNAME", "\"UCN\"")
-            .and().insertInto("CONSUMERS", 2024L)
-                .d("BALANCE_CURRENCY", "\"fL4V5yf6Enn1Kok\"")
-                .d("BALANCE_FRACTIONAL_PART", "167")
-                .d("BALANCE_INTEGER_PART", "868")
-                .d("NAME", "\"OVV\"")
-                .r("ID", 2025L)
-            .and().insertInto("NOTIFICATION", 2023L)
-                .d("CONSUMER", "3")
-            .and().insertInto("USERS", 2022L)
-                .d("PASSWORD", "\"evomaster_4053_input\"")
-                .d("USERNAME", "\"yDcKHMb71t\"")
-            .and().insertInto("USERS", 2021L)
-                .d("PASSWORD", "\"dblrih\"")
-                .d("USERNAME", "\"VJB\"")
-            .and().insertInto("USERS", 2020L)
-                .d("PASSWORD", "\"De.\"")
-                .d("USERNAME", "\"xGtOK_M97GWFWD_9\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/evomaster_4054_input/notifications")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_220_deleteAllNotifications
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/evomaster_4054_input/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .contentType("application/json")
-                .body(" \"HCXRrtdE8nIg4t\" ")
-                .post(baseUrlOfSut + "/request/reject/919")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/reject/919"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/517/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/517/employees"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/notifications")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/models/consumer/Consumer_144_getNotifications
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.hibernate.PropertyAccessException"))
-                .body("'message'", containsString("Null value was assigned to a property [class io.github.proxyprint.kitchen.models.notifications.Notification.read] of primitive type setter of io.github.proxyprint.kitchen.models.notifications.Notification.read"))
-                .body("'path'", containsString("/consumer/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/printshops/stats")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/stats"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/consumer/476/printingschemas/0")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/476/printingschemas/0"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/consumer/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_83_addUser
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/consumer/register"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/printshops/0/employees")
+                .put(baseUrlOfSut + "/news/sm3hwxn0sd49VjEP")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/0/employees"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .contentType("application/json")
-                .body(" \"6idp_zEL7G42Kl\" ")
-                .put(baseUrlOfSut + "/printshops/402/pricetable/editstapling")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/402/pricetable/editstapling"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/printshops/0/employees/434")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/0/employees/434"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(400.0))
+                .body("'error'", containsString("Bad Request"))
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"1941-09-13T"))
+                .body("'path'", containsString("/news/sm3hwxn0sd49VjEP"));
     }
     
     
     @Test
-    public void test_71_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("REGISTER_REQUESTS", 2047L)
-                .d("ACCEPTED", "true")
-                .d("MANAGER_EMAIL", "\"evomaster_9546_input\"")
-                .d("MANAGER_NAME", "\"evomaster_9547_input\"")
-                .d("MANAGER_PASSWORD", "\"4HGmgUfxpAD9zno\"")
-                .d("MANAGER_USERNAME", "\"xbQr\"")
-                .d("PSHOP_ADDRESS", "\"GIPg5UCmQw00WV\"")
-                .d("PSHOP_DATE_REQUEST", "\"VtKO3Nkm\"")
-                .d("PSHOP_LATITUDE", "0.5172465152620014")
-                .d("PSHOP_LONGITUDE", "8.988465674311579E307")
-                .d("PSHOP_NIF", "\"pHA5k56G\"")
-                .d("PSHOP_NAME", "\"\"")
-            .and().insertInto("USERS", 2046L)
-                .d("PASSWORD", "\"Cx8zhzrOnCJMsP\"")
-                .d("USERNAME", "\"HoFYFuSHgm\"")
-            .and().insertInto("USERS", 2045L)
-                .d("PASSWORD", "\"evomaster_9548_input\"")
-                .d("USERNAME", "\"79Iia\"")
-            .and().insertInto("USERS", 2044L)
-                .d("PASSWORD", "\"evomaster_11711_input\"")
-                .d("USERNAME", "\"evomaster_9549_input\"")
-            .and().insertInto("USERS", 2043L)
-                .d("PASSWORD", "\"evomaster_11712_input\"")
-                .d("USERNAME", "\"rujkJRdZwCwyIS\"")
-            .and().insertInto("PRINTSHOPS", 2042L)
-                .d("ADDRESS", "\"iq\"")
-                .d("AVG_RATING", "0.5855712002008021")
-                .d("BALANCE_CURRENCY", "\"sc3O\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "25")
-                .d("LATITUDE", "0.38060129752986327")
-                .d("LOGO", "\"evomaster_9551_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"ZKX2C\"")
-                .d("NIF", "\"evomaster_11713_input\"")
-            .and().insertInto("PRINTSHOPS", 2041L)
-                .d("ADDRESS", "\"evomaster_11714_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"9RuWIJ6NeOqgPfgV\"")
-                .d("BALANCE_FRACTIONAL_PART", "64")
-                .d("BALANCE_INTEGER_PART", "16496")
-                .d("LATITUDE", "0.955")
-                .d("LOGO", "\".\"")
-                .d("LONGITUDE", "-1.1713882539853064")
-                .d("NAME", "\"evomaster_11715_input\"")
-                .d("NIF", "\"\"")
-            .and().insertInto("PRINTSHOPS", 2040L)
-                .d("ADDRESS", "\"zw7nxrY\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"X6YC0a\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "829")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_11716_input\"")
-                .d("LONGITUDE", "0.4276690477431132")
-                .d("NAME", "\"evomaster_11717_input\"")
-                .d("NIF", "\"ypNVkPOxF\"")
-            .and().insertInto("PRINTSHOPS", 2039L)
-                .d("ADDRESS", "\"U]5USK\"")
-                .d("AVG_RATING", "0.2110312593005491")
-                .d("BALANCE_CURRENCY", "\"ieyvVWyJUFa\"")
-                .d("BALANCE_FRACTIONAL_PART", "108")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.5112200851631232")
-                .d("LOGO", "\"kYFizolnz\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"\"")
-                .d("NIF", "\"\"")
-            .and().insertInto("PRINTSHOPS", 2038L)
-                .d("ADDRESS", "\"D26lMTsfjDIg0E\"")
-                .d("AVG_RATING", "0.16498280565496282")
-                .d("BALANCE_CURRENCY", "\"eUUqisUerU9552^UnUuU\"")
-                .d("BALANCE_FRACTIONAL_PART", "781")
-                .d("BALANCE_INTEGER_PART", "838")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_9553_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_9554_input\"")
-                .d("NIF", "\"8z\"")
+    public void test_11() throws Exception {
+        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 515L)
+                .d("ID", "969")
+                .d("AUTHOR_ID", "\"HMLb2vw8juge680l\"")
+                .d("COUNTRY", "\"'`lqfl\"")
+                .d("CREATION_TIME", "\"2100-01-16 16:56:18\"")
+                .d("TEXT", "\"@oL^TN5WNp\"")
+            .and().insertInto("NEWS_ENTITY", 514L)
+                .d("ID", "433")
+                .d("AUTHOR_ID", "\"4g9<SxPpFaiDk\"")
+                .d("COUNTRY", "\"5O\"")
+                .d("CREATION_TIME", "\"1916-02-18 06:55:35\"")
+                .d("TEXT", "\"jP/\"")
+            .and().insertInto("NEWS_ENTITY", 513L)
+                .d("ID", "8")
+                .d("AUTHOR_ID", "\"2/\"")
+                .d("COUNTRY", "\"n?bqyjnFKjo;GldQf:\"")
+                .d("CREATION_TIME", "\"2035-12-31 01:33:43\"")
+                .d("TEXT", "\"px3G8BPp\"")
             .dtos();
         controller.execInsertionsIntoDatabase(insertions);
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/4/reviews")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("[]"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/request/accept/0")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/consumer/Yu/notifications")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_234_readAllNotifications
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/Yu/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/api/secured")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/api/secured"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" \"7YDc\" ")
-                .post(baseUrlOfSut + "/request/reject/399")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/reject/399"));
-    }
-    
-    
-    @Test
-    public void test_72_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/paypal/ipn/24")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PayPalController_61_someRequestPaymentConfirmationFromPaylPal
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/paypal/ipn/24"));
-    }
-    
-    
-    @Test
-    public void test_73_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/consumer/info/update")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_134_updateConsumerInfo
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/info/update"));
-    }
-    
-    
-    @Test
-    public void test_74_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/consumer/register")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_83_addUser
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/consumer/register"));
-    }
-    
-    
-    @Test
-    public void test_75_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 3994L)
-                .d("ADDRESS", "\"evomaster_11864_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"p7j9C3aF2rWthGU\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.7804441249197008")
-                .d("LOGO", "\"I7O4u\"")
-                .d("LONGITUDE", "0.43859988362798474")
-                .d("NAME", "\"Ip0qEdiU\"")
-                .d("NIF", "\"evomaster_21773_input\"")
-            .and().insertInto("USERS", 3993L)
-                .d("PASSWORD", "\"evnk]slUUU11775_iUped\"")
-                .d("USERNAME", "\"evomaster_11775_input\"")
-            .and().insertInto("CONSUMERS", 3992L)
-                .d("BALANCE_CURRENCY", "\"FSOLvGiG6Lj0\"")
-                .d("BALANCE_FRACTIONAL_PART", "262144")
-                .d("BALANCE_INTEGER_PART", "857")
-                .d("NAME", "\"gHT8FjlOhB8\"")
-                .d("ID", "19")
-            .and().insertInto("REVIEWS", 3991L)
-                .d("DESCRIPTION", "\"eFMp\"")
-                .d("RATING", "0")
-                .d("PRINTSHOP", "7")
-            .and().insertInto("PRINTSHOPS", 3990L)
-                .d("ADDRESS", "\"evomaster_11776_input\"")
-                .d("AVG_RATING", "0.6")
-                .d("BALANCE_CURRENCY", "\"qKiiP7yaDvSzI/\"")
-                .d("BALANCE_FRACTIONAL_PART", "599")
-                .d("BALANCE_INTEGER_PART", "4194683")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_11865_input\"")
-                .d("LONGITUDE", "0.7557642877009836")
-                .d("NAME", "\"evomaster_11777_input\"")
-                .d("NIF", "\"GNolukwenjnISX8\"")
-            .and().insertInto("USERS", 3989L)
-                .d("PASSWORD", "\"evomaster_11778_input\"")
-                .d("USERNAME", "\"I0dNmAN4xE\"")
-            .and().insertInto("CONSUMERS", 3988L)
-                .d("BALANCE_CURRENCY", "\"y\"")
-                .d("BALANCE_FRACTIONAL_PART", "228")
-                .d("BALANCE_INTEGER_PART", "607")
-                .d("NAME", "\"evomaster_11866_input\"")
-                .r("ID", 3989L)
-            .and().insertInto("REVIEWS", 3987L)
-                .d("DESCRIPTION", "\"FIWvHixmyLfX\"")
-                .d("RATING", "0")
-                .d("PRINTSHOP", "4")
-            .and().insertInto("REGISTER_REQUESTS", 2047L)
-                .d("ACCEPTED", "true")
-                .d("MANAGER_EMAIL", "\"evomaster_11779_input\"")
-                .d("MANAGER_NAME", "\"evomaster_9547_input\"")
-                .d("MANAGER_PASSWORD", "\"4HGmgUfxpAD9zno\"")
-                .d("MANAGER_USERNAME", "\"evomaster_11867_input\"")
-                .d("PSHOP_ADDRESS", "\"GIPg5UCmQw00WV\"")
-                .d("PSHOP_DATE_REQUEST", "\"VtKO3Nkm\"")
-                .d("PSHOP_LATITUDE", "8.988465674311579E307")
-                .d("PSHOP_LONGITUDE", "8.988465674311579E307")
-                .d("PSHOP_NIF", "\"evomaster_11780_input\"")
-                .d("PSHOP_NAME", "\"evomaster_11868_input\"")
-            .and().insertInto("USERS", 2046L)
-                .d("PASSWORD", "\"Cx8zhzrOnCJMsP\"")
-                .d("USERNAME", "\"evomaster_11869_input\"")
-            .and().insertInto("USERS", 2045L)
-                .d("PASSWORD", "\"evomaster_9548_input\"")
-                .d("USERNAME", "\"79Iia\"")
-            .and().insertInto("USERS", 2044L)
-                .d("PASSWORD", "\"evomaster_11870_input\"")
-                .d("USERNAME", "\"evomaster_11871_input\"")
-            .and().insertInto("USERS", 2043L)
-                .d("PASSWORD", "\"evomaster_11712_input\"")
-                .d("USERNAME", "\"evomaster_11781_input\"")
-            .and().insertInto("PRINTSHOPS", 2042L)
-                .d("ADDRESS", "\"iq\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_11872_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_11873_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_11782_input\"")
-                .d("NIF", "\"evomaster_11713_inputK\"")
-            .and().insertInto("PRINTSHOPS", 2041L)
-                .d("ADDRESS", "\"evomaster_11714_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_11783_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "64")
-                .d("BALANCE_INTEGER_PART", "16240")
-                .d("LATITUDE", "0.955")
-                .d("LOGO", "\".\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_11715_input\"")
-                .d("NIF", "\"evomaster_11784_input\"")
-            .and().insertInto("PRINTSHOPS", 2040L)
-                .d("ADDRESS", "\"zw7nxrY\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"X6YC0a\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "829")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_11716_input\"")
-                .d("LONGITUDE", "0.42766904774311")
-                .d("NAME", "\"evomaster_11717_input\"")
-                .d("NIF", "\"ypNVkPOxF\"")
-            .and().insertInto("PRINTSHOPS", 2039L)
-                .d("ADDRESS", "\"evomaster_11785_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"5iWVkWc\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-2097152")
-                .d("LATITUDE", "0.5112200851631232")
-                .d("LOGO", "\"kYFizolnz\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"\"")
-                .d("NIF", "\"m\"")
-            .and().insertInto("PRINTSHOPS", 2038L)
-                .d("ADDRESS", "\"D26lMTsfjDIg0E\"")
-                .d("AVG_RATING", "4.9E-324")
-                .d("BALANCE_CURRENCY", "\"eUUqisUerU9552^UnUuU\"")
-                .d("BALANCE_FRACTIONAL_PART", "2829")
-                .d("BALANCE_INTEGER_PART", "582")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"UUUUZiIUkYK\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_9554_input\"")
-                .d("NIF", "\"evomaster_11874_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/4/reviews")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/printshops/ReviewController_76_getPrintShopReviews
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printshops/4/reviews"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/printshops/69/reviews/-1134842373120742548")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/69/reviews/-1134842373120742548"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/request/accept/0")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/consumer/Yu/notifications")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_234_readAllNotifications
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/Yu/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/api/secured")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/api/secured"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverType\": \"HAEH0\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/169/pricetable/deletecover")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/169/pricetable/deletecover"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" \"evomaster_11787_input\" ")
-                .post(baseUrlOfSut + "/request/reject/0")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/reject/0"));
-    }
-    
-    
-    @Test
-    public void test_76_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 1929L)
-                .d("ADDRESS", "\"wU9UUUSFIVk7U\"")
-                .d("AVG_RATING", "0.2376688366988432")
-                .d("BALANCE_CURRENCY", "\"T831ydG\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-31882")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_3311_input\"")
-                .d("LONGITUDE", "1.4122977634254164")
-                .d("NAME", "\"evomaster_3312_input\"")
-                .d("NIF", "\"o82tGiTBSIUV\"")
-            .and().insertInto("PRINTSHOPS", 1928L)
-                .d("ADDRESS", "\"evomaster_4329_input\"")
-                .d("AVG_RATING", "0.7233241226411491")
-                .d("BALANCE_CURRENCY", "\"evomaster_3313_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.846100613411932")
-                .d("LOGO", "\"evomaster_3314_input\"")
-                .d("LONGITUDE", "0.3794398414562532")
-                .d("NAME", "\"evomaster_3315_input\"")
-                .d("NIF", "\"VfUXJV3jBrx8\"")
-            .and().insertInto("USERS", 1927L)
-                .d("PASSWORD", "\"evomaster_4330_input\"")
-                .d("USERNAME", "\"evomaster_3316_input\"")
-            .and().insertInto("CONSUMERS", 1926L)
-                .d("BALANCE_CURRENCY", "\"evomaster_4331_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-134221459")
-                .d("BALANCE_INTEGER_PART", "865")
-                .d("NAME", "\"evomaster_3318_input9\"")
-                .d("ID", "12")
-            .and().insertInto("USERS", 1925L)
-                .d("PASSWORD", "\"evomaster_3319_input\"")
-                .d("USERNAME", "\"evomqster_3320_input\"")
-            .and().insertInto("CONSUMERS", 1924L)
-                .d("BALANCE_CURRENCY", "\"evomaster_3321_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "188")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"1nvaGWHKO\"")
-                .d("ID", "18")
-            .and().insertInto("PRINT_REQUESTS", 1923L)
-            .and().insertInto("PRINTSHOPS", 1922L)
-                .d("ADDRESS", "\"evomaster_4332_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_3322_inputz\"")
-                .d("BALANCE_FRACTIONAL_PART", "903")
-                .d("BALANCE_INTEGER_PART", "635")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_3323_input\"")
-                .d("LONGITUDE", "1.0")
-                .d("NAME", "\"X1idj1QQ8rS2IK8I\"")
-                .d("NIF", "\"evomaster_4333_input\"")
-            .and().insertInto("PRINTSHOPS", 1921L)
-                .d("ADDRESS", "\"evomaster_4334_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"aFpxEPBXqz\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-67108843")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_4335_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_3325_input\"")
-                .d("NIF", "\"UvoUUster_U3UUUiUUUU\"")
-            .and().insertInto("USERS", 1920L)
-                .d("PASSWORD", "\"evomaster_3327_input\"")
-                .d("USERNAME", "\"UwUsAUADqqS\"")
-            .and().insertInto("CONSUMERS", 1919L)
-                .d("BALANCE_CURRENCY", "\"E2FcNkWOB2Wf\"")
-                .d("BALANCE_FRACTIONAL_PART", "-8388279")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"SuBfB9S6WuzUz_\"")
-                .d("ID", "11")
-            .and().insertInto("USERS", 1918L)
-                .d("PASSWORD", "\"evomaster_3328_input\"")
-                .d("USERNAME", "\"evomaster_3329_input8\"")
-            .and().insertInto("CONSUMERS", 1917L)
-                .d("BALANCE_CURRENCY", "\"BqbxVum\"")
-                .d("BALANCE_FRACTIONAL_PART", "197")
-                .d("BALANCE_INTEGER_PART", "973")
-                .d("NAME", "\"evomaster_3330_input\"")
-                .d("ID", "13")
-            .and().insertInto("PRINT_REQUESTS", 1916L)
-            .and().insertInto("PRINTSHOPS", 1915L)
-                .d("ADDRESS", "\"evomaster_4336_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"fgL4sWwpMYyS\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "771")
-                .d("LATITUDE", "0.5167927054080095")
-                .d("LOGO", "\"NWwB_cBi0Vr\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"Qe\"")
-                .d("NIF", "\"uDyyl\"")
-            .and().insertInto("PRINTSHOPS", 1914L)
-                .d("ADDRESS", "\"evomaster_4337_input\"")
-                .d("AVG_RATING", "0.1804179983738735")
-                .d("BALANCE_CURRENCY", "\"gKUvUUUJJN\"")
-                .d("BALANCE_FRACTIONAL_PART", "135")
-                .d("BALANCE_INTEGER_PART", "1007")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"Go3\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_3332_input\"")
-                .d("NIF", "\"evomaster_4338_input\"")
-            .and().insertInto("USERS", 1913L)
-                .d("PASSWORD", "\"evomUsterUU333_YnUet\"")
-                .d("USERNAME", "\"evomaster_3334_input\"")
-            .and().insertInto("CONSUMERS", 1912L)
-                .d("BALANCE_CURRENCY", "\"evomaster_3335_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "672")
-                .d("BALANCE_INTEGER_PART", "937")
-                .d("NAME", "\"evomaster_4339_input\"")
-                .r("ID", 1913L)
-            .and().insertInto("USERS", 1911L)
-                .d("PASSWORD", "\"evomaster_4340_input\"")
-                .d("USERNAME", "\"evomaster_4341_input\"")
-            .and().insertInto("CONSUMERS", 1910L)
-                .d("BALANCE_CURRENCY", "\"778yU9lrbpD\"")
-                .d("BALANCE_FRACTIONAL_PART", "736")
-                .d("BALANCE_INTEGER_PART", "268436444")
-                .d("NAME", "\"8hGxVHYODWq\"")
-                .r("ID", 1927L)
-            .and().insertInto("PRINT_REQUESTS", 1909L)
-            .and().insertInto("PRINTSHOPS", 1908L)
-                .d("ADDRESS", "\"evomaster_3337_inpu\"")
-                .d("AVG_RATING", "0.6957993588760961")
-                .d("BALANCE_CURRENCY", "\"qtjBWds9jZ\"")
-                .d("BALANCE_FRACTIONAL_PART", "17177")
-                .d("BALANCE_INTEGER_PART", "761")
-                .d("LATITUDE", "0.12287526945237104")
-                .d("LOGO", "\"evomaster_4342_input\"")
-                .d("LONGITUDE", "0.468597488760761")
-                .d("NAME", "\"evomaster_4343_input\"")
-                .d("NIF", "\"LWgYLNdk80hqrl\"")
-            .and().insertInto("PRINTSHOPS", 1907L)
-                .d("ADDRESS", "\"evomaster_3340_input\"")
-                .d("AVG_RATING", "0.43168210168747945")
-                .d("BALANCE_CURRENCY", "\"GtQ00s\"")
-                .d("BALANCE_FRACTIONAL_PART", "131072")
-                .d("BALANCE_INTEGER_PART", "259")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_4344_input\"")
-                .d("LONGITUDE", "0.20875766904305715")
-                .d("NAME", "\"evomaster_4345_input\"")
-                .d("NIF", "\"evomaster_4346_input\"")
-            .and().insertInto("USERS", 1906L)
-                .d("PASSWORD", "\"JRzCFAdCpqfWBvx\"")
-                .d("USERNAME", "\"evomaster_4347_input\"")
-            .and().insertInto("CONSUMERS", 1905L)
-                .d("BALANCE_CURRENCY", "\"480wm09CYuf_r94_\"")
-                .d("BALANCE_FRACTIONAL_PART", "16777596")
-                .d("BALANCE_INTEGER_PART", "203")
-                .d("NAME", "\"upuB\"")
-                .d("ID", "7")
-            .and().insertInto("USERS", 1904L)
-                .d("PASSWORD", "\"evomaster_3343_inhut\"")
-                .d("USERNAME", "\"evomaster_4348_input\"")
-            .and().insertInto("CONSUMERS", 1903L)
-                .d("BALANCE_CURRENCY", "\"evomaster_4349_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "52")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"lmc\"")
-                .r("ID", 1911L)
-            .and().insertInto("PRINT_REQUESTS", 1902L)
-            .and().insertInto("PRINTSHOPS", 1901L)
-                .d("ADDRESS", "\"rLeMajrrWI5k\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"OMv84jE2WaF2WU\"")
-                .d("BALANCE_FRACTIONAL_PART", "-16384")
-                .d("BALANCE_INTEGER_PART", "20")
-                .d("LATITUDE", "0.29549873734671184")
-                .d("LOGO", "\"H\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_4350_input\"")
-                .d("NIF", "\"GtQ00s\"")
-            .and().insertInto("PRINTSHOPS", 1900L)
-                .d("ADDRESS", "\"evomaster_4351_input\"")
-                .d("AVG_RATING", "0.9654922049")
-                .d("BALANCE_CURRENCY", "\"acZygnbeOTWl\"")
-                .d("BALANCE_FRACTIONAL_PART", "672")
-                .d("BALANCE_INTEGER_PART", "583")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_4352_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_3348_input\"")
-                .d("NIF", "\"T5egnNx\"")
-            .and().insertInto("USERS", 1899L)
-                .d("PASSWORD", "\"evomaster_4353_input\"")
-                .d("USERNAME", "\"evomaster_4354_input\"")
-            .and().insertInto("CONSUMERS", 1898L)
-                .d("BALANCE_CURRENCY", "\"evomaster_4355_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-4194293")
-                .d("NAME", "\"URJ\"")
-                .r("ID", 1899L)
-            .and().insertInto("USERS", 1897L)
-                .d("PASSWORD", "\"evomaster_3349_inpu\"")
-                .d("USERNAME", "\"evomaster_4356_input\"")
-            .and().insertInto("CONSUMERS", 1896L)
-                .d("BALANCE_CURRENCY", "\"evomaster_4357_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "619")
-                .d("BALANCE_INTEGER_PART", "976")
-                .d("NAME", "\"evomaster_4358_input\"")
-                .r("ID", 1906L)
-            .and().insertInto("PRINT_REQUESTS", 1895L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/notifications/8192")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/notifications/8192"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/printdocument/1/budget")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintRequestController_337_calcBudgetForPrintRecipe
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/printdocument/1/budget"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/paypal/ipn/0")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PayPalController_61_someRequestPaymentConfirmationFromPaylPal
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/paypal/ipn/0"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"Olá Mundo!\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/admin/useed")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"consumers seeding completed\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/printshops/-261709/employees/-134216766")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/-261709/employees/-134216766"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .contentType("application/json")
-                .body(" \"evomaster_4359_input\" ")
-                .post(baseUrlOfSut + "/request/reject/268435456")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/reject/268435456"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"colors\": \"Tt\", " + 
-                    " \"priceA4SIMPLEX\": \"_Sq\" " + 
+                    " \"authorId\": \"50RmwP7s_6AMY0_P\", " + 
+                    " \"country\": \"Z0hfS3y43\", " + 
+                    " \"id\": \"i9GhKw1uIK5N\", " + 
+                    " \"newsId\": \"8\", " + 
+                    " \"text\": \".\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/0/pricetable/papers")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/0/pricetable/papers"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/admin/seed")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/admin/AdminController_123_seed
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.DataIntegrityViolationException"))
-                .body("'message'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
-                .body("'path'", containsString("/admin/seed"));
-    }
-    
-    
-    @Test
-    public void test_77_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/satisfied")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/ConsumerController_333_getPrintShopSatisfiedRequests
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/satisfied"));
-    }
-    
-    
-    @Test
-    public void test_78_with500() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("REGISTER_REQUESTS", 4022L)
-                .d("ACCEPTED", "false")
-                .d("MANAGER_EMAIL", "\"evomaster_11886_input\"")
-                .d("MANAGER_NAME", "\"x3WMHo\"")
-                .d("MANAGER_PASSWORD", "\"T\"")
-                .d("MANAGER_USERNAME", "\"evomaster_11887_input\"")
-                .d("PSHOP_ADDRESS", "\"ojXssS\"")
-                .d("PSHOP_DATE_REQUEST", "\"bzngtD\"")
-                .d("PSHOP_LATITUDE", "0.7213601538938604")
-                .d("PSHOP_LONGITUDE", "0.005491216416664058")
-                .d("PSHOP_NIF", "\"zP5FDAsSLZ9Qyeg7\"")
-                .d("PSHOP_NAME", "\"?0VxoEwczEcH\"")
-            .and().insertInto("REGISTER_REQUESTS", 4021L)
-                .d("ACCEPTED", "false")
-                .d("MANAGER_EMAIL", "\"evomaster_11888_input\"")
-                .d("MANAGER_NAME", "\"CU8SNpNVqGKo\"")
-                .d("MANAGER_PASSWORD", "\"maDpek4Fr1rb\"")
-                .d("MANAGER_USERNAME", "\"WZX24gI0PRssmzgz\"")
-                .d("PSHOP_ADDRESS", "\"QTXEV1HB\"")
-                .d("PSHOP_DATE_REQUEST", "\"F\"")
-                .d("PSHOP_LATITUDE", "0.8059253609075464")
-                .d("PSHOP_LONGITUDE", "4367216.907707137")
-                .d("PSHOP_NIF", "\"SkTz16g_u0iHb_U\"")
-                .d("PSHOP_NAME", "\"9WlUUvvfK\"")
-            .and().insertInto("REGISTER_REQUESTS", 4020L)
-                .d("ACCEPTED", "false")
-                .d("MANAGER_EMAIL", "\"evomaster_11889_input\"")
-                .d("MANAGER_NAME", "\"evomaster_11890_input\"")
-                .d("MANAGER_PASSWORD", "\"evomaster_11891_input\"")
-                .d("MANAGER_USERNAME", "\"tI9Wyp48Nbv\"")
-                .d("PSHOP_ADDRESS", "\"evomaster_11892_input\"")
-                .d("PSHOP_DATE_REQUEST", "\"3z6Tw\"")
-                .d("PSHOP_LATITUDE", "-2.1982843531632695E7")
-                .d("PSHOP_LONGITUDE", "0.367401300587351")
-                .d("PSHOP_NIF", "\"evomaster_11893_input\"")
-                .d("PSHOP_NAME", "\"B67eI30Im5cS\"")
-            .and().insertInto("REGISTER_REQUESTS", 4019L)
-                .d("ACCEPTED", "true")
-                .d("MANAGER_EMAIL", "\"G1g0ewDhpX6\"")
-                .d("MANAGER_NAME", "\"WSHC\"")
-                .d("MANAGER_PASSWORD", "\"4U\"")
-                .d("MANAGER_USERNAME", "\"K\"")
-                .d("PSHOP_ADDRESS", "\"RH\"")
-                .d("PSHOP_DATE_REQUEST", "\"evomaster_11894_input\"")
-                .d("PSHOP_LATITUDE", "0.43059507421461884")
-                .d("PSHOP_LONGITUDE", "0.6639518096298587")
-                .d("PSHOP_NIF", "\"TSBa\"")
-                .d("PSHOP_NAME", "\"pTa6MtzEK_lOq\"")
-            .and().insertInto("USERS", 1513L)
-                .d("PASSWORD", "\"evomaster_1579_input\"")
-                .d("USERNAME", "\"evomasper_1580_input\"")
-            .and().insertInto("CONSUMERS", 1512L)
-                .d("BALANCE_CURRENCY", "\"evomaster_1581_inputX\"")
-                .d("BALANCE_FRACTIONAL_PART", "535")
-                .d("BALANCE_INTEGER_PART", "26")
-                .d("NAME", "\"L3pdkjUaw_oH\"")
-                .d("ID", "18")
-            .and().insertInto("NOTIFICATION", 1511L)
-            .and().insertInto("PRINTSHOPS", 1510L)
-                .d("ADDRESS", "\"evomaster_1583_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"4U\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_6877_input\"")
-                .d("LONGITUDE", "0.6349494924378264")
-                .d("NAME", "\"74y34w\"")
-                .d("NIF", "\"x9v\"")
-            .and().insertInto("PRINTSHOPS", 1509L)
-                .d("ADDRESS", "\"evomaster_11895_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"HTzgKz1wV\"")
-                .d("BALANCE_FRACTIONAL_PART", "965")
-                .d("BALANCE_INTEGER_PART", "1048320")
-                .d("LATITUDE", "0.46974388308083526")
-                .d("LOGO", "\"evomaster_6878_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"ultiZRTPm\"")
-                .d("NIF", "\"iDfPqLGz6aieA\"")
-            .and().insertInto("PRINTSHOPS", 1508L)
-                .d("ADDRESS", "\"QJ\"")
-                .d("AVG_RATING", "0.8989512440227463")
-                .d("BALANCE_CURRENCY", "\"Q_sU0S_dxL1Sw\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-65165")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_6879_inpu\"")
-                .d("NIF", "\"evomaster_6880_input\"")
-            .and().insertInto("USERS", 1507L)
-                .d("PASSWORD", "\"PYBe1\"")
-                .d("USERNAME", "\"br\"")
-            .and().insertInto("CONSUMERS", 1506L)
-                .d("BALANCE_CURRENCY", "\"evomaster_6881_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-8086")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"PWBWyrdA\"")
-                .d("ID", "14")
-            .and().insertInto("PRINTING_SCHEMAS", 1505L)
-                .d("IS_DELETED", "false")
-                .d("PSCHEMA_NAME", "\"evomaster_1589_input\"")
-                .d("PAPER_SPECS", "\"dmeP3FySr4MKgSJ\"")
-            .and().insertInto("USERS", 1504L)
-                .d("PASSWORD", "\"s7EVc6jSPNYFE\"")
-                .d("USERNAME", "\"s0ha8h\"")
-            .and().insertInto("CONSUMERS", 1503L)
-                .d("BALANCE_CURRENCY", "\"evomaster_11896_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "748")
-                .d("BALANCE_INTEGER_PART", "40")
-                .d("NAME", "\"evomaster_11897_input\"")
-                .d("ID", "11")
-            .and().insertInto("PRINTING_SCHEMAS", 1502L)
-                .d("IS_DELETED", "false")
-                .d("PSCHEMA_NAME", "\"ZYFm\"")
-                .d("PAPER_SPECS", "\"evomaster_6983_input\"")
-            .and().insertInto("USERS", 1501L)
-                .d("PASSWORD", "\"evomaster_1590_input\"")
-                .d("USERNAME", "\"evomaster_11898_input\"")
-            .and().insertInto("CONSUMERS", 1500L)
-                .d("BALANCE_CURRENCY", "\"UgUUXYp_\"")
-                .d("BALANCE_FRACTIONAL_PART", "2933")
-                .d("BALANCE_INTEGER_PART", "867")
-                .d("NAME", "\"evomaster_6884_input\"")
-                .r("ID", 1501L)
-            .and().insertInto("PRINTING_SCHEMAS", 1499L)
-                .d("IS_DELETED", "true")
-                .d("PSCHEMA_NAME", "\"evomaster_1592_input\"")
-                .d("PAPER_SPECS", "\"evomaster_1593_input\"")
-            .and().insertInto("USERS", 1498L)
-                .d("PASSWORD", "\"evomaster_6885_input\"")
-                .d("USERNAME", "\"evomaster_1595_inputo\"")
-            .and().insertInto("CONSUMERS", 1497L)
-                .d("BALANCE_CURRENCY", "\"N0rKgo8\"")
-                .d("BALANCE_FRACTIONAL_PART", "-8379492")
-                .d("BALANCE_INTEGER_PART", "-8387883")
-                .d("NAME", "\"UUOmaUlUrU559U_inPel\"")
-                .d("ID", "9")
-            .and().insertInto("PRINTING_SCHEMAS", 1496L)
-                .d("IS_DELETED", "true")
-                .d("PSCHEMA_NAME", "\"evomaster_6886_input\"")
-                .d("PAPER_SPECS", "\"maAMtQRmYryx\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/paypal/ipn/consumer/-4096")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PayPalController_105_consumerLoadUpConfirmation
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/paypal/ipn/consumer/-4096"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/-261194/printingschemas/0")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintingSchemaController_98_deleteConsumerPrintingSchema
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/-261194/printingschemas/0"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/4/employees")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"employees\":[],\"success\":true}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .put(baseUrlOfSut + "/consumer/subscribe.%5CE.*%7C%5E(%5CQsubscribe.%5CE.*)$%7C%5CQsubscribe/notifications")
+                .put(baseUrlOfSut + "/news/8")
                 .then()
                 .statusCode(400)
                 .assertThat()
                 .contentType("");
         
-        given().accept("*/*")
-                .put(baseUrlOfSut + "/consumer/info/update")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/info/update"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/notifications/-262144")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_82_removeNotification
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.EmptyResultDataAccessException"))
-                .body("'message'", containsString("No class io.github.proxyprint.kitchen.models.notifications.Notification entity with id -262144 exists!"))
-                .body("'path'", containsString("/notifications/-262144"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/printshops/nearest")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news?" + 
+                    "authorId=HMLb2vw8juge680l&" + 
+                    "country=0sLIkrSr")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .head(baseUrlOfSut + "/consumer/subscribe")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .contentType("application/json")
-                .body(" \"X4kUi2ZWXHigCbPl\" ")
-                .post(baseUrlOfSut + "/request/reject/512")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/consumer/0/notify")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/notifications/NotificationsController_59_greeting
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/0/notify"));
-    }
-    
-    
-    @Test
-    public void test_79_with500() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/paypal/ipn/consumer/350")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PayPalController_105_consumerLoadUpConfirmation
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/paypal/ipn/consumer/350"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/950/printingschemas/932")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/controllers/consumer/PrintingSchemaController_98_deleteConsumerPrintingSchema
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("java.lang.NullPointerException"))
-                .body("'message'", containsString("No message available"))
-                .body("'path'", containsString("/consumer/950/printingschemas/932"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/756/employees")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .put(baseUrlOfSut + "/consumer/C0/notifications")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/C0/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/admin/useed")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"consumers seeding completed\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/notifications/318")
-                .then()
-                .statusCode(500) // io/github/proxyprint/kitchen/utils/NotificationManager_82_removeNotification
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(500.0))
-                .body("'error'", containsString("Internal Server Error"))
-                .body("'exception'", containsString("org.springframework.dao.EmptyResultDataAccessException"))
-                .body("'message'", containsString("No class io.github.proxyprint.kitchen.models.notifications.Notification entity with id 318 exists!"))
-                .body("'path'", containsString("/notifications/318"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/printshops/nearest")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .head(baseUrlOfSut + "/consumer/subscribe")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/consumer/831/notify")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_80() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/printshops/requests/567")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_81() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/requests/-3898038039457834233")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_82() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" \"dyqAmHw\" ")
-                .post(baseUrlOfSut + "/printshops/requests/cancel/421")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_83() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/nearest")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_84() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("[{\"id\":1,\"name\":\"Copy Scan\",\"address\":\"Rua Quinta dos Órfãos 16 S. Vitor (Junto à Universidade do Minho), Braga\",\"latitude\":41.557973,\"longitude\":-8.398398,\"nif\":\"123555378\",\"logo\":\"logo_1\",\"avgRating\":0.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}},{\"id\":2,\"name\":\"Flash Vidius - Gomes \\u0026 Santana, Lda.\",\"address\":\"R. Manuel Silva, 20 - R/C. C.P. 4490000, Povoa de Varzim, Porto\",\"latitude\":41.379392,\"longitude\":-8.761458,\"nif\":\"199111333\",\"logo\":\"logo_3\",\"avgRating\":0.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}},{\"id\":3,\"name\":\"CopyGraphe\",\"address\":\"R. Ramalho Ortigão C Com Pescador - lj 12. C.P. 4490678, Povoa de Varzim, Porto\",\"latitude\":41.383314,\"longitude\":-8.761942,\"nif\":\"123098333\",\"logo\":\"logo_4\",\"avgRating\":0.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}},{\"id\":4,\"name\":\"Nelson Costa Santos\",\"address\":\"Tv. Senra, 22 - Póvoa de Varzim. C.P. 4490000, Povoa de Varzim, Porto.\",\"latitude\":41.38207,\"longitude\":-8.763069,\"nif\":\"153655378\",\"logo\":\"logo_5\",\"avgRating\":0.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}},{\"id\":5,\"name\":\"Gráfica Editora Poveira, Lda.\",\"address\":\"R. Manuel Silva, 18. C.P. 4490657, Povoa de Varzim, Porto.\",\"latitude\":41.379605,\"longitude\":-8.761047,\"nif\":\"133555378\",\"logo\":\"logo_6\",\"avgRating\":0.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}},{\"id\":6,\"name\":\"Staples Vila do Conde\",\"address\":\"Avenida General Humberto Delgado 2, Vila do Conde\",\"latitude\":41.370674,\"longitude\":-8.744176,\"nif\":\"133555378\",\"logo\":\"logo_7\",\"avgRating\":0.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}},{\"id\":7,\"name\":\"Staples Vila da Maia\",\"address\":\"Rua Comendador Valentim dos Santos Dinis 570, Maia\",\"latitude\":41.246159,\"longitude\":-8.625225,\"nif\":\"133555378\",\"logo\":\"logo_7\",\"avgRating\":0.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}},{\"id\":8,\"name\":\"Video Norte\",\"address\":\"Rua Nova de Santa Cruz\",\"latitude\":41.5594,\"longitude\":-8.3972,\"nif\":\"123444378\",\"logo\":\"logo_8\",\"avgRating\":4.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}},{\"id\":9,\"name\":\"SmartPrint\",\"address\":\"Rua dos Peões, Braga\",\"latitude\":41.557973,\"longitude\":-8.398398,\"nif\":\"123555378\",\"logo\":\"logo_2\",\"avgRating\":0.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}}]"));
-    }
-    
-    
-    @Test
-    public void test_85() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .options(baseUrlOfSut + "/consumer/subscribe")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_86() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 330L)
-                .d("ADDRESS", "\"evomQstgU_U404_iUpUt\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_21547_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-524092")
-                .d("LATITUDE", "-6.050904913850123E8")
-                .d("LOGO", "\"exomaster_21548_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_2707_input\"")
-                .d("NIF", "\"evomaster_3405_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .put(baseUrlOfSut + "/printshops/1/employees")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_87() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 395L)
-                .d("ADDRESS", "\"0R\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evoqesteU_247_ilput\"")
-                .d("BALANCE_FRACTIONAL_PART", "-383")
-                .d("BALANCE_INTEGER_PART", "1138")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomesrdrc212UimUut\"")
-                .d("LONGITUDE", "0.963")
-                .d("NAME", "\"NR\"")
-                .d("NIF", "\"BHWnlW3eGig8O1GV\"")
-            .and().insertInto("PRINTSHOPS", 394L)
-                .d("ADDRESS", "\"KqeCuyslO\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"rivDPKo5\"")
-                .d("BALANCE_FRACTIONAL_PART", "584")
-                .d("BALANCE_INTEGER_PART", "594")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"UtfUwsgZSpk0Rpk9\"")
-                .d("LONGITUDE", "0.63")
-                .d("NAME", "\"evomaster_226_input\"")
-                .d("NIF", "\"1g_v5arX\"")
-            .and().insertInto("PRINTSHOPS", 393L)
-                .d("ADDRESS", "\"Ji7bVHBh6ubPpK\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"ivpmaster]218_input2\"")
-                .d("BALANCE_FRACTIONAL_PART", "67108828")
-                .d("BALANCE_INTEGER_PART", "-44")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"mUv]sxKA\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"Qh\"")
-                .d("NIF", "\"x1QSCqKjPdXahp\"")
-            .and().insertInto("PRINTSHOPS", 392L)
-                .d("ADDRESS", "\"ezomcstar_250_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"5\"")
-                .d("BALANCE_FRACTIONAL_PART", "-8")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"etomasrer_222_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"euomaUtet_262_jnpu\"")
-                .d("NIF", "\"XYzJN\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/printshops/8/employees")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_88() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 767L)
-                .d("ADDRESS", "\"evomaster_4687_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_4685_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-514")
-                .d("BALANCE_INTEGER_PART", "-67108928")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_19947_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"e0OoZZfnziVBXA\"")
-                .d("NIF", "\"evomaster_4688_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 464.0, " + 
-                    " \"ringType\": \"Argolas de Plástico\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/8/pricetable/deletering")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_89() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"managerEmail\": \"9stM_4\", " + 
-                    " \"managerName\": \"xMIz8gnPI6\", " + 
-                    " \"managerPassword\": \"evomaster_206_input\", " + 
-                    " \"managerUsername\": \"Nr\", " + 
-                    " \"pShopAddress\": \"evomaster_207_input\", " + 
-                    " \"pShopDateRequest\": \"axzmia13pkJcgVC\", " + 
-                    " \"pShopLatitude\": 0.975294806043168, " + 
-                    " \"pShopLongitude\": 0.8850702922315757, " + 
-                    " \"pShopNIF\": \"evomaster_208_input\", " + 
-                    " \"pShopName\": \"l5vsK7T7Wb3yF\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/request/register")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("application/json")
-                .body("'managerName'", containsString("xMIz8gnPI6"))
-                .body("'managerUsername'", containsString("Nr"))
-                .body("'managerEmail'", containsString("9stM_4"))
-                .body("'managerPassword'", containsString("evomaster_206_input"))
-                .body("'pShopAddress'", containsString("evomaster_207_input"))
-                .body("'pShopLatitude'", numberMatches(0.975294806043168))
-                .body("'pShopLongitude'", numberMatches(0.8850702922315757))
-                .body("'pShopNIF'", containsString("evomaster_208_input"))
-                .body("'pShopName'", containsString("l5vsK7T7Wb3yF"))
-                .body("'pShopDateRequest'", containsString("axzmia13pkJcgVC"));
-    }
-    
-    
-    @Test
-    public void test_90() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/requests")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"printrequest\":[],\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_91() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/history")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"historyrequests\":[],\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_92() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/api/secured")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"Se estiveres autenticado, podes ver isto!\"}"));
-    }
-    
-    
-    @Test
-    public void test_93() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"Olá Mundo!\"}"));
-    }
-    
-    
-    @Test
-    public void test_94() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/notifications")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json")
                 .body("size()", equalTo(0))
                 .body("isEmpty()", is(true));
-    }
-    
-    
-    @Test
-    public void test_95() throws Exception {
         
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/satisfied")
+        given().accept("application/json")
+                .get(baseUrlOfSut + "/countries")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"satisfiedrequests\":[],\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_96() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" \"Huh\" ")
-                .post(baseUrlOfSut + "/request/reject/469")
-                .then()
-                .statusCode(403)
-                .assertThat()
                 .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/reject/469"));
+                .body("size()", equalTo(247))
+                .body("", hasItems("Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"));
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/consumer/-1149099299/printingschemas")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/-1149099299/printingschemas"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/2/pricetable")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"printcopy\":{},\"rings\":{},\"stapling\":0.0,\"covers\":{},\"success\":true}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/printshops/-1689873899/pricetable")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/-1689873899/pricetable"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"roles\": { " + 
-                    " \"key_0\": \"3g5\", " + 
-                    " \"key_1\": \"ieF5tjq7ceDcv2S4\" " + 
-                    " }, " + 
-                    " \"rolesSet\": [ " + 
-                    " \"SBZJ\" " + 
-                    " ] " + 
-                    " } ")
-                .post(baseUrlOfSut + "/admin/register")
+                .delete(baseUrlOfSut + "/news/)cprfkkjEK5HiT")
                 .then()
                 .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(400.0))
-                .body("'error'", containsString("Bad Request"))
-                .body("'exception'", containsString("org.springframework.http.converter.HttpMessageNotReadableException"))
-                .body("'message'", containsString("Could not read document: Can not deserialize instance of java.util.HashSet out of START_OBJECT token\n at [Source: java.io.PushbackInputStream"))
-                .body("'path'", containsString("/admin/register"));
+                .contentType("");
         
-        given().accept("*/*")
-                .options(baseUrlOfSut + "/consumer/subscribe")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_97() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/-1307497903/employees")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_98() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 541.0, " + 
-                    " \"price\": \"fn\", " + 
-                    " \"ringType\": \"iKxuL\", " + 
-                    " \"supLim\": 869.0 " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/56/pricetable/rings")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_99() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"supLim\": 686.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/217/pricetable/rings")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_100() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"colors\": \"jVloitlZ\", " + 
-                    " \"priceA3DUPLEX\": \"Y8OXX3Vvvp9JDz\", " + 
-                    " \"priceA4DUPLEX\": \"mYGV2upQX9qsN\", " + 
-                    " \"priceA4SIMPLEX\": \"nQCc6PSpGFHw\", " + 
-                    " \"supLim\": 173.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/36/pricetable/papers")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_101() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" {} ")
-                .post(baseUrlOfSut + "/printshops/146/pricetable/deletepaper")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_102() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverType\": \"tYjaAvVAoxx\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/44/pricetable/deletecover")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_103() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverType\": \"\" " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/0/pricetable/covers")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_104() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 464.0, " + 
-                    " \"ringType\": \"f0pvH\", " + 
-                    " \"supLim\": 761.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/351/pricetable/deletering")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_105() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverType\": \"kLsTmbXxA\", " + 
-                    " \"priceA4\": \"iYOXVI\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/904/pricetable/covers")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_106() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .contentType("application/json")
-                .body(" \"_\" ")
-                .post(baseUrlOfSut + "/request/reject/175")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news/969")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'newsId'", containsString("969"))
+                .body("'authorId'", containsString("HMLb2vw8juge680l"))
+                .body("'text'", containsString(""))
+                .body("'country'", containsString("'`lqfl"))
+                .body("'creationTime'", containsString("2100-01-16T"));
     }
     
     
     @Test
-    public void test_107() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/request/accept/37")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_108() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 537L)
-                .d("ADDRESS", "\"WoxsMO9vmGPIq\"")
-                .d("AVG_RATING", "0.098782")
-                .d("BALANCE_CURRENCY", "\"evomaster_560_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "236")
-                .d("BALANCE_INTEGER_PART", "-64")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_13463_input\"")
-                .d("LONGITUDE", "-44.33176201940754")
-                .d("NAME", "\"jP\"")
-                .d("NIF", "\"tZYLdZG\"")
-            .and().insertInto("PRINTSHOPS", 536L)
-                .d("ADDRESS", "\"evomaster_22528_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"@\"")
-                .d("BALANCE_FRACTIONAL_PART", "297")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "-0.662")
-                .d("LOGO", "\"GwhxqQ36P_Wj\"")
-                .d("LONGITUDE", "0.006115800137912464")
-                .d("NAME", "\"15Y8p\"")
-                .d("NIF", "\"oU\"")
+    public void test_12() throws Exception {
+        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 18L)
+                .d("ID", "-7540")
+                .d("AUTHOR_ID", "\"evomaster_86_input\"")
+                .d("COUNTRY", "\"evomaster_87_input\"")
+                .d("CREATION_TIME", "\"1940-06-19 08:53:31\"")
+                .d("TEXT", "\"evomaster_88_input\"")
             .dtos();
         controller.execInsertionsIntoDatabase(insertions);
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverType\": \"\" " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/4/pricetable/covers")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news/favicon.ico")
                 .then()
-                .statusCode(200)
+                .statusCode(404)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_109() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 3256L)
-                .d("ADDRESS", "\"AG5ErvQN\"")
-                .d("AVG_RATING", "1.9568800132442619")
-                .d("BALANCE_CURRENCY", "\"E7Face702~y\"")
-                .d("BALANCE_FRACTIONAL_PART", "-820809123")
-                .d("BALANCE_INTEGER_PART", "533321")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_6749_input2\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_6748_input\"")
-                .d("NIF", "\"evomaster_6750_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" {} ")
-                .post(baseUrlOfSut + "/printshops/4/pricetable/deletecover")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_110() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 2476L)
-                .d("ADDRESS", "\"evomaster_17030_input\"")
-                .d("AVG_RATING", "0.25501837")
-                .d("BALANCE_CURRENCY", "\"evomaster_4829_inputr\"")
-                .d("BALANCE_FRACTIONAL_PART", "-31220")
-                .d("BALANCE_INTEGER_PART", "-7843")
-                .d("LATITUDE", "0.954205223828")
-                .d("LOGO", "\"evomaster_17031_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_17047_input\"")
-                .d("NIF", "\"3ZGDqufgW6j\"")
-            .and().insertInto("PRINTSHOPS", 2475L)
-                .d("ADDRESS", "\"eUgmUsUur_U82U_UUpulT\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_27906_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "17350")
-                .d("BALANCE_INTEGER_PART", "131107")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_17033_input\"")
-                .d("LONGITUDE", "0.7854438381894809")
-                .d("NAME", "\"evomaster_17023_input\"")
-                .d("NIF", "\"evomaster_17034_input\"")
-            .and().insertInto("USERS", 2474L)
-                .d("PASSWORD", "\"evomaster_27891_input\"")
-                .d("USERNAME", "\"evomaster_17035_input\"")
-            .and().insertInto("CONSUMERS", 2473L)
-                .d("BALANCE_CURRENCY", "\"oe2F\"")
-                .d("BALANCE_FRACTIONAL_PART", "1048899")
-                .d("BALANCE_INTEGER_PART", "-262144")
-                .d("NAME", "\"evomaster_4825_input\"")
-                .d("ID", "13")
-            .and().insertInto("USERS", 2472L)
-                .d("PASSWORD", "\"evomasteq_17036_input\"")
-                .d("USERNAME", "\"evomaster_17048_input\"")
-            .and().insertInto("CONSUMERS", 2471L)
-                .d("BALANCE_CURRENCY", "\"evomaster_17037_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"p\"")
-                .d("ID", "16")
-            .and().insertInto("PRINT_REQUESTS", 2470L)
-            .and().insertInto("PRINTSHOPS", 2469L)
-                .d("ADDRESS", "\"evomaster_17049_input\"")
-                .d("AVG_RATING", "0.26277230277613894")
-                .d("BALANCE_CURRENCY", "\"evomaster_17038_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "445")
-                .d("LATITUDE", "0.856509934432724")
-                .d("LOGO", "\"ewUmastev_U7050_inpyt\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"e\"")
-                .d("NIF", "\"Uq77xRUU\"")
-            .and().insertInto("PRINTSHOPS", 2468L)
-                .d("ADDRESS", "\"BUQDUYUUH\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_17039_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "594")
-                .d("BALANCE_INTEGER_PART", "994")
-                .d("LATITUDE", "0.7502788423687476")
-                .d("LOGO", "\"evomaster_17040_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"\"")
-                .d("NIF", "\"evomaster_4829_ifputr\"")
-            .and().insertInto("USERS", 2467L)
-                .d("PASSWORD", "\"evomaster_17026_input\"")
-                .d("USERNAME", "\"Ydb9lis\"")
-            .and().insertInto("CONSUMERS", 2466L)
-                .d("BALANCE_CURRENCY", "\"EFP7saIx1nBP\"")
-                .d("BALANCE_FRACTIONAL_PART", "-262144")
-                .d("BALANCE_INTEGER_PART", "1896830526")
-                .d("NAME", "\"evomaster_17041_input\"")
-                .d("ID", "12")
-            .and().insertInto("USERS", 2465L)
-                .d("PASSWORD", "\"eUUmasUerU4832_inlu\"")
-                .d("USERNAME", "\"T\"")
-            .and().insertInto("CONSUMERS", 2464L)
-                .d("BALANCE_CURRENCY", "\"N7o1INMIximU6u\"")
-                .d("BALANCE_FRACTIONAL_PART", "114")
-                .d("BALANCE_INTEGER_PART", "33554942")
-                .d("NAME", "\"evomaster_27908_input\"")
-                .r("ID", 2465L)
-            .and().insertInto("PRINT_REQUESTS", 2463L)
-            .and().insertInto("PRINTSHOPS", 2462L)
-                .d("ADDRESS", "\"qar_bcG21LF\"")
-                .d("AVG_RATING", "4.9E-324")
-                .d("BALANCE_CURRENCY", "\"evomaster_17042_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "67109206")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_4834_input\"")
-                .d("LONGITUDE", "278074.79915724066")
-                .d("NAME", "\"evomaster_4835_inpu\"")
-                .d("NIF", "\"evomastcr_17027_input\"")
-            .and().insertInto("PRINTSHOPS", 2461L)
-                .d("ADDRESS", "\"evomaster[15028_inpUt\"")
-                .d("AVG_RATING", "2.232939272923154")
-                .d("BALANCE_CURRENCY", "\"9igxbhvBqpZ\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-128")
-                .d("LATITUDE", "5.40151071308E7")
-                .d("LOGO", "\"q47NOuqFhL5\"")
-                .d("LONGITUDE", "0.39420456465")
-                .d("NAME", "\"b7ptIqTwpsAVF\"")
-                .d("NIF", "\"TwO1DXMFClcm\"")
-            .and().insertInto("USERS", 2460L)
-                .d("PASSWORD", "\"evomaster_17051_input\"")
-                .d("USERNAME", "\"evomastep_17029_input\"")
-            .and().insertInto("CONSUMERS", 2459L)
-                .d("BALANCE_CURRENCY", "\"evUmasdUr_4837_inpU\"")
-                .d("BALANCE_FRACTIONAL_PART", "520")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"AlSDKYM4Hg\"")
-                .d("ID", "17")
-            .and().insertInto("USERS", 2458L)
-                .d("PASSWORD", "\"UXPrgr4zZiUo\"")
-                .d("USERNAME", "\"evomaster_17052_input\"")
-            .and().insertInto("CONSUMERS", 2457L)
-                .d("BALANCE_CURRENCY", "\"Hb_zrzjAEhUx0kpg\"")
-                .d("BALANCE_FRACTIONAL_PART", "360")
-                .d("BALANCE_INTEGER_PART", "-64")
-                .d("NAME", "\"evomaster_17053_input\"")
-                .d("ID", "19")
-            .and().insertInto("PRINT_REQUESTS", 2456L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/info")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"success\":true}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/requests/cancel/4")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/request/accept/1577285674")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/accept/1577285674"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/printshops/stats")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/stats"));
-    }
-    
-    
-    @Test
-    public void test_111() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" \"B_Ph\" ")
-                .put(baseUrlOfSut + "/printshops/950/pricetable/editstapling")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_112() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .delete(baseUrlOfSut + "/printshops/468/employees/149")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_113() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/522/pricetable")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_114() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printdocument/677")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_115() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(404.0))
+                .body("'error'", containsString("Not Found"))
+                .body("'message'", containsString("No message available"))
+                .body("'path'", containsString("/news/favicon.ico"));
+        
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/json;charset=UTF-8")
                 .body(" { " + 
-                    " \"colors\": \"ZHaV2q3fZWoswq\", " + 
-                    " \"priceA3SIMPLEX\": \"0b3qxGsv32\", " + 
-                    " \"priceA4DUPLEX\": \"Ghfu\" " + 
+                    " \"country\": \"WAD1sMvxe\", " + 
+                    " \"creationTime\": \"1938-13-18T07:42:12\", " + 
+                    " \"id\": \"wcJ4RF\", " + 
+                    " \"newsId\": \"evomaster_89_input\", " + 
+                    " \"text\": \"ZxQTrjvmD\" " + 
                     " } ")
-                .put(baseUrlOfSut + "/printshops/128/pricetable/papers")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(200)
+                .statusCode(400)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_116() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 2928L)
-                .d("PASSWORD", "\"evomaster_5489_input\"")
-                .d("USERNAME", "\"Vq\"")
-            .and().insertInto("CONSUMERS", 2927L)
-                .d("BALANCE_CURRENCY", "\"QxBzz7Sr\"")
-                .d("BALANCE_FRACTIONAL_PART", "477")
-                .d("BALANCE_INTEGER_PART", "230")
-                .d("NAME", "\"7CWXJm3B6WCw0go\"")
-                .d("ID", "9")
-            .and().insertInto("PRINTING_SCHEMAS", 2926L)
-                .d("IS_DELETED", "true")
-                .d("PSCHEMA_NAME", "\"evomaster_5490_input\"")
-                .d("PAPER_SPECS", "\"NLud1hdsyh45\"")
-            .and().insertInto("USERS", 2925L)
-                .d("PASSWORD", "\"0ltnAm6vMAOU7NWl\"")
-                .d("USERNAME", "\"4eMfL23MeULl\"")
-            .and().insertInto("CONSUMERS", 2924L)
-                .d("BALANCE_CURRENCY", "\"rw3Ai2g\"")
-                .d("BALANCE_FRACTIONAL_PART", "644")
-                .d("BALANCE_INTEGER_PART", "572")
-                .d("NAME", "\"evomaster_5491_input\"")
-                .r("ID", 2925L)
-            .and().insertInto("PRINTING_SCHEMAS", 2923L)
-                .d("IS_DELETED", "false")
-                .d("PSCHEMA_NAME", "\"f\"")
-                .d("PAPER_SPECS", "\"evomaster_5492_input\"")
-            .and().insertInto("USERS", 2922L)
-                .d("PASSWORD", "\"AitmtqLadlbfQR\"")
-                .d("USERNAME", "\"evomaster_5493_input\"")
-            .and().insertInto("CONSUMERS", 2921L)
-                .d("BALANCE_CURRENCY", "\"K4BQS2\"")
-                .d("BALANCE_FRACTIONAL_PART", "-1110")
-                .d("BALANCE_INTEGER_PART", "583")
-                .d("NAME", "\"U\"")
-                .r("ID", 2922L)
-            .and().insertInto("PRINTING_SCHEMAS", 2920L)
-                .d("IS_DELETED", "true")
-                .d("PSCHEMA_NAME", "\"56nZ4qO3EK\"")
-                .d("PAPER_SPECS", "\"evomaster_5494_input\"")
-            .and().insertInto("USERS", 2919L)
-                .d("PASSWORD", "\"0\"")
-                .d("USERNAME", "\"WYcHOVeIofM9KBfc\"")
-            .and().insertInto("CONSUMERS", 2918L)
-                .d("BALANCE_CURRENCY", "\"8J2vtlVL1F0WQq3\"")
-                .d("BALANCE_FRACTIONAL_PART", "548")
-                .d("BALANCE_INTEGER_PART", "371")
-                .d("NAME", "\"evomaster_5495_input\"")
-                .d("ID", "17")
-            .and().insertInto("PRINTING_SCHEMAS", 2917L)
-                .d("IS_DELETED", "false")
-                .d("PSCHEMA_NAME", "\"9\"")
-                .d("PAPER_SPECS", "\"W4rlkrWcQwOg\"")
-            .and().insertInto("USERS", 2916L)
-                .d("PASSWORD", "\"evomaster_5496_input\"")
-                .d("USERNAME", "\"evomaster_5497_input\"")
-            .and().insertInto("CONSUMERS", 2915L)
-                .d("BALANCE_CURRENCY", "\"38Fn\"")
-                .d("BALANCE_FRACTIONAL_PART", "867")
-                .d("BALANCE_INTEGER_PART", "8388981")
-                .d("NAME", "\"H\"")
-                .r("ID", 2916L)
-            .and().insertInto("PRINTING_SCHEMAS", 2914L)
-                .d("IS_DELETED", "true")
-                .d("PSCHEMA_NAME", "\"u77zyGl\"")
-                .d("PAPER_SPECS", "\"evomaster_5499_input\"")
-            .and().insertInto("USERS", 2913L)
-                .d("PASSWORD", "\"lp7QRWlbLeRv\"")
-                .d("USERNAME", "\"RZ2IrUItU]H\"")
-            .and().insertInto("CONSUMERS", 2912L)
-                .d("BALANCE_CURRENCY", "\"zSjdDdRxE\"")
-                .d("BALANCE_FRACTIONAL_PART", "-134216892")
-                .d("BALANCE_INTEGER_PART", "572")
-                .d("NAME", "\"AuL4bVGYPlk\"")
-                .r("ID", 2913L)
-            .and().insertInto("USERS", 2911L)
-                .d("PASSWORD", "\"evomaster_5500_input\"")
-                .d("USERNAME", "\"GRc\"")
-            .and().insertInto("CONSUMERS", 2910L)
-                .d("BALANCE_CURRENCY", "\"evomaster_5501_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "147")
-                .d("BALANCE_INTEGER_PART", "66")
-                .d("NAME", "\"LTBMaNRY3LnML\"")
-                .d("ID", "1")
-            .and().insertInto("USERS", 2909L)
-                .d("PASSWORD", "\"_bxre\"")
-                .d("USERNAME", "\"eMm\"")
-            .and().insertInto("CONSUMERS", 2908L)
-                .d("BALANCE_CURRENCY", "\"evomaster_5503_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "173")
-                .d("BALANCE_INTEGER_PART", "279")
-                .d("NAME", "\"Mt8qJlkvYYM\"")
-                .r("ID", 2909L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(400.0))
+                .body("'error'", containsString("Bad Request"))
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"1938-13-18T"))
+                .body("'path'", containsString("/news"));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverSpecs\": \"\", " + 
-                    " \"id\": 223.0, " + 
-                    " \"name\": \"EQXoa5D\", " + 
-                    " \"paperSpecs\": \"evomaster_5504_input\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/consumer/2/printingschemas")
+        given().accept("application/json")
+                .get(baseUrlOfSut + "/countries")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true,\"id\":11}"));
-    }
-    
-    
-    @Test
-    public void test_117() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("REGISTER_REQUESTS", 420L)
-                .d("ACCEPTED", "true")
-                .d("MANAGER_EMAIL", "\"p0PI6hTiOnvA\"")
-                .d("MANAGER_NAME", "\"717GvHTc\"")
-                .d("MANAGER_PASSWORD", "\"UUdWUUUnJl^Qp\"")
-                .d("MANAGER_USERNAME", "\"evomaster_2257_inpvt\"")
-                .d("PSHOP_ADDRESS", "\"evolaster_2246_input\"")
-                .d("PSHOP_DATE_REQUEST", "\"t7rWU\"")
-                .d("PSHOP_LATITUDE", "-0.6555049631762386")
-                .d("PSHOP_LONGITUDE", "8.988465674311579E307")
-                .d("PSHOP_NIF", "\"evooaster_28362_hUput\"")
-                .d("PSHOP_NAME", "\"QvwURUSDXVA\"")
-            .and().insertInto("REGISTER_REQUESTS", 419L)
-                .d("ACCEPTED", "true")
-                .d("MANAGER_EMAIL", "\"TDbUUH1k9\"")
-                .d("MANAGER_NAME", "\"evomaster_225:_inpux\"")
-                .d("MANAGER_PASSWORD", "\"IjPkZKg6qX1fomQOW\"")
-                .d("MANAGER_USERNAME", "\"FMMsN_L=D2hm437\"")
-                .d("PSHOP_ADDRESS", "\"uO4NvKtLLzXr\"")
-                .d("PSHOP_DATE_REQUEST", "\"7^rkj11ONRY\"")
-                .d("PSHOP_LATITUDE", "8.988465674311579E307")
-                .d("PSHOP_LONGITUDE", "8.988465674311579E307")
-                .d("PSHOP_NIF", "\"evomaster_274_input\"")
-                .d("PSHOP_NAME", "\"evomaster_2248_inpu\"")
-            .and().insertInto("REGISTER_REQUESTS", 418L)
-                .d("ACCEPTED", "false")
-                .d("MANAGER_EMAIL", "\"4vum1i4hG32g6c\"")
-                .d("MANAGER_NAME", "\"evomaster_275_input\"")
-                .d("MANAGER_PASSWORD", "\"evomaster_2263_inUvt\"")
-                .d("MANAGER_USERNAME", "\"jrTn\"")
-                .d("PSHOP_ADDRESS", "\"evUUastUrUU24UaiUptt\"")
-                .d("PSHOP_DATE_REQUEST", "\"evomaster_6262_input\"")
-                .d("PSHOP_LATITUDE", "8.988465674311579E307")
-                .d("PSHOP_LONGITUDE", "0.20272")
-                .d("PSHOP_NIF", "\"evomasver_277_inputket\"")
-                .d("PSHOP_NAME", "\"2F6kcK9Mt0AlY0xP\"")
-            .and().insertInto("REGISTER_REQUESTS", 417L)
-                .d("ACCEPTED", "false")
-                .d("MANAGER_EMAIL", "\"evomaqter_279_jnput\"")
-                .d("MANAGER_NAME", "\"evomaster_2250_knput\"")
-                .d("MANAGER_PASSWORD", "\"eUUmaUtdz_2U1U^iUpuH\"")
-                .d("MANAGER_USERNAME", "\"hnZBSZSC\"")
-                .d("PSHOP_ADDRESS", "\"evolawtir_2264_input\"")
-                .d("PSHOP_DATE_REQUEST", "\"2F6kcK9Mt0AlY0xP\"")
-                .d("PSHOP_LATITUDE", "8.988465674311579E307")
-                .d("PSHOP_LONGITUDE", "0.4175369852")
-                .d("PSHOP_NIF", "\"yy5HB\"")
-                .d("PSHOP_NAME", "\"evomaster_2265_iUpu\"")
-            .and().insertInto("REGISTER_REQUESTS", 416L)
-                .d("ACCEPTED", "true")
-                .d("MANAGER_EMAIL", "\"4vum1i4hG32g6c\"")
-                .d("MANAGER_NAME", "\"evomasver_2267]input\"")
-                .d("MANAGER_PASSWORD", "\"Rz6y1AsUEmmWsPZl\"")
-                .d("MANAGER_USERNAME", "\"evsmaster_2255_input\"")
-                .d("PSHOP_ADDRESS", "\"VkPUK\"")
-                .d("PSHOP_DATE_REQUEST", "\"CDSWhLAsIu6SYge\"")
-                .d("PSHOP_LATITUDE", "0.9012209886393272")
-                .d("PSHOP_LONGITUDE", "8.988465674311579E307")
-                .d("PSHOP_NIF", "\"evomaster_2268_input\"")
-                .d("PSHOP_NAME", "\"y1wGkNxxQCWjcj\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
                 .contentType("application/json")
-                .body(" \"U\" ")
-                .post(baseUrlOfSut + "/request/reject/2")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_118() throws Exception {
+                .body("size()", equalTo(247))
+                .body("", hasItems("Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"));
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/login")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_119() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/requests/pending")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("application/json")
-                .body("size()", equalTo(4))
-                .body("'id'", hasItem(numberMatches(1.0)))
-                .body("'managerName'", hasItem(containsString("Jorge Caldas")))
-                .body("'managerUsername'", hasItem(containsString("jcaldas")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua das Cruzes n31")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Printer Style")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()))
-                .body("'id'", hasItem(numberMatches(2.0)))
-                .body("'managerName'", hasItem(containsString("Martim da Silva")))
-                .body("'managerUsername'", hasItem(containsString("msilva")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua das Cruzes n32")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Print More")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()))
-                .body("'id'", hasItem(numberMatches(3.0)))
-                .body("'managerName'", hasItem(containsString("Carlos Pinto")))
-                .body("'managerUsername'", hasItem(containsString("cpin")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua n33")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Papelaria Pinto")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()))
-                .body("'id'", hasItem(numberMatches(4.0)))
-                .body("'managerName'", hasItem(containsString("Ana Carolina Matos")))
-                .body("'managerUsername'", hasItem(containsString("acmatos")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua das Cerejas n33")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Impressões Matos")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()));
-    }
-    
-    
-    @Test
-    public void test_120() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/requests/cancel/6967210157591758776")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_121() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 1482L)
-                .d("ADDRESS", "\"evomaster_1739_input\"")
-                .d("AVG_RATING", "0.9234733454826274")
-                .d("BALANCE_CURRENCY", "\"evomaster_1691_inputj\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "536871590")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"scwuiScRVb_pSDtq\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"Mu6YZzNgbTNx6E\"")
-                .d("NIF", "\"WbER091cFggR7JQ\"")
-            .and().insertInto("PRINTSHOPS", 1481L)
-                .d("ADDRESS", "\"evomaster_1741_inpup\"")
-                .d("AVG_RATING", "4.9E-324")
-                .d("BALANCE_CURRENCY", "\"evomaster_14630_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-8388608")
-                .d("BALANCE_INTEGER_PART", "-268435456")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evoqaster_1694_input\"")
-                .d("LONGITUDE", "4.625164450600518E8")
-                .d("NAME", "\"evomaster_1701_input\"")
-                .d("NIF", "\"JTtttcatGfe\"")
-            .and().insertInto("PRINTSHOPS", 1480L)
-                .d("ADDRESS", "\"evoqaster_1694_inpu\"")
-                .d("AVG_RATING", "0.239")
-                .d("BALANCE_CURRENCY", "\"evomUUTerUU6UUUipput\"")
-                .d("BALANCE_FRACTIONAL_PART", "3839")
-                .d("BALANCE_INTEGER_PART", "-134217728")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_1502_inpu\"")
-                .d("LONGITUDE", "-7.2419546181735726")
-                .d("NAME", "\"evomaster_1743_input\"")
-                .d("NIF", "\"Uvo]asteUUU10UUiUpUt\"")
-            .and().insertInto("PRINTSHOPS", 1479L)
-                .d("ADDRESS", "\"LgOSrR\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_1703_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "33401")
-                .d("BALANCE_INTEGER_PART", "-130323")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_1505_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_1704_input\"")
-                .d("NIF", "\"Y\"")
-            .and().insertInto("PRINTSHOPS", 1478L)
-                .d("ADDRESS", "\"evomaster_1744_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_1745_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.0")
-                .d("LOGO", "\"evomaster_1705_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_14631_input\"")
-                .d("NIF", "\"K0K2RV9lFw\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/0/employees")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/requests/pending")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("application/json")
-                .body("size()", equalTo(4))
-                .body("'id'", hasItem(numberMatches(1.0)))
-                .body("'managerName'", hasItem(containsString("Jorge Caldas")))
-                .body("'managerUsername'", hasItem(containsString("jcaldas")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua das Cruzes n31")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Printer Style")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()))
-                .body("'id'", hasItem(numberMatches(2.0)))
-                .body("'managerName'", hasItem(containsString("Martim da Silva")))
-                .body("'managerUsername'", hasItem(containsString("msilva")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua das Cruzes n32")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Print More")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()))
-                .body("'id'", hasItem(numberMatches(3.0)))
-                .body("'managerName'", hasItem(containsString("Carlos Pinto")))
-                .body("'managerUsername'", hasItem(containsString("cpin")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua n33")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Papelaria Pinto")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()))
-                .body("'id'", hasItem(numberMatches(4.0)))
-                .body("'managerName'", hasItem(containsString("Ana Carolina Matos")))
-                .body("'managerUsername'", hasItem(containsString("acmatos")))
-                .body("'managerEmail'", hasItem(containsString("proxyprint.pt.printshop")))
-                .body("'managerPassword'", hasItem(containsString("1234")))
-                .body("'pShopAddress'", hasItem(containsString("Rua das Cerejas n33")))
-                .body("'pShopLatitude'", hasItem(numberMatches(43.221)))
-                .body("'pShopLongitude'", hasItem(numberMatches(41.121)))
-                .body("'pShopNIF'", hasItem(containsString("124555321")))
-                .body("'pShopName'", hasItem(containsString("Impressões Matos")))
-                .body("'pShopDateRequest'", hasItem(containsString("09/09/2020 ")))
-                .body("'pShopDateRequestAccepted'", hasItem(nullValue()));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printdocument/14")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true,\"documents\":[]}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/login")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_122() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshop")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"printshop\":{\"id\":8,\"name\":\"Video Norte\",\"address\":\"Rua Nova de Santa Cruz\",\"latitude\":41.5594,\"longitude\":-8.3972,\"nif\":\"123444378\",\"logo\":\"logo_8\",\"avgRating\":4.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}},\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_123() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/balance")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_124() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .put(baseUrlOfSut + "/printshops/1618694072/employees")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_125() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/printshops/522/employees")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-    }
-    
-    
-    @Test
-    public void test_126() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/info")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_127() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 541L)
-                .d("ADDRESS", "\"evomaster_8291_input\"")
-                .d("AVG_RATING", "0.83517356")
-                .d("BALANCE_CURRENCY", "\"Atomqyd\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "272")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"SJRlcu\"")
-                .d("LONGITUDE", "0.4113")
-                .d("NAME", "\"evomaster_564_inpu\"")
-                .d("NIF", "\"evomaster_3172_input\"")
-            .and().insertInto("PRINTSHOPS", 540L)
-                .d("ADDRESS", "\"evomaster_3173_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"YnIrYuy\"")
-                .d("BALANCE_FRACTIONAL_PART", "131366")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"UvoUUster_UU6Uirpyt\"")
-                .d("LONGITUDE", "0.5226176002968071")
-                .d("NAME", "\"fgfgMdkN\"")
-                .d("NIF", "\"evomaster_8292_input\"")
-            .and().insertInto("PRINTSHOPS", 539L)
-                .d("ADDRESS", "\"evomaster_567_input\"")
-                .d("AVG_RATING", "0.8697913895345197")
-                .d("BALANCE_CURRENCY", "\"M7cH2NqXn\"")
-                .d("BALANCE_FRACTIONAL_PART", "15729271")
-                .d("BALANCE_INTEGER_PART", "332")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_8293_input\"")
-                .d("LONGITUDE", "3.8563194096503955E8")
-                .d("NAME", "\"evomaster_8294_input\"")
-                .d("NIF", "\"evomaster_8295_input\"")
-            .and().insertInto("PRINTSHOPS", 538L)
-                .d("ADDRESS", "\"evomaster_3174_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_8296_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-1062")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"GldyiSroS3VyuBz\"")
-                .d("LONGITUDE", "0.0974")
-                .d("NAME", "\"evomasler_3U75_mUUUr\"")
-                .d("NIF", "\"7rR\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" {} ")
-                .post(baseUrlOfSut + "/printshops/4/pricetable/covers")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_128() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 971L)
-                .d("PASSWORD", "\"KdcUJi6U\"")
-                .d("USERNAME", "\"evomaster_949_inpu\"")
-            .and().insertInto("CONSUMERS", 970L)
-                .d("BALANCE_CURRENCY", "\"eUooasUer_U5519WUnpUt\"")
-                .d("BALANCE_FRACTIONAL_PART", "32768")
-                .d("BALANCE_INTEGER_PART", "2048")
-                .d("NAME", "\"evUmUstUU_573U_iUput\"")
-                .d("ID", "19")
-            .and().insertInto("PRINTING_SCHEMAS", 969L)
-                .d("IS_DELETED", "false")
-                .d("PSCHEMA_NAME", "\"evomaster_15540_input\"")
-                .d("PAPER_SPECS", "\"eUom]tter_5U33_input\"")
-            .and().insertInto("USERS", 968L)
-                .d("PASSWORD", "\"evomaster_15520_input\"")
-                .d("USERNAME", "\"\"")
-            .and().insertInto("USERS", 967L)
-                .d("PASSWORD", "\"UUUmasUar_U51OinUuV\"")
-                .d("USERNAME", "\"u4sZLgI\"")
-            .and().insertInto("USERS", 966L)
-                .d("PASSWORD", "\"evomaster_15521_input\"")
-                .d("USERNAME", "\"eUUmUUUUrUU53UiUUU\"")
-            .and().insertInto("USERS", 965L)
-                .d("PASSWORD", "\"YFXY0GZqfcyx\"")
-                .d("USERNAME", "\"evomaster_6988_inpu\"")
-            .and().insertInto("PRINTSHOPS", 964L)
-                .d("ADDRESS", "\"evomaster_5735_input\"")
-                .d("AVG_RATING", "0.63")
-                .d("BALANCE_CURRENCY", "\"evomaster_5736_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "64")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_3661_inp\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"WVQbNGOt2hwZ\"")
-                .d("NIF", "\"evomaster_15546_input\"")
-            .and().insertInto("PRINTSHOPS", 963L)
-                .d("ADDRESS", "\"evomaUtfrUUU8UUipxut\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_15547_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "1048823")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"U\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_15523_input\"")
-                .d("NIF", "\"uR8r8r0G3PJ\"")
-            .and().insertInto("PRINTSHOPS", 962L)
-                .d("ADDRESS", "\"srpZhpv4Nx0x7\"")
-                .d("AVG_RATING", "0.1")
-                .d("BALANCE_CURRENCY", "\"v8kKvf2A0pJ0E\"")
-                .d("BALANCE_FRACTIONAL_PART", "2097205")
-                .d("BALANCE_INTEGER_PART", "365")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_6992_inputO\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_5739_input\"")
-                .d("NIF", "\"19UufMUR\"")
-            .and().insertInto("PRINTSHOPS", 961L)
-                .d("ADDRESS", "\"evomaster_15525_input\"")
-                .d("AVG_RATING", "13440.36313921488")
-                .d("BALANCE_CURRENCY", "\"pkx\"")
-                .d("BALANCE_FRACTIONAL_PART", "602883315")
-                .d("BALANCE_INTEGER_PART", "-16384")
-                .d("LATITUDE", "0.7971618114401777")
-                .d("LOGO", "\"UUWWWj\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"eUUUUUteU_U668UinpUU\"")
-                .d("NIF", "\"evomaster_6994_input\"")
-            .and().insertInto("PRINTSHOPS", 960L)
-                .d("ADDRESS", "\"J7xmw1Ro_oG9\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_15526_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_15548_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_3669_input\"")
-                .d("NIF", "\"mbViLfGDfxGbw5\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .delete(baseUrlOfSut + "/notifications/-64")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/notifications/-64"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"key_0\": \"UUo]actUU_69U5_inpU\" " + 
+                    " \"country\": \"jSUcEHoptUnd\", " + 
+                    " \"id\": \"EIR19uI4JQlp\", " + 
+                    " \"newsId\": \"AZZq0MZFNspO\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/-33521660/reviews")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/-33521660/reviews"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/stats")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/stats"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/consumer/Vs2E4uyf3bvnxz/notifications")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/Vs2E4uyf3bvnxz/notifications"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/1")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"id\":1,\"name\":\"Copy Scan\",\"address\":\"Rua Quinta dos Órfãos 16 S. Vitor (Junto à Universidade do Minho), Braga\",\"latitude\":41.557973,\"longitude\":-8.398398,\"nif\":\"123555378\",\"logo\":\"logo_1\",\"avgRating\":0.0,\"balance\":{\"currency\":\"EUR\",\"integerPart\":0,\"fractionalPart\":0}}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .put(baseUrlOfSut + "/consumer/info/update")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/info/update"));
-        
-        given().accept("*/*")
-                .put(baseUrlOfSut + "/consumer/subscribe")
+                .put(baseUrlOfSut + "/news/HxJMRJk68NExnX")
                 .then()
                 .statusCode(404)
                 .assertThat()
@@ -9033,8 +864,7 @@
                 .body(isEmptyOrNullString());
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/consumer/subscribe")
+                .delete(baseUrlOfSut + "/news/785")
                 .then()
                 .statusCode(404)
                 .assertThat()
@@ -9042,1723 +872,247 @@
                 .body(isEmptyOrNullString());
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/consumer/389/printingschemas/4")
-                .then()
-                .statusCode(200)
-                .assertThat()
                 .contentType("text/plain")
-                .body(containsString("{\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_129() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .post(baseUrlOfSut + "/admin/useed")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"consumers seeding completed\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/request/accept/642")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/accept/642"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/686/printingschemas")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true,\"pschemas\":[]}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/73/pricetable")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .put(baseUrlOfSut + "/consumer/subscribe")
+                .body("gNCOVNHgP")
+                .put(baseUrlOfSut + "/news/4915/text")
                 .then()
                 .statusCode(404)
                 .assertThat()
                 .contentType("")
                 .body(isEmptyOrNullString());
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/api/secured")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"Se estiveres autenticado, podes ver isto!\"}"));
-    }
-    
-    
-    @Test
-    public void test_130() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("USERS", 2110L)
-                .d("PASSWORD", "\"evomaster_3807_input\"")
-                .d("USERNAME", "\"gqNWuhAxfTM805\"")
-            .and().insertInto("CONSUMERS", 2109L)
-                .d("BALANCE_CURRENCY", "\"EYgdpt7xACukw\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "1049269")
-                .d("NAME", "\"evomaster_3808_input\"")
-                .r("ID", 2110L)
-            .and().insertInto("PRINTING_SCHEMAS", 2108L)
-                .d("IS_DELETED", "true")
-                .d("PSCHEMA_NAME", "\"95IdmzNX\"")
-                .d("PAPER_SPECS", "\"evomaster_3809_input\"")
-            .and().insertInto("USERS", 2107L)
-                .d("PASSWORD", "\"evomaster_3818_inputb\"")
-                .d("USERNAME", "\"B\"")
-            .and().insertInto("CONSUMERS", 2106L)
-                .d("BALANCE_CURRENCY", "\"evUoaster]U81U_iUUUU\"")
-                .d("BALANCE_FRACTIONAL_PART", "853")
-                .d("BALANCE_INTEGER_PART", "-7718")
-                .d("NAME", "\"evomaster_3820_input\"")
-                .d("ID", "15")
-            .and().insertInto("PRINTING_SCHEMAS", 2105L)
-                .d("IS_DELETED", "false")
-                .d("PSCHEMA_NAME", "\"evomaster_9744_input\"")
-                .d("PAPER_SPECS", "\"evomaster_9742_input\"")
-            .and().insertInto("USERS", 2104L)
-                .d("PASSWORD", "\"evomaster_9745_input\"")
-                .d("USERNAME", "\"HPICI5Yckq9W\"")
-            .and().insertInto("CONSUMERS", 2103L)
-                .d("BALANCE_CURRENCY", "\"evomaster_9746_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_3811_inpu\"")
-                .r("ID", 2104L)
-            .and().insertInto("PRINTING_SCHEMAS", 2102L)
-                .d("IS_DELETED", "true")
-                .d("PSCHEMA_NAME", "\"evomaster_9743_input\"")
-                .d("PAPER_SPECS", "\"nr\"")
-            .and().insertInto("USERS", 2101L)
-                .d("PASSWORD", "\"QCja\"")
-                .d("USERNAME", "\"u\"")
-            .and().insertInto("CONSUMERS", 2100L)
-                .d("BALANCE_CURRENCY", "\"evomaster_3821_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_3814_input\"")
-                .d("ID", "10")
-            .and().insertInto("PRINTING_SCHEMAS", 2099L)
-                .d("IS_DELETED", "false")
-                .d("PSCHEMA_NAME", "\"evomaster_3822_input\"")
-                .d("PAPER_SPECS", "\"4xGEJ9NCz91jSF\"")
-            .and().insertInto("USERS", 2098L)
-                .d("PASSWORD", "\"evomaster_3815_input\"")
-                .d("USERNAME", "\"XcZu1GRcmR\"")
-            .and().insertInto("CONSUMERS", 2097L)
-                .d("BALANCE_CURRENCY", "\"evomaster_3824_inputg\"")
-                .d("BALANCE_FRACTIONAL_PART", "65")
-                .d("BALANCE_INTEGER_PART", "2048")
-                .d("NAME", "\"9s0DC8xP3GPeQ\"")
-                .r("ID", 2101L)
-            .and().insertInto("PRINTING_SCHEMAS", 2096L)
-                .d("IS_DELETED", "false")
-                .d("PSCHEMA_NAME", "\"evomaster_3825_input\"")
-                .d("PAPER_SPECS", "\"evomaster_3826_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(1))
+                .body("'id'", hasItem(containsString("-7540")))
+                .body("'newsId'", hasItem(containsString("-7540")))
+                .body("'authorId'", hasItem(containsString("evomaster_86_input")))
+                .body("'text'", hasItem(containsString("evomaster_88_input")))
+                .body("'country'", hasItem(containsString("evomaster_87_input")))
+                .body("'creationTime'", hasItem(containsString("1940-06-19T")));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"coverSpecs\": \"lZ\", " + 
-                    " \"name\": \"\" " + 
+                    " \"creationTime\": \"2009-00-04T13:07:59\", " + 
+                    " \"id\": \"mKXbX9wHFiV\", " + 
+                    " \"text\": \"i16w0sBV\" " + 
                     " } ")
-                .put(baseUrlOfSut + "/consumer/0/printingschemas/2")
+                .put(baseUrlOfSut + "/news/favicon.ico")
                 .then()
-                .statusCode(200)
+                .statusCode(404)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_131() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 1683L)
-                .d("ADDRESS", "\"BGosEG63PU2\"")
-                .d("AVG_RATING", "0.4338165541110698")
-                .d("BALANCE_CURRENCY", "\"evomaster_2031_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "365")
-                .d("LATITUDE", "0.3831957066286068")
-                .d("LOGO", "\"evomaster_2032_input\"")
-                .d("LONGITUDE", "0.17609940258305257")
-                .d("NAME", "\"2SLsK19uYL5sP6\"")
-                .d("NIF", "\"vp\"")
-            .and().insertInto("PRINTSHOPS", 1682L)
-                .d("ADDRESS", "\"1HCZzELNY1\"")
-                .d("AVG_RATING", "0.7748919570762729")
-                .d("BALANCE_CURRENCY", "\"IK_t31KXypxw\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "-10690.351554421326")
-                .d("LOGO", "\"Ne9BtYnBM\"")
-                .d("LONGITUDE", "0.142674782875")
-                .d("NAME", "\"sUpNcyFWvMk\"")
-                .d("NIF", "\"VG3jXo7pR7\"")
-            .and().insertInto("USERS", 1681L)
-                .d("PASSWORD", "\"evomaster_2033_input\"")
-                .d("USERNAME", "\"x_nda\"")
-            .and().insertInto("CONSUMERS", 1680L)
-                .d("BALANCE_CURRENCY", "\"lVUKw0zB6adq\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"evomaster_2034_input\"")
-                .r("ID", 1681L)
-            .and().insertInto("USERS", 1679L)
-                .d("PASSWORD", "\"CFjECibS\"")
-                .d("USERNAME", "\"evomaster_2035_input\"")
-            .and().insertInto("CONSUMERS", 1678L)
-                .d("BALANCE_CURRENCY", "\"M1jRx1ja81vo\"")
-                .d("BALANCE_FRACTIONAL_PART", "151")
-                .d("BALANCE_INTEGER_PART", "-67107978")
-                .d("NAME", "\"evomaster_2036_input\"")
-                .d("ID", "17")
-            .and().insertInto("PRINT_REQUESTS", 1677L)
-            .and().insertInto("DOCUMENTS", 1676L)
-                .d("FILE_NAME", "\"gq6W\"")
-                .d("TOTAL_PAGES", "-268435021")
-                .d("PRINT_REQUEST_ID", "17")
-            .and().insertInto("PRINTSHOPS", 1675L)
-                .d("ADDRESS", "\"pogV1UlHkQRPW2d\"")
-                .d("AVG_RATING", "0.39955625632936376")
-                .d("BALANCE_CURRENCY", "\"x_nda\"")
-                .d("BALANCE_FRACTIONAL_PART", "289")
-                .d("BALANCE_INTEGER_PART", "862")
-                .d("LATITUDE", "0.7480934211019526")
-                .d("LOGO", "\"\u0016\"")
-                .d("LONGITUDE", "0.6711720983972413")
-                .d("NAME", "\"e_CKwWLiTsY\"")
-                .d("NIF", "\"evomaster_2037_input\"")
-            .and().insertInto("PRINTSHOPS", 1674L)
-                .d("ADDRESS", "\"T_8DqgW3o38NiXF\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"ujsYpW7\"")
-                .d("BALANCE_FRACTIONAL_PART", "542")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.8682398987004326")
-                .d("LOGO", "\"iIaZeC3\"")
-                .d("LONGITUDE", "0.54162279668737")
-                .d("NAME", "\"4PElt2R\"")
-                .d("NIF", "\"\"")
-            .and().insertInto("USERS", 1673L)
-                .d("PASSWORD", "\"XCzSGGJELJgFjG\"")
-                .d("USERNAME", "\"evomaster_2038_input\"")
-            .and().insertInto("CONSUMERS", 1672L)
-                .d("BALANCE_CURRENCY", "\"w6VSV90kZbehK\"")
-                .d("BALANCE_FRACTIONAL_PART", "680")
-                .d("BALANCE_INTEGER_PART", "962")
-                .d("NAME", "\"\"")
-                .r("ID", 1679L)
-            .and().insertInto("USERS", 1671L)
-                .d("PASSWORD", "\"gfItTrcCfTay\"")
-                .d("USERNAME", "\"Xa9\"")
-            .and().insertInto("CONSUMERS", 1670L)
-                .d("BALANCE_CURRENCY", "\"gk2ScaTZQ\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "965")
-                .d("NAME", "\"evomaster_2039_input\"")
-                .r("ID", 1671L)
-            .and().insertInto("PRINT_REQUESTS", 1669L)
-            .and().insertInto("DOCUMENTS", 1668L)
-                .d("FILE_NAME", "\"evomaster_2040_input\"")
-                .d("TOTAL_PAGES", "746")
-                .r("PRINT_REQUEST_ID", 1669L)
-            .and().insertInto("PRINTSHOPS", 1667L)
-                .d("ADDRESS", "\"kHZX91higV\"")
-                .d("AVG_RATING", "0.46101315032")
-                .d("BALANCE_CURRENCY", "\"evomaster_2041_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "803")
-                .d("BALANCE_INTEGER_PART", "536871086")
-                .d("LATITUDE", "0.8102889028250574")
-                .d("LOGO", "\"PlIoAb2gWQQH\"")
-                .d("LONGITUDE", "0.28267607785509385")
-                .d("NAME", "\"TA7g_\"")
-                .d("NIF", "\"l4D2teVtUTjulx8i\"")
-            .and().insertInto("PRINTSHOPS", 1666L)
-                .d("ADDRESS", "\"xpFhPCYfvFhuUy\"")
-                .d("AVG_RATING", "0.19021809898620312")
-                .d("BALANCE_CURRENCY", "\"uMya\"")
-                .d("BALANCE_FRACTIONAL_PART", "-291713053")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "0.15243777577044548")
-                .d("LOGO", "\"OY\"")
-                .d("LONGITUDE", "0.7543737456592365")
-                .d("NAME", "\"evomaster_2042_input\"")
-                .d("NIF", "\"tP3yvhLy\"")
-            .and().insertInto("USERS", 1665L)
-                .d("PASSWORD", "\"PUUWVUUUZUca\"")
-                .d("USERNAME", "\"evomaster_2043_input\"")
-            .and().insertInto("CONSUMERS", 1664L)
-                .d("BALANCE_CURRENCY", "\"\"")
-                .d("BALANCE_FRACTIONAL_PART", "150")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"i\"")
-                .r("ID", 1665L)
-            .and().insertInto("USERS", 1663L)
-                .d("PASSWORD", "\"evomaster_2044_input\"")
-                .d("USERNAME", "\"biTh6cqAG5QOyj\"")
-            .and().insertInto("CONSUMERS", 1662L)
-                .d("BALANCE_CURRENCY", "\"0npwM1\"")
-                .d("BALANCE_FRACTIONAL_PART", "553")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("NAME", "\"sNhlsE\"")
-                .r("ID", 1663L)
-            .and().insertInto("PRINT_REQUESTS", 1661L)
-            .and().insertInto("DOCUMENTS", 1660L)
-                .d("FILE_NAME", "\"evomaster_2045_input\"")
-                .d("TOTAL_PAGES", "142")
-                .d("PRINT_REQUEST_ID", "5")
-            .and().insertInto("USERS", 1659L)
-                .d("PASSWORD", "\"xmtQpb8jt\"")
-                .d("USERNAME", "\"evomaster_2046_input\"")
-            .and().insertInto("PRINTSHOPS", 1658L)
-                .d("ADDRESS", "\"evomaster_2047_input\"")
-                .d("AVG_RATING", "0.3178448864773997")
-                .d("BALANCE_CURRENCY", "\"V3P98U5BrBlk7B\"")
-                .d("BALANCE_FRACTIONAL_PART", "33555160")
-                .d("BALANCE_INTEGER_PART", "850")
-                .d("LATITUDE", "0.7927943543982099")
-                .d("LOGO", "\"TlwBHtkWE1\"")
-                .d("LONGITUDE", "0.465")
-                .d("NAME", "\"3Ck\"")
-                .d("NIF", "\"evomaster_2048_input\"")
-            .and().insertInto("EMPLOYEES", 1657L)
-                .d("NAME", "\"LddDZqk\"")
-                .r("ID", 1659L)
-            .and().insertInto("USERS", 1656L)
-                .d("PASSWORD", "\"evomaster_2049_input\"")
-                .d("USERNAME", "\"faiMdui5JWBZC\"")
-            .and().insertInto("PRINTSHOPS", 1655L)
-                .d("ADDRESS", "\"R85N1h777zFhK\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_2050_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "850")
-                .d("BALANCE_INTEGER_PART", "434")
-                .d("LATITUDE", "0.03990420461756794")
-                .d("LOGO", "\"UFUCUkpXU5WU3UUU\"")
-                .d("LONGITUDE", "0.2811194242679681")
-                .d("NAME", "\"orjKucVyy67Ed\"")
-                .d("NIF", "\"\"")
-            .and().insertInto("EMPLOYEES", 1654L)
-                .d("NAME", "\"DPed\"")
-                .d("ID", "5")
-            .and().insertInto("USERS", 1653L)
-                .d("PASSWORD", "\"7k\"")
-                .d("USERNAME", "\"0be2Yl0uD2\"")
-            .and().insertInto("PRINTSHOPS", 1652L)
-                .d("ADDRESS", "\"n1kEF\"")
-                .d("AVG_RATING", "0.8170778957376464")
-                .d("BALANCE_CURRENCY", "\"5GqMaIiZGDVAxP\"")
-                .d("BALANCE_FRACTIONAL_PART", "9")
-                .d("BALANCE_INTEGER_PART", "866")
-                .d("LATITUDE", "0.017880245420884955")
-                .d("LOGO", "\"evomaster_2051_input\"")
-                .d("LONGITUDE", "0.5914875138551186")
-                .d("NAME", "\"v1y6wHUybAQh3k\"")
-                .d("NIF", "\"riUku6Ip2xVHl\"")
-            .and().insertInto("EMPLOYEES", 1651L)
-                .d("NAME", "\"C5iG\"")
-                .r("ID", 1671L)
-            .and().insertInto("USERS", 1650L)
-                .d("PASSWORD", "\"evomaster_2052_input\"")
-                .d("USERNAME", "\"evomaster_2053_input\"")
-            .and().insertInto("PRINTSHOPS", 1649L)
-                .d("ADDRESS", "\"\"")
-                .d("AVG_RATING", "0.9670599135042155")
-                .d("BALANCE_CURRENCY", "\"evomaster_2054_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-33553705")
-                .d("BALANCE_INTEGER_PART", "453")
-                .d("LATITUDE", "204792.60833730368")
-                .d("LOGO", "\"evomaster_2055_input\"")
-                .d("LONGITUDE", "0.46264943140297377")
-                .d("NAME", "\"evomaster_2056_input\"")
-                .d("NIF", "\"g\"")
-            .and().insertInto("EMPLOYEES", 1648L)
-                .d("NAME", "\"L28E5SH35OcYN\"")
-                .r("ID", 1650L)
-            .and().insertInto("USERS", 1647L)
-                .d("PASSWORD", "\"I5Nzl5ZbUWyid_\"")
-                .d("USERNAME", "\"evomaster_2057_input\"")
-            .and().insertInto("PRINTSHOPS", 1646L)
-                .d("ADDRESS", "\"evomaster_2058_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_2059_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "600")
-                .d("LATITUDE", "0.9766723004522586")
-                .d("LOGO", "\"rLNd_s\"")
-                .d("LONGITUDE", "0.9545890911648965")
-                .d("NAME", "\"evomaster_2060_input\"")
-                .d("NIF", "\"evomaster_2061_input\"")
-            .and().insertInto("EMPLOYEES", 1645L)
-                .d("NAME", "\"L\"")
-                .r("ID", 1647L)
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(404.0))
+                .body("'error'", containsString("Not Found"))
+                .body("'message'", containsString("No message available"))
+                .body("'path'", containsString("/news/favicon.ico"));
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .delete(baseUrlOfSut + "/printshops/617/employees/0")
+                .delete(baseUrlOfSut + "/news/dEFDLpPs0")
                 .then()
-                .statusCode(200)
+                .statusCode(400)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/printshops/0/reviews/-5171189555586882752")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/0/reviews/-5171189555586882752"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshop")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshop"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/stats")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/stats"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"Olá Mundo!\"}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/requests")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"printrequests\":[{\"id\":1,\"cost\":1.4,\"arrivalTimestamp\":\"Sep 9, 2020 2:31:29 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":4,\"cost\":2.5,\"arrivalTimestamp\":\"Sep 9, 2020 2:31:29 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":5,\"cost\":2.5,\"arrivalTimestamp\":\"Sep 9, 2020 2:31:29 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[{\"id\":3,\"name\":\"evomaster_2045_input\",\"totalPages\":142,\"specs\":[]}],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":6,\"cost\":1.4,\"arrivalTimestamp\":\"Sep 9, 2020 2:31:29 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":11,\"cost\":1.2,\"arrivalTimestamp\":\"Sep 9, 2020 2:31:29 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":15,\"cost\":1.2,\"arrivalTimestamp\":\"Sep 9, 2020 2:31:29 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"}],\"success\":true}"));
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"price\": \"V\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/0/pricetable/rings")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":false}"));
+                .contentType("");
     }
     
     
     @Test
-    public void test_132() throws Exception {
+    public void test_13() throws Exception {
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/consumer/requests")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news?authorId=Gxbf185CBqxRy3")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"printrequests\":[{\"id\":4,\"cost\":2.5,\"arrivalTimestamp\":\"Sep 9, 2020 2:25:16 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":7,\"cost\":1.2,\"arrivalTimestamp\":\"Sep 9, 2020 2:25:16 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":10,\"cost\":1.2,\"arrivalTimestamp\":\"Sep 9, 2020 2:25:16 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":12,\"cost\":1.4,\"arrivalTimestamp\":\"Sep 9, 2020 2:25:16 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":16,\"cost\":2.5,\"arrivalTimestamp\":\"Sep 9, 2020 2:25:16 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"},{\"id\":17,\"cost\":1.4,\"arrivalTimestamp\":\"Sep 9, 2020 2:25:16 PM\",\"status\":\"PENDING\",\"consumer\":{\"name\":\"João dos Santos\",\"email\":\"proxyprint.pt.consumer@gmail.com\",\"latitude\":\"69\",\"longitude\":\"69\",\"printingSchemas\":[{\"id\":2,\"name\":\"A4+2LAD+CORES+Encaderna\",\"paperSpecs\":\"PAPER,COLOR,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_OPAQUE,A3\",\"deleted\":false},{\"id\":5,\"name\":\"A4+SIMPLEX+COLOR\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":3,\"name\":\"A4+SIMPLEX+PW+Encadernar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,SPIRAL\",\"coverSpecs\":\"COVER,PVC_TRANSPARENT,A4\",\"deleted\":false},{\"id\":4,\"name\":\"A4+2LAD+PB\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"\",\"coverSpecs\":\"\",\"deleted\":false},{\"id\":1,\"name\":\"A4+2LAD+PB+Agrafar\",\"paperSpecs\":\"PAPER,BW,A4,DUPLEX\",\"bindingSpecs\":\"BINDING,STAPLING,0,0\",\"coverSpecs\":\"\",\"deleted\":false}],\"balance\":{\"currency\":\"EUR\",\"integerPart\":1342,\"fractionalPart\":22},\"id\":2,\"username\":\"joao\",\"password\":\"1234\",\"roles\":[\"ROLE_USER\"]},\"documents\":[],\"paymentType\":\"PROXYPRINT_PAYMENT\"}],\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_133() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/admin/printshops")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"prinshops\":\"[{\\\"id\\\":1,\\\"name\\\":\\\"Copy Scan\\\",\\\"address\\\":\\\"Rua Quinta dos Órfãos 16 S. Vitor (Junto à Universidade do Minho), Braga\\\",\\\"latitude\\\":41.557973,\\\"longitude\\\":-8.398398,\\\"nif\\\":\\\"123555378\\\",\\\"logo\\\":\\\"logo_1\\\",\\\"avgRating\\\":0.0,\\\"balance\\\":{\\\"currency\\\":\\\"EUR\\\",\\\"integerPart\\\":0,\\\"fractionalPart\\\":0}},{\\\"id\\\":2,\\\"name\\\":\\\"Flash Vidius - Gomes \\\\u0026 Santana, Lda.\\\",\\\"address\\\":\\\"R. Manuel Silva, 20 - R/C. C.P. 4490000, Povoa de Varzim, Porto\\\",\\\"latitude\\\":41.379392,\\\"longitude\\\":-8.761458,\\\"nif\\\":\\\"199111333\\\",\\\"logo\\\":\\\"logo_3\\\",\\\"avgRating\\\":0.0,\\\"balance\\\":{\\\"currency\\\":\\\"EUR\\\",\\\"integerPart\\\":0,\\\"fractionalPart\\\":0}},{\\\"id\\\":3,\\\"name\\\":\\\"CopyGraphe\\\",\\\"address\\\":\\\"R. Ramalho Ortigão C Com Pescador - lj 12. C.P. 4490678, Povoa de Varzim, Porto\\\",\\\"latitude\\\":41.383314,\\\"longitude\\\":-8.761942,\\\"nif\\\":\\\"123098333\\\",\\\"logo\\\":\\\"logo_4\\\",\\\"avgRating\\\":0.0,\\\"balance\\\":{\\\"currency\\\":\\\"EUR\\\",\\\"integerPart\\\":0,\\\"fractionalPart\\\":0}},{\\\"id\\\":4,\\\"name\\\":\\\"Nelson Costa Santos\\\",\\\"address\\\":\\\"Tv. Senra, 22 - Póvoa de Varzim. C.P. 4490000, Povoa de Varzim, Porto.\\\",\\\"latitude\\\":41.38207,\\\"longitude\\\":-8.763069,\\\"nif\\\":\\\"153655378\\\",\\\"logo\\\":\\\"logo_5\\\",\\\"avgRating\\\":0.0,\\\"balance\\\":{\\\"currency\\\":\\\"EUR\\\",\\\"integerPart\\\":0,\\\"fractionalPart\\\":0}},{\\\"id\\\":5,\\\"name\\\":\\\"Gráfica Editora Poveira, Lda.\\\",\\\"address\\\":\\\"R. Manuel Silva, 18. C.P. 4490657, Povoa de Varzim, Porto.\\\",\\\"latitude\\\":41.379605,\\\"longitude\\\":-8.761047,\\\"nif\\\":\\\"133555378\\\",\\\"logo\\\":\\\"logo_6\\\",\\\"avgRating\\\":0.0,\\\"balance\\\":{\\\"currency\\\":\\\"EUR\\\",\\\"integerPart\\\":0,\\\"fractionalPart\\\":0}},{\\\"id\\\":6,\\\"name\\\":\\\"Staples Vila do Conde\\\",\\\"address\\\":\\\"Avenida General Humberto Delgado 2, Vila do Conde\\\",\\\"latitude\\\":41.370674,\\\"longitude\\\":-8.744176,\\\"nif\\\":\\\"133555378\\\",\\\"logo\\\":\\\"logo_7\\\",\\\"avgRating\\\":0.0,\\\"balance\\\":{\\\"currency\\\":\\\"EUR\\\",\\\"integerPart\\\":0,\\\"fractionalPart\\\":0}},{\\\"id\\\":7,\\\"name\\\":\\\"Staples Vila da Maia\\\",\\\"address\\\":\\\"Rua Comendador Valentim dos Santos Dinis 570, Maia\\\",\\\"latitude\\\":41.246159,\\\"longitude\\\":-8.625225,\\\"nif\\\":\\\"133555378\\\",\\\"logo\\\":\\\"logo_7\\\",\\\"avgRating\\\":0.0,\\\"balance\\\":{\\\"currency\\\":\\\"EUR\\\",\\\"integerPart\\\":0,\\\"fractionalPart\\\":0}},{\\\"id\\\":8,\\\"name\\\":\\\"Video Norte\\\",\\\"address\\\":\\\"Rua Nova de Santa Cruz\\\",\\\"latitude\\\":41.5594,\\\"longitude\\\":-8.3972,\\\"nif\\\":\\\"123444378\\\",\\\"logo\\\":\\\"logo_8\\\",\\\"avgRating\\\":4.0,\\\"balance\\\":{\\\"currency\\\":\\\"EUR\\\",\\\"integerPart\\\":0,\\\"fractionalPart\\\":0}},{\\\"id\\\":9,\\\"name\\\":\\\"SmartPrint\\\",\\\"address\\\":\\\"Rua dos Peões, Braga\\\",\\\"latitude\\\":41.557973,\\\"longitude\\\":-8.398398,\\\"nif\\\":\\\"123555378\\\",\\\"logo\\\":\\\"logo_2\\\",\\\"avgRating\\\":0.0,\\\"balance\\\":{\\\"currency\\\":\\\"EUR\\\",\\\"integerPart\\\":0,\\\"fractionalPart\\\":0}}]\",\"success\":true}"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(0))
+                .body("isEmpty()", is(true));
     }
     
     
     @Test
-    public void test_134() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 767L)
-                .d("ADDRESS", "\"evomaster_4687_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_4685_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-514")
-                .d("BALANCE_INTEGER_PART", "-67108864")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"dvomaster2101_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"e0OoZZfnziVBXA\"")
-                .d("NIF", "\"evomaster_4688_input\"")
+    public void test_14() throws Exception {
+        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 12L)
+                .d("ID", "97")
+                .d("AUTHOR_ID", "\"evomaster_50_input\"")
+                .d("COUNTRY", "\"sWJ_Dopoub\"")
+                .d("CREATION_TIME", "\"2069-02-25 07:04:25\"")
+                .d("TEXT", "\"us9r_gHoPdof\"")
+            .and().insertInto("NEWS_ENTITY", 11L)
+                .d("ID", "801")
+                .d("AUTHOR_ID", "\"381D\"")
+                .d("COUNTRY", "\"evomaster_51_input\"")
+                .d("CREATION_TIME", "\"2095-05-02 17:57:16\"")
+                .d("TEXT", "\"WPpAtOFwAk6edK\"")
             .dtos();
         controller.execInsertionsIntoDatabase(insertions);
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 464.0, " + 
-                    " \"ringType\": \"evomaster_4686_input\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/8/pricetable/deletering")
-                .then()
-                .statusCode(200)
-                .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_135() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/admin/useed")
+                .delete(baseUrlOfSut + "/news/evomaster_52_input")
                 .then()
-                .statusCode(200)
+                .statusCode(400)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"message\":\"consumers seeding completed\"}"));
-    }
-    
-    
-    @Test
-    public void test_136() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("REGISTER_REQUESTS", 415L)
-                .d("ACCEPTED", "false")
-                .d("MANAGER_EMAIL", "\"5K3dl8r\"")
-                .d("MANAGER_NAME", "\"p7f3cNfKBilAzbD\"")
-                .d("MANAGER_PASSWORD", "\"evomaster_3538_input\"")
-                .d("MANAGER_USERNAME", "\"evomaster_3539_input\"")
-                .d("PSHOP_ADDRESS", "\"cr63wBgBgqmrI\"")
-                .d("PSHOP_DATE_REQUEST", "\"Sopeiw3yb\"")
-                .d("PSHOP_LATITUDE", "8.988465674311579E307")
-                .d("PSHOP_LONGITUDE", "1.9469750214194401")
-                .d("PSHOP_NIF", "\"evomaster_3540_input\"")
-                .d("PSHOP_NAME", "\"x\"")
-            .and().insertInto("REGISTER_REQUESTS", 414L)
-                .d("ACCEPTED", "false")
-                .d("MANAGER_EMAIL", "\"evomaster_264_input\"")
-                .d("MANAGER_NAME", "\"Fm\"")
-                .d("MANAGER_PASSWORD", "\"93\"")
-                .d("MANAGER_USERNAME", "\"evomaster_3541_input\"")
-                .d("PSHOP_ADDRESS", "\"Voi_zYs0\"")
-                .d("PSHOP_DATE_REQUEST", "\"evomaster_265_input\"")
-                .d("PSHOP_LATITUDE", "8.988465674311579E307")
-                .d("PSHOP_LONGITUDE", "0.57011995")
-                .d("PSHOP_NIF", "\"\"")
-                .d("PSHOP_NAME", "\"ng\"")
-            .and().insertInto("REGISTER_REQUESTS", 413L)
-                .d("ACCEPTED", "false")
-                .d("MANAGER_EMAIL", "\"evomaster_3542_input\"")
-                .d("MANAGER_NAME", "\"CVH\"")
-                .d("MANAGER_PASSWORD", "\"evomaster_3543_input\"")
-                .d("MANAGER_USERNAME", "\"Iy1jPyft9shd1d\"")
-                .d("PSHOP_ADDRESS", "\"jiI7B6NpN2koX\"")
-                .d("PSHOP_DATE_REQUEST", "\"evomaster_266_input\"")
-                .d("PSHOP_LATITUDE", "0.7404976")
-                .d("PSHOP_LONGITUDE", "0.441135")
-                .d("PSHOP_NIF", "\"evomaster_3544_input\"")
-                .d("PSHOP_NAME", "\"HKetVa7F9qPViwY6L\"")
-            .and().insertInto("REGISTER_REQUESTS", 412L)
-                .d("ACCEPTED", "false")
-                .d("MANAGER_EMAIL", "\"evomaster_267_input\"")
-                .d("MANAGER_NAME", "\"tnERBHwwK\"")
-                .d("MANAGER_PASSWORD", "\"evomaster_268_input\"")
-                .d("MANAGER_USERNAME", "\"evomaster_3545_input\"")
-                .d("PSHOP_ADDRESS", "\"evomaster_269_input\"")
-                .d("PSHOP_DATE_REQUEST", "\"evomaster_270_input\"")
-                .d("PSHOP_LATITUDE", "0.16616890517799")
-                .d("PSHOP_LONGITUDE", "8.988465674311579E307")
-                .d("PSHOP_NIF", "\"PCmIh7DAnjzKLKrPp\"")
-                .d("PSHOP_NAME", "\"evomaster_3546_input\"")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
+                .contentType("");
         
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .post(baseUrlOfSut + "/request/accept/4")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news")
                 .then()
                 .statusCode(200)
                 .assertThat()
-                .contentType("text/plain")
-                .body(containsString("{\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_137() throws Exception {
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(2))
+                .body("'id'", hasItem(containsString("97")))
+                .body("'newsId'", hasItem(containsString("97")))
+                .body("'authorId'", hasItem(containsString("evomaster_50_input")))
+                .body("'text'", hasItem(containsString("us9r_gHoPdof")))
+                .body("'country'", hasItem(containsString("sWJ_Dopoub")))
+                .body("'creationTime'", hasItem(containsString("2069-02-25T")))
+                .body("'id'", hasItem(containsString("801")))
+                .body("'newsId'", hasItem(containsString("801")))
+                .body("'authorId'", hasItem(containsString("381D")))
+                .body("'text'", hasItem(containsString("WPpAtOFwAk6edK")))
+                .body("'country'", hasItem(containsString("evomaster_51_input")))
+                .body("'creationTime'", hasItem(containsString("2095-05-02T")));
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/printshops/stats")
-                .then()
-                .statusCode(200)
-                .assertThat()
                 .contentType("text/plain")
-                .body(containsString("{\"nPendingRequests\":0,\"nInProgressRequests\":0,\"nFinished\":0,\"nEmployees\":6,\"pshopProfit\":\"12.96\",\"success\":true}"));
-    }
-    
-    
-    @Test
-    public void test_138() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .options(baseUrlOfSut + "/*")
+                .body("zCgnQy42_z")
+                .put(baseUrlOfSut + "/news/-4110517215242606478/text")
                 .then()
-                .statusCode(204)
+                .statusCode(404)
                 .assertThat()
                 .contentType("")
                 .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_139() throws Exception {
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"id\": 992.0, " + 
-                    " \"roles\": {}, " + 
-                    " \"rolesSet\": [ " + 
-                    " \"eozXBUY9FB5Wd\", " + 
-                    " \"NDP\", " + 
-                    " \"YaRwzjn1Ug8e2xSP\", " + 
-                    " \"kY\" " + 
-                    " ] " + 
+                    " \"authorId\": \"QXISTQcnf\", " + 
+                    " \"country\": \"74e9nwd04fb0Lj\", " + 
+                    " \"creationTime\": \"2082-13-15T05:46:12\", " + 
+                    " \"newsId\": \"4113yUGs\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/admin/register")
+                .put(baseUrlOfSut + "/news/H3271QW8oDFU")
                 .then()
                 .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json")
                 .body("'status'", numberMatches(400.0))
                 .body("'error'", containsString("Bad Request"))
-                .body("'exception'", containsString("org.springframework.http.converter.HttpMessageNotReadableException"))
-                .body("'message'", containsString("Could not read document: Can not deserialize instance of java.util.HashSet out of START_OBJECT token\n at [Source: java.io.PushbackInputStream"))
-                .body("'path'", containsString("/admin/register"));
-    }
-    
-    
-    @Test
-    public void test_140() throws Exception {
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"2082-13-15T"))
+                .body("'path'", containsString("/news/H3271QW8oDFU"));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .contentType("application/json")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/json;charset=UTF-8")
                 .body(" { " + 
-                    " \"managerPassword\": \"jgVvHJkD5J\", " + 
-                    " \"managerUsername\": \"Nr\", " + 
-                    " \"pShopDateRequest\": \"axzmia13pkJcgVC\", " + 
-                    " \"pShopDateRequestAccepted\": \"axe0vKrYARFjmx\", " + 
-                    " \"pShopLatitude\": 0.975294806043168, " + 
-                    " \"pShopLongitude\": 0.8850702922315757 " + 
+                    " \"authorId\": \"jfkdmgzso3\", " + 
+                    " \"creationTime\": \"2077-04-24T24:24:54\", " + 
+                    " \"id\": \"iVNvnBKhKvf\", " + 
+                    " \"text\": \"bEa\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/request/register")
+                .post(baseUrlOfSut + "/news")
                 .then()
                 .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json")
                 .body("'status'", numberMatches(400.0))
                 .body("'error'", containsString("Bad Request"))
-                .body("'exception'", containsString("org.springframework.http.converter.HttpMessageNotReadableException"))
-                .body("'message'", containsString("Could not read document: Can not deserialize value of type java.util.GregorianCalendar from String \"axe0vKrYARFjmx\": not a valid representation (error: Failed to parse Date value 'axe0vKrYARFjmx': Can not parse date \"axe0vKrYARFjmx\": not compatible with any of standard forms (\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"EEE, dd MMM yyyy HH:mm:ss zzz\", \"yyyy-MM-dd\"))\n at [Source: java.io.PushbackInputStream"))
-                .body("'path'", containsString("/request/register"));
-    }
-    
-    
-    @Test
-    public void test_141() throws Exception {
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"2077-04-24T"))
+                .body("'path'", containsString("/news"));
         
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"managerPassword\": \"r1n\", " + 
-                    " \"pShopAddress\": \"qysI_I3\", " + 
-                    " \"pShopDateRequest\": \"QQmE5WsF52\", " + 
-                    " \"pShopDateRequestAccepted\": \"\", " + 
-                    " \"pShopLongitude\": 0.4854628064206904, " + 
-                    " \"pShopNIF\": \"sdtePi02nTt5iPB\", " + 
-                    " \"pShopName\": \"B5q\" " + 
+                    " \"country\": \"K3qgEv\", " + 
+                    " \"creationTime\": \"1992-10-05T08:52:47\", " + 
+                    " \"id\": \"HuBvFF\", " + 
+                    " \"newsId\": \"ZvTdGONz\", " + 
+                    " \"text\": \"No7l3omp_\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/request/register")
+                .post(baseUrlOfSut + "/news")
                 .then()
                 .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json")
                 .body("'status'", numberMatches(400.0))
                 .body("'error'", containsString("Bad Request"))
-                .body("'exception'", containsString("org.springframework.http.converter.HttpMessageNotReadableException"))
-                .body("'message'", containsString("Could not read document: N/A\n at [Source: java.io.PushbackInputStream"))
-                .body("'path'", containsString("/request/register"));
-    }
-    
-    
-    @Test
-    public void test_142() throws Exception {
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"1992-10-05T"))
+                .body("'path'", containsString("/news"));
         
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/requests/pending")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/requests/pending"));
-    }
-    
-    
-    @Test
-    public void test_143() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" \"EOq_t\" ")
-                .post(baseUrlOfSut + "/request/reject/387")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .get(baseUrlOfSut + "/news?country=9cPrIcbTl")
                 .then()
-                .statusCode(401)
+                .statusCode(200)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/request/reject/387"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("size()", equalTo(0))
+                .body("isEmpty()", is(true));
     }
     
     
     @Test
-    public void test_144() throws Exception {
+    public void test_15() throws Exception {
         
-        given().accept("*/*")
-                .post(baseUrlOfSut + "/request/accept/938")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/request/accept/938"));
-    }
-    
-    
-    @Test
-    public void test_145() throws Exception {
-        
-        given().accept("*/*")
-                .delete(baseUrlOfSut + "/printshops/4463144761172870806/reviews/938")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/4463144761172870806/reviews/938"));
-    }
-    
-    
-    @Test
-    public void test_146() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" \"IdrzZFGGLX\" ")
-                .put(baseUrlOfSut + "/printshops/563/pricetable/editstapling")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/563/pricetable/editstapling"));
-    }
-    
-    
-    @Test
-    public void test_147() throws Exception {
-        
-        given().accept("*/*")
-                .delete(baseUrlOfSut + "/printshops/563/employees/-8283583583092649339")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/563/employees/-8283583583092649339"));
-    }
-    
-    
-    @Test
-    public void test_148() throws Exception {
-        
-        given().accept("*/*")
-                .put(baseUrlOfSut + "/printshops/159/employees")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/159/employees"));
-    }
-    
-    
-    @Test
-    public void test_149() throws Exception {
-        
-        given().accept("*/*")
-                .post(baseUrlOfSut + "/printshops/745/employees")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/745/employees"));
-    }
-    
-    
-    @Test
-    public void test_150() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/printshops/-1374159713/employees")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/-1374159713/employees"));
-    }
-    
-    
-    @Test
-    public void test_151() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"key_1\": \"Ys\", " + 
-                    " \"key_2\": \"\", " + 
-                    " \"key_3\": \"CrG\" " + 
+                    " \"authorId\": \"d9PtNII\", " + 
+                    " \"country\": \"yeMen\", " + 
+                    " \"text\": \"sO9qN5XuhlYw\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/278/reviews")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(401)
+                .statusCode(201)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/278/reviews"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body(containsString("1"));
     }
     
     
     @Test
-    public void test_152() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/printshops/9095342050049880113/reviews")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/9095342050049880113/reviews"));
-    }
-    
-    
-    @Test
-    public void test_153() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 359.0 " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/-1883247040/pricetable/rings")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/-1883247040/pricetable/rings"));
-    }
-    
-    
-    @Test
-    public void test_154() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"price\": \"r76\", " + 
-                    " \"ringType\": \"h7Ngs7j4U\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/521/pricetable/rings")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/521/pricetable/rings"));
-    }
-    
-    
-    @Test
-    public void test_155() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 906.0, " + 
-                    " \"priceA3DUPLEX\": \"z\", " + 
-                    " \"priceA3SIMPLEX\": \"gUpJqK0FK9u6x\", " + 
-                    " \"priceA4DUPLEX\": \"\", " + 
-                    " \"priceA4SIMPLEX\": \"ldsaH\" " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/225/pricetable/papers")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/225/pricetable/papers"));
-    }
-    
-    
-    @Test
-    public void test_156() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"colors\": \"MUu9nkKv98eV63\", " + 
-                    " \"infLim\": 970.0, " + 
-                    " \"priceA3DUPLEX\": \"\", " + 
-                    " \"priceA3SIMPLEX\": \"u17uU3cUJY9BF\", " + 
-                    " \"supLim\": 553.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/438/pricetable/papers")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/438/pricetable/papers"));
-    }
-    
-    
-    @Test
-    public void test_157() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"ringType\": \"88RJuvt4JRQez\", " + 
-                    " \"supLim\": 203.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/521/pricetable/deletering")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/521/pricetable/deletering"));
-    }
-    
-    
-    @Test
-    public void test_158() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"colors\": \"BkPFt8HZ\", " + 
-                    " \"priceA3SIMPLEX\": \"alkhGzAgUwVoGMk\", " + 
-                    " \"priceA4DUPLEX\": \"Tu\", " + 
-                    " \"supLim\": 103.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/483/pricetable/deletepaper")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/483/pricetable/deletepaper"));
-    }
-    
-    
-    @Test
-    public void test_159() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"priceA4\": \"xZ5ynO4uNTW6u\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/136/pricetable/deletecover")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/136/pricetable/deletecover"));
-    }
-    
-    
-    @Test
-    public void test_160() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"priceA4\": \"uM6nuRK\" " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/226/pricetable/covers")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/226/pricetable/covers"));
-    }
-    
-    
-    @Test
-    public void test_161() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"coverType\": \"KWrDOTZOP0n5\", " + 
-                    " \"priceA3\": \"Yb\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/406/pricetable/covers")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/406/pricetable/covers"));
-    }
-    
-    
-    @Test
-    public void test_162() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/printshops/504/pricetable")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/504/pricetable"));
-    }
-    
-    
-    @Test
-    public void test_163() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/printshops/stats")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/stats"));
-    }
-    
-    
-    @Test
-    public void test_164() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/printshops/satisfied")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/satisfied"));
-    }
-    
-    
-    @Test
-    public void test_165() throws Exception {
-        
-        given().accept("*/*")
-                .post(baseUrlOfSut + "/printshops/requests/409")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/requests/409"));
-    }
-    
-    
-    @Test
-    public void test_166() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/printshops/requests/595")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/requests/595"));
-    }
-    
-    
-    @Test
-    public void test_167() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" \"LomMOmLcprDeQu3\" ")
-                .post(baseUrlOfSut + "/printshops/requests/cancel/740")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/requests/cancel/740"));
-    }
-    
-    
-    @Test
-    public void test_168() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/printshops/requests")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/requests"));
-    }
-    
-    
-    @Test
-    public void test_169() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/printshops/history")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshops/history"));
-    }
-    
-    
-    @Test
-    public void test_170() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/printshop")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printshop"));
-    }
-    
-    
-    @Test
-    public void test_171() throws Exception {
-        
-        given().accept("*/*")
-                .post(baseUrlOfSut + "/printdocument/7130989429422451425/budget")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/printdocument/7130989429422451425/budget"));
-    }
-    
-    
-    @Test
-    public void test_172() throws Exception {
-        
-        given().accept("*/*")
-                .delete(baseUrlOfSut + "/notifications/877")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/notifications/877"));
-    }
-    
-    
-    @Test
-    public void test_173() throws Exception {
-        
-        given().accept("*/*")
-                .put(baseUrlOfSut + "/notifications/1313730538")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/notifications/1313730538"));
-    }
-    
-    
-    @Test
-    public void test_174() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/documents/156")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/documents/156"));
-    }
-    
-    
-    @Test
-    public void test_175() throws Exception {
-        
-        given().accept("*/*")
-                .delete(baseUrlOfSut + "/consumer/ZdzENlKPkebCXH/notifications")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/ZdzENlKPkebCXH/notifications"));
-    }
-    
-    
-    @Test
-    public void test_176() throws Exception {
-        
-        given().accept("*/*")
-                .put(baseUrlOfSut + "/consumer/pPxjsklQKfBsw/notifications")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/pPxjsklQKfBsw/notifications"));
-    }
-    
-    
-    @Test
-    public void test_177() throws Exception {
-        
-        given().accept("*/*")
-                .delete(baseUrlOfSut + "/consumer/176/printingschemas/185")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/176/printingschemas/185"));
-    }
-    
-    
-    @Test
-    public void test_178() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" {} ")
-                .put(baseUrlOfSut + "/consumer/642/printingschemas/555")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/642/printingschemas/555"));
-    }
-    
-    
-    @Test
-    public void test_179() throws Exception {
-        
-        given().accept("*/*")
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"id\": 286.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/consumer/800/printingschemas")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/800/printingschemas"));
-    }
-    
-    
-    @Test
-    public void test_180() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/consumer/8897213410681055365/printingschemas")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/8897213410681055365/printingschemas"));
-    }
-    
-    
-    @Test
-    public void test_181() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/consumer/satisfied")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/satisfied"));
-    }
-    
-    
-    @Test
-    public void test_182() throws Exception {
-        
-        given().accept("*/*")
-                .delete(baseUrlOfSut + "/consumer/requests/cancel/603")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/requests/cancel/603"));
-    }
-    
-    
-    @Test
-    public void test_183() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/consumer/requests")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/requests"));
-    }
-    
-    
-    @Test
-    public void test_184() throws Exception {
-        
-        given().accept("*/*")
-                .post(baseUrlOfSut + "/consumer/printrequest/89/submit")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/printrequest/89/submit"));
-    }
-    
-    
-    @Test
-    public void test_185() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/consumer/notifications")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/notifications"));
-    }
-    
-    
-    @Test
-    public void test_186() throws Exception {
-        
-        given().accept("*/*")
-                .put(baseUrlOfSut + "/consumer/info/update")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/info/update"));
-    }
-    
-    
-    @Test
-    public void test_187() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/consumer/info")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/info"));
-    }
-    
-    
-    @Test
-    public void test_188() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/consumer/balance")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/consumer/balance"));
-    }
-    
-    
-    @Test
-    public void test_189() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/api/secured")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/api/secured"));
-    }
-    
-    
-    @Test
-    public void test_190() throws Exception {
-        
-        given().accept("*/*")
-                .get(baseUrlOfSut + "/admin/printshops")
-                .then()
-                .statusCode(401)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(401.0))
-                .body("'error'", containsString("Unauthorized"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Full authentication is required to access this resource"))
-                .body("'path'", containsString("/admin/printshops"));
-    }
-    
-    
-    @Test
-    public void test_191() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 292L)
-                .d("ADDRESS", "\"evomaster_13853_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"k6K\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-130540")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"^\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_34_input\"")
-                .d("NIF", "\"OEC7UBkzOk0RUtdQ\"")
-            .and().insertInto("USERS", 291L)
-                .d("PASSWORD", "\"evomaster_13794_input\"")
-                .d("USERNAME", "\"evomUster_3U_ivput\"")
-            .and().insertInto("CONSUMERS", 290L)
-                .d("BALANCE_CURRENCY", "\"evomaster_13859_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "8")
-                .d("BALANCE_INTEGER_PART", "-8383835")
-                .d("NAME", "\"evomaster_13830_input\"")
-                .r("ID", 291L)
-            .and().insertInto("REVIEWS", 289L)
-                .d("DESCRIPTION", "\"q3u\"")
-                .d("RATING", "0")
-            .and().insertInto("PRINTSHOPS", 288L)
-                .d("ADDRESS", "\"evomaster_13854_input\"")
-                .d("AVG_RATING", "-127.83352834853977")
-                .d("BALANCE_CURRENCY", "\"evomaster_13855_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "588")
-                .d("BALANCE_INTEGER_PART", "0")
-                .d("LATITUDE", "8.988465674311579E307")
-                .d("LOGO", "\"evomaster_13713_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"L\"")
-                .d("NIF", "\"evolaster_39_inputc\"")
-            .and().insertInto("USERS", 287L)
-                .d("PASSWORD", "\"Y\"")
-                .d("USERNAME", "\"UvouastUU_43_inpUtx\"")
-            .and().insertInto("CONSUMERS", 286L)
-                .d("BALANCE_CURRENCY", "\"evomaster_13860_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "641")
-                .d("BALANCE_INTEGER_PART", "-15872")
-                .d("NAME", "\"evomaster_13856_input\"")
-                .d("ID", "10")
-            .and().insertInto("REVIEWS", 285L)
-                .d("DESCRIPTION", "\"u\u0089\"")
-                .d("RATING", "0")
-            .and().insertInto("PRINTSHOPS", 284L)
-                .d("ADDRESS", "\"evomaster_44_inpXut\"")
-                .d("AVG_RATING", "0.724973025865287")
-                .d("BALANCE_CURRENCY", "\"vgcLUZGm0x\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "524288")
-                .d("LATITUDE", "-1922272.387457547")
-                .d("LOGO", "\"evomaster_13831_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomUsUer_U3798_qnput\"")
-                .d("NIF", "\"evomaster_13716_input\"")
-            .and().insertInto("USERS", 283L)
-                .d("PASSWORD", "\"xbHpyX\"")
-                .d("USERNAME", "\"evomaster_13799_input\"")
-            .and().insertInto("CONSUMERS", 282L)
-                .d("BALANCE_CURRENCY", "\"evomaster_46_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-524233")
-                .d("NAME", "\"evomaster_47_input\"")
-                .d("ID", "15")
-            .and().insertInto("REVIEWS", 281L)
-                .d("DESCRIPTION", "\"lSxxB7dL\"")
-                .d("RATING", "-442286")
-            .and().insertInto("PRINTSHOPS", 280L)
-                .d("ADDRESS", "\"evomaster_48_input\"")
-                .d("AVG_RATING", "8.988465674311579E307")
-                .d("BALANCE_CURRENCY", "\"evomaster_13861_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "-2097043")
-                .d("BALANCE_INTEGER_PART", "-2096391")
-                .d("LATITUDE", "0.6341782973686445")
-                .d("LOGO", "\"evomaster_13000_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"EdYvFe\"")
-                .d("NIF", "\"evomaster_13862_input\"")
-            .and().insertInto("USERS", 279L)
-                .d("PASSWORD", "\"BuKstCtEf\"")
-                .d("USERNAME", "\"oUsuPNNbx6Ct13Gq\"")
-            .and().insertInto("CONSUMERS", 278L)
-                .d("BALANCE_CURRENCY", "\"XkZ7uZtO2KqI7GEC\"")
-                .d("BALANCE_FRACTIONAL_PART", "2097850")
-                .d("BALANCE_INTEGER_PART", "973")
-                .d("NAME", "\"evomaster_13863_input\"")
-                .d("ID", "11")
-            .and().insertInto("REVIEWS", 277L)
-                .d("DESCRIPTION", "\"evomaster_13719_input\"")
-                .d("RATING", "1073725569")
+    public void test_16() throws Exception {
+        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 126L)
+                .d("ID", "6686493726304087908")
+                .d("AUTHOR_ID", "\"yE=nnCMHDVerKZ\"")
+                .d("COUNTRY", "\"YQ_KUVxuO\"")
+                .d("CREATION_TIME", "\"1904-02-28 00:08:23\"")
+                .d("TEXT", "\"evomaster_1359_inputgACFIjguDIX2NaVfraex3S2pXWPQPbnRKaRJU_4tP74pzycuuiL0jHKPdabUkq2KMX6R4qEMyekAgEZV718852iScVdtbePShAJwUq48FYjCMJMF0NkS10hN2NAJbiDoJ9s_W6FkvQTiTvVAKiFQ5SIstVSm2BxiB7lvzjrUHKFmCxE1c7oHsIFxIFqQGFB6WkPSNSINwNlufimmahNbQgU_PNn5kzPyE0kxfsbRoWMtm8Xx3HGH7YRjhxJMYFPLQtGp_HWUTA073EZT0XfFDKIjk3KEN_Mk2Z6swiCJEMi8NUsHvqmv2EIyAJ0YPO2LuIDsVDKUEu8WrYq_QH9pjjsIjYMwCmPOWz15rxscj439lDDw6b1tETtq2ccAGlGRZsQxj4lfcLfv6Iv4lZ5R5_hyfE5S20ax2BaaaOschH8Jjk_WAP4puGq9_mRtQRpgjlUojZBfufjBjsjiW5oTwzovAZ7z5i5SiTyw52Y88SMMH2MA9TI_2ZpC\"")
+            .and().insertInto("NEWS_ENTITY", 125L)
+                .d("ID", "-2161727821128528896")
+                .d("AUTHOR_ID", "\"2VK]As==w^C9<b_ibeOFpyB\"")
+                .d("COUNTRY", "\":q_DETI^\"")
+                .d("CREATION_TIME", "\"1906-09-05 16:12:04\"")
+                .d("TEXT", "\"dv_qYcsUn_1489_gfput4Ev76qO11J6CLl5J\"")
+            .and().insertInto("NEWS_ENTITY", 124L)
+                .d("ID", "2138314941281023744")
+                .d("AUTHOR_ID", "\"c2icuLBCIdOM6yw8j0VbV$M\"")
+                .d("COUNTRY", "\"evomaster_1493_input\"")
+                .d("CREATION_TIME", "\"1943-12-09 08:46:49\"")
+                .d("TEXT", "\"evomaster_1494_inpu\"")
+            .and().insertInto("NEWS_ENTITY", 123L)
+                .d("ID", "-5476377146889080832")
+                .d("AUTHOR_ID", "\"evmmasrfr_3361_Yntyt\"")
+                .d("COUNTRY", "\"evomaster_3163_input\"")
+                .d("CREATION_TIME", "\"2096-10-31 11:20:10\"")
+                .d("TEXT", "\"evomaster_4863_input\"")
+            .and().insertInto("NEWS_ENTITY", 122L)
+                .d("ID", "377")
+                .d("AUTHOR_ID", "\"_voaaster`1165OinpUnarV\"")
+                .d("COUNTRY", "\"evomastej_3162_inputqDwX\"")
+                .d("CREATION_TIME", "\"2018-06-23 10:33:04\"")
+                .d("TEXT", "\"evomaster_3164_input\"")
             .dtos();
         controller.execInsertionsIntoDatabase(insertions);
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/printshops/1/reviews/2")
+                .delete(baseUrlOfSut + "/news/377")
                 .then()
-                .statusCode(401)
+                .statusCode(204)
                 .assertThat()
                 .contentType("")
                 .body(isEmptyOrNullString());
@@ -10766,1013 +1120,163 @@
     
     
     @Test
-    public void test_192() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" \"ON7uR\" ")
-                .post(baseUrlOfSut + "/request/reject/709")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/reject/709"));
-    }
-    
-    
-    @Test
-    public void test_193() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/request/accept/259")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/request/accept/259"));
-    }
-    
-    
-    @Test
-    public void test_194() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/printshops/69/reviews/45")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/69/reviews/45"));
-    }
-    
-    
-    @Test
-    public void test_195() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/printshops/36/reviews/127")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/36/reviews/127"));
-    }
-    
-    
-    @Test
-    public void test_196() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" \"2QV\" ")
-                .put(baseUrlOfSut + "/printshops/900/pricetable/editstapling")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/900/pricetable/editstapling"));
-    }
-    
-    
-    @Test
-    public void test_197() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/printshops/832/employees/178")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/832/employees/178"));
-    }
-    
-    
-    @Test
-    public void test_198() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/printshops/492/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/492/employees"));
-    }
-    
-    
-    @Test
-    public void test_199() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/printshops/289/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/289/employees"));
-    }
-    
-    
-    @Test
-    public void test_200() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/957/employees")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/957/employees"));
-    }
-    
-    
-    @Test
-    public void test_201() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"key_1\": \"nEJOZPS\", " + 
-                    " \"key_2\": \"\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/934/reviews")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/934/reviews"));
-    }
-    
-    
-    @Test
-    public void test_202() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 436.0, " + 
-                    " \"price\": \"Hu\", " + 
-                    " \"supLim\": 832.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/902/pricetable/deletering")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/902/pricetable/deletering"));
-    }
-    
-    
-    @Test
-    public void test_203() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"priceA3\": \"cJWDo\", " + 
-                    " \"priceA4\": \"Ftc3XQ0NZG\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/754/pricetable/covers")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/754/pricetable/covers"));
-    }
-    
-    
-    @Test
-    public void test_204() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/791/pricetable")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/791/pricetable"));
-    }
-    
-    
-    @Test
-    public void test_205() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/stats")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/stats"));
-    }
-    
-    
-    @Test
-    public void test_206() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshop")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshop"));
-    }
-    
-    
-    @Test
-    public void test_207() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/printdocument/229/budget")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printdocument/229/budget"));
-    }
-    
-    
-    @Test
-    public void test_208() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/notifications/872")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/notifications/872"));
-    }
-    
-    
-    @Test
-    public void test_209() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/notifications/446")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/notifications/446"));
-    }
-    
-    
-    @Test
-    public void test_210() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/consumer/55GCCFVi5G1/notifications")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/55GCCFVi5G1/notifications"));
-    }
-    
-    
-    @Test
-    public void test_211() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/consumer/HV/notifications")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/HV/notifications"));
-    }
-    
-    
-    @Test
-    public void test_212() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/consumer/266/printingschemas/6396342727302342046")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/266/printingschemas/6396342727302342046"));
-    }
-    
-    
-    @Test
-    public void test_213() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/consumer/77/printingschemas")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/77/printingschemas"));
-    }
-    
-    
-    @Test
-    public void test_214() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/consumer/satisfied")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/satisfied"));
-    }
-    
-    
-    @Test
-    public void test_215() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/consumer/requests/cancel/342")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/requests/cancel/342"));
-    }
-    
-    
-    @Test
-    public void test_216() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/consumer/requests")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/requests"));
-    }
-    
-    
-    @Test
-    public void test_217() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/consumer/printrequest/1621322716/submit")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/printrequest/1621322716/submit"));
-    }
-    
-    
-    @Test
-    public void test_218() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/consumer/notifications")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/notifications"));
-    }
-    
-    
-    @Test
-    public void test_219() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/consumer/info/update")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/info/update"));
-    }
-    
-    
-    @Test
-    public void test_220() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/consumer/info")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/info"));
-    }
-    
-    
-    @Test
-    public void test_221() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/consumer/balance")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/balance"));
-    }
-    
-    
-    @Test
-    public void test_222() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/api/secured")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/api/secured"));
-    }
-    
-    
-    @Test
-    public void test_223() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/admin/printshops")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/admin/printshops"));
-    }
-    
-    
-    @Test
-    public void test_224() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/documents/623")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/documents/623"));
-    }
-    
-    
-    @Test
-    public void test_225() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/satisfied")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/satisfied"));
-    }
-    
-    
-    @Test
-    public void test_226() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .post(baseUrlOfSut + "/printshops/requests/-4653085415520416053")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/requests/-4653085415520416053"));
-    }
-    
-    
-    @Test
-    public void test_227() throws Exception {
+    public void test_17() throws Exception {
         
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/requests/724")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/requests/724"));
-    }
-    
-    
-    @Test
-    public void test_228() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .contentType("application/json")
-                .body(" \"9\" ")
-                .post(baseUrlOfSut + "/printshops/requests/cancel/291")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/requests/cancel/291"));
-    }
-    
-    
-    @Test
-    public void test_229() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/requests")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/requests"));
-    }
-    
-    
-    @Test
-    public void test_230() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .get(baseUrlOfSut + "/printshops/history")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/history"));
-    }
-    
-    
-    @Test
-    public void test_231() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
-                .get(baseUrlOfSut + "/printshops/708/reviews")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/708/reviews"));
-    }
-    
-    
-    @Test
-    public void test_232() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"coverType\": \"NDBmkGKc_wzLcQ\", " + 
-                    " \"priceA4\": \"SEHBnew4lpZU\" " + 
+                    " \"creationTime\": \"2050-08-06T11:27:42\", " + 
+                    " \"id\": \"Q5tqrAcdwAUqGD\", " + 
+                    " \"newsId\": \"VgKxdSoV2dqC4_q\" " + 
                     " } ")
-                .put(baseUrlOfSut + "/printshops/-8591300846366069431/pricetable/covers")
+                .put(baseUrlOfSut + "/news/V6jEM7Ky3xM_FdH1")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/-8591300846366069431/pricetable/covers"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(400.0))
+                .body("'error'", containsString("Bad Request"))
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"2050-08-06T"))
+                .body("'path'", containsString("/news/V6jEM7Ky3xM_FdH1"));
     }
     
     
     @Test
-    public void test_233() throws Exception {
+    public void test_18() throws Exception {
         
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
+        
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/json;charset=UTF-8")
                 .body(" { " + 
-                    " \"name\": \"IFKNrH7PCG\" " + 
+                    " \"authorId\": \"suMpc6yj\", " + 
+                    " \"country\": \"HIVLwuFRfwH\", " + 
+                    " \"creationTime\": \"1968-01-04T13:23:20\", " + 
+                    " \"id\": \"0F1hvsHSq1nS124\", " + 
+                    " \"newsId\": \"ua\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/consumer/-3104213572456206132/printingschemas")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/-3104213572456206132/printingschemas"));
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(400.0))
+                .body("'error'", containsString("Bad Request"))
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"1968-01-04T"))
+                .body("'path'", containsString("/news"));
     }
     
     
     @Test
-    public void test_234() throws Exception {
+    public void test_19() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"price\": \"u2XmWr0mL\", " + 
-                    " \"supLim\": 289.0 " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/78/pricetable/rings")
+                .delete(baseUrlOfSut + "/news/vlHGQSK2wnk")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/78/pricetable/rings"));
-    }
-    
-    
-    @Test
-    public void test_235() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"colors\": \"s5qXGTU\", " + 
-                    " \"priceA3SIMPLEX\": \"eYeT\" " + 
-                    " } ")
-                .post(baseUrlOfSut + "/printshops/-9054669617082391686/pricetable/papers")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/-9054669617082391686/pricetable/papers"));
+                .contentType("");
     }
     
     
     @Test
-    public void test_236() throws Exception {
+    public void test_20() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"priceA3DUPLEX\": \"Jzt2NT8l\", " + 
-                    " \"supLim\": 251.0 " + 
+                    " \"authorId\": \"LOh_cYClUO\", " + 
+                    " \"id\": \"L98ruiTU0Lqm\", " + 
+                    " \"newsId\": \"Wt_bXMvraCK\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/356686152865454901/pricetable/deletepaper")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/356686152865454901/pricetable/deletepaper"));
+                .contentType("");
     }
     
     
     @Test
-    public void test_237() throws Exception {
+    public void test_21() throws Exception {
         
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
+        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"bindingSpecs\": \"9TDXOwSjQlb\", " + 
-                    " \"coverSpecs\": \"51\", " + 
-                    " \"id\": 2.52157801E8, " + 
-                    " \"paperSpecs\": \"CML_xf\" " + 
+                    " \"authorId\": \"huyqFA\", " + 
+                    " \"country\": \"yY3AT\", " + 
+                    " \"creationTime\": \"2077-00-25T19:12:07\", " + 
+                    " \"text\": \"wMGKEPZXQXZF\" " + 
                     " } ")
-                .put(baseUrlOfSut + "/consumer/231/printingschemas/327")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/consumer/231/printingschemas/327"));
-    }
-    
-    
-    @Test
-    public void test_238() throws Exception {
+                .contentType("application/vnd.tsdes.news+json")
+                .body("'status'", numberMatches(400.0))
+                .body("'error'", containsString("Bad Request"))
+                .body("'message'", containsString("JSON parse error: Cannot deserialize value of type `java.time.ZonedDateTime` from String \"2077-00-25T"))
+                .body("'path'", containsString("/news"));
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hcXVpbToxMjM0") // manager
-                .get(baseUrlOfSut + "/requests/pending")
+                .delete(baseUrlOfSut + "/news/M")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/requests/pending"));
-    }
-    
-    
-    @Test
-    public void test_239() throws Exception {
+                .contentType("");
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
-                .body(" { " + 
-                    " \"infLim\": 283.0, " + 
-                    " \"priceA4SIMPLEX\": \"clvnnxty\" " + 
-                    " } ")
-                .put(baseUrlOfSut + "/printshops/-927068315/pricetable/papers")
+                .contentType("text/plain")
+                .body("WpJ")
+                .put(baseUrlOfSut + "/news/222/text")
                 .then()
-                .statusCode(403)
+                .statusCode(404)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/-927068315/pricetable/papers"));
-    }
-    
-    
-    @Test
-    public void test_240() throws Exception {
+                .contentType("")
+                .body(isEmptyOrNullString());
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
+                .contentType("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                 .body(" { " + 
-                    " \"priceA3\": \"06\", " + 
-                    " \"priceA4\": \"3QbKMYfPvZi\" " + 
+                    " \"id\": \"nZ4M7e\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/314/pricetable/deletecover")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/314/pricetable/deletecover"));
-    }
-    
-    
-    @Test
-    public void test_241() throws Exception {
+                .contentType("");
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .contentType("application/json")
+                .contentType("application/json;charset=UTF-8")
                 .body(" { " + 
-                    " \"infLim\": 196.0, " + 
-                    " \"price\": \"\", " + 
-                    " \"ringType\": \"7Xo5u62An\" " + 
+                    " \"authorId\": \"\", " + 
+                    " \"id\": \"C3xxE7Y4qYvey8k\" " + 
                     " } ")
-                .put(baseUrlOfSut + "/printshops/250/pricetable/rings")
-                .then()
-                .statusCode(403)
-                .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/printshops/250/pricetable/rings"));
-    }
-    
-    
-    @Test
-    public void test_242() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/requests/pending")
+                .post(baseUrlOfSut + "/news")
                 .then()
-                .statusCode(403)
+                .statusCode(400)
                 .assertThat()
-                .contentType("application/json")
-                .body("'status'", numberMatches(403.0))
-                .body("'error'", containsString("Forbidden"))
-                .body("'exception'", containsString("org.springframework.security.access.AccessDeniedException"))
-                .body("'message'", containsString("Access is denied"))
-                .body("'path'", containsString("/requests/pending"));
-    }
-    
-    
-    @Test
-    public void test_243() throws Exception {
+                .contentType("");
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/325")
+                .contentType("text/plain")
+                .body("fdZ")
+                .put(baseUrlOfSut + "/news/35/text")
                 .then()
                 .statusCode(404)
                 .assertThat()
                 .contentType("")
                 .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_244() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .put(baseUrlOfSut + "/consumer/subscribe")
+                .contentType("application/json")
+                .body(" { " + 
+                    " \"authorId\": \"h5\", " + 
+                    " \"newsId\": \"8\", " + 
+                    " \"text\": \"\" " + 
+                    " } ")
+                .put(baseUrlOfSut + "/news/fSykb6cBuY6_5e")
                 .then()
-                .statusCode(404)
+                .statusCode(409)
                 .assertThat()
                 .contentType("")
                 .body(isEmptyOrNullString());
@@ -11780,11 +1284,10 @@
     
     
     @Test
-    public void test_245() throws Exception {
+    public void test_22() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .post(baseUrlOfSut + "/consumer/subscribe")
+                .delete(baseUrlOfSut + "/news/378")
                 .then()
                 .statusCode(404)
                 .assertThat()
@@ -11794,11 +1297,15 @@
     
     
     @Test
-    public void test_246() throws Exception {
+    public void test_23() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/consumer/subscribe")
+                .contentType("application/json")
+                .body(" { " + 
+                    " \"authorId\": \"8eqSBLd5AoU\", " + 
+                    " \"country\": \"RgD4v\" " + 
+                    " } ")
+                .put(baseUrlOfSut + "/news/fVtsIRW250zA7")
                 .then()
                 .statusCode(404)
                 .assertThat()
@@ -11808,11 +1315,10 @@
     
     
     @Test
-    public void test_247() throws Exception {
+    public void test_24() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .delete(baseUrlOfSut + "/consumer/subscribe")
+                .get(baseUrlOfSut + "/news/iRnt")
                 .then()
                 .statusCode(404)
                 .assertThat()
@@ -11822,11 +1328,12 @@
     
     
     @Test
-    public void test_248() throws Exception {
+    public void test_25() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .patch(baseUrlOfSut + "/consumer/subscribe")
+                .contentType("text/plain")
+                .body("G9Xlax76_vDQfL")
+                .put(baseUrlOfSut + "/news/693/text")
                 .then()
                 .statusCode(404)
                 .assertThat()
@@ -11836,193 +1343,17 @@
     
     
     @Test
-    public void test_249() throws Exception {
-        List<InsertionDto> insertions = sql().insertInto("PRINTSHOPS", 292L)
-                .d("ADDRESS", "\"evomaster_55_input\"")
-                .d("AVG_RATING", "0.21")
-                .d("BALANCE_CURRENCY", "\"evomaster_56_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "570")
-                .d("BALANCE_INTEGER_PART", "-523756")
-                .d("LATITUDE", "1086921.1938694832")
-                .d("LOGO", "\"evomaster_57_input\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_34_input\"")
-                .d("NIF", "\"evomaster_35_input\"")
-            .and().insertInto("USERS", 291L)
-                .d("PASSWORD", "\"evomaster_58_input\"")
-                .d("USERNAME", "\"evomaster_36_input\"")
-            .and().insertInto("CONSUMERS", 290L)
-                .d("BALANCE_CURRENCY", "\"evomaster_37_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "677")
-                .d("NAME", "\"evomaster_38_input\"")
-                .d("ID", "7")
-            .and().insertInto("REVIEWS", 289L)
-                .d("DESCRIPTION", "\"q3u\"")
-                .d("RATING", "1049330")
-            .and().insertInto("PRINTSHOPS", 288L)
-                .d("ADDRESS", "\"evomaster_59_input\"")
-                .d("AVG_RATING", "0.064953166326509")
-                .d("BALANCE_CURRENCY", "\"evomaster_60_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "588")
-                .d("BALANCE_INTEGER_PART", "33554432")
-                .d("LATITUDE", "0.6")
-                .d("LOGO", "\"evomaster_61_input\"")
-                .d("LONGITUDE", "-12.054869431230674")
-                .d("NAME", "\"Lu\"")
-                .d("NIF", "\"evomaster_39_inputR\"")
-            .and().insertInto("USERS", 287L)
-                .d("PASSWORD", "\"evomaster_40_input\"")
-                .d("USERNAME", "\"evomaster_62_input\"")
-            .and().insertInto("CONSUMERS", 286L)
-                .d("BALANCE_CURRENCY", "\"evomaster_42_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-173")
-                .d("NAME", "\"evomaster_63_input\"")
-                .d("ID", "11")
-            .and().insertInto("REVIEWS", 285L)
-                .d("DESCRIPTION", "\"evomaster_64_input\"")
-                .d("RATING", "0")
-            .and().insertInto("PRINTSHOPS", 284L)
-                .d("ADDRESS", "\"evomaster_44_input\"")
-                .d("AVG_RATING", "0.80864356276")
-                .d("BALANCE_CURRENCY", "\"vgcLUJGm0xI\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "204")
-                .d("LATITUDE", "0.07109840999937045")
-                .d("LOGO", "\"UUoqUsteUUUU_UnUUU\"")
-                .d("LONGITUDE", "8.988465674311579E307")
-                .d("NAME", "\"evomaster_65_input\"")
-                .d("NIF", "\"evomaster_66_input\"")
-            .and().insertInto("USERS", 283L)
-                .d("PASSWORD", "\"xbHpyX\"")
-                .d("USERNAME", "\"Qejsh\"")
-            .and().insertInto("CONSUMERS", 282L)
-                .d("BALANCE_CURRENCY", "\"evomaster_46_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "805")
-                .d("BALANCE_INTEGER_PART", "87")
-                .d("NAME", "\"9AixuZJF7LE0VdSV\"")
-                .d("ID", "6")
-            .and().insertInto("REVIEWS", 281L)
-                .d("DESCRIPTION", "\"lSxxB7dL\"")
-                .d("RATING", "65618")
-            .and().insertInto("PRINTSHOPS", 280L)
-                .d("ADDRESS", "\"evomaster_67_input\"")
-                .d("AVG_RATING", "0.6098695326237782")
-                .d("BALANCE_CURRENCY", "\"evomaster_68_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "45")
-                .d("BALANCE_INTEGER_PART", "-2096374")
-                .d("LATITUDE", "0.6341782973686445")
-                .d("LOGO", "\"evomaster_50_input\"")
-                .d("LONGITUDE", "0.4757421946339674")
-                .d("NAME", "\"evomaster_69_input\"")
-                .d("NIF", "\"UXe\"")
-            .and().insertInto("USERS", 279L)
-                .d("PASSWORD", "\"evomaster_70_input\"")
-                .d("USERNAME", "\"oUsuPNNbx6Ct13Gq\"")
-            .and().insertInto("CONSUMERS", 278L)
-                .d("BALANCE_CURRENCY", "\"evomaster_53_input\"")
-                .d("BALANCE_FRACTIONAL_PART", "0")
-                .d("BALANCE_INTEGER_PART", "-3123")
-                .d("NAME", "\"evomaster_71_input\"")
-                .r("ID", 279L)
-            .and().insertInto("REVIEWS", 277L)
-                .d("DESCRIPTION", "\"evomaster_54_input\"")
-                .d("RATING", "1073741969")
-            .dtos();
-        controller.execInsertionsIntoDatabase(insertions);
+    public void test_26() throws Exception {
         
         given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/printshops/-536870911/reviews/268435456")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_250() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
                 .contentType("application/json")
                 .body(" { " + 
-                    " \"key_4\": \"iqce\" " + 
+                    " \"authorId\": \"8DldsWEP1Hg\", " + 
+                    " \"id\": \"x\", " + 
+                    " \"newsId\": \"ChqzUOjUE\", " + 
+                    " \"text\": \"nvyGVwsMFeooKOj4\" " + 
                     " } ")
-                .post(baseUrlOfSut + "/printshops/119/reviews")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_251() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/printshops/771/reviews")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_252() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .delete(baseUrlOfSut + "/printshops/126/reviews/539")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_253() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .head(baseUrlOfSut + "/consumer/subscribe")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_254() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic am9hbzoxMjM0") // consumer
-                .put(baseUrlOfSut + "/printshops/1/reviews/518")
-                .then()
-                .statusCode(404)
-                .assertThat()
-                .contentType("")
-                .body(isEmptyOrNullString());
-    }
-    
-    
-    @Test
-    public void test_255() throws Exception {
-        
-        given().accept("*/*")
-                .header("Authorization", "Basic bWFmYWxkYToxMjM0") // employee
-                .get(baseUrlOfSut + "/documents/360")
+                .put(baseUrlOfSut + "/news/THZn")
                 .then()
                 .statusCode(404)
                 .assertThat()
Index: core/src/main/kotlin/org/evomaster/core/search/gene/regex/DisjunctionRxGene.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/gene/regex/DisjunctionRxGene.kt	(date 1600238653755)
+++ core/src/main/kotlin/org/evomaster/core/search/gene/regex/DisjunctionRxGene.kt	(date 1600238653755)
@@ -132,9 +132,16 @@
         if (other !is DisjunctionRxGene) {
             throw IllegalArgumentException("Invalid gene type ${other.javaClass}")
         }
-        for (i in 0 until terms.size) {
-            if (!this.terms[i].containsSameValueAs(other.terms[i])) {
-                return false
+
+        //TODO Man: Andrea, please check this code
+        if (terms.size != other.terms.size) return false
+
+        //Man: if terms is empty, there throws IndexOutOfBoundsException (found by rest-scs case study)
+        if (terms.isNotEmpty()){
+            for (i in 0 until terms.size) {
+                if (!this.terms[i].containsSameValueAs(other.terms[i])) {
+                    return false
+                }
             }
         }
 
Index: core/src/main/kotlin/org/evomaster/core/search/gene/Gene.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/gene/Gene.kt	(date 1600260338928)
+++ core/src/main/kotlin/org/evomaster/core/search/gene/Gene.kt	(date 1600260338928)
@@ -119,9 +119,14 @@
             val selected = selectSubset(internalGenes, randomness, apc, mwc, allGenes, internalGeneSelectionStrategy, enableAdaptiveGeneMutation, additionalGeneMutationInfo)
 
             selected.forEach{
+                var mutateCounter = 0
                 do {
                     it.first.standardMutation(randomness, apc, mwc, allGenes, internalGeneSelectionStrategy, enableAdaptiveGeneMutation, it.second)
-                }while (!mutationCheck())
+                    mutateCounter +=1
+                }while (!mutationCheck() && mutateCounter <=3)
+                if (!mutationCheck()){
+                    GeneUtils.repairGenes(listOf(this))
+                }
             }
         }
     }
Index: core/src/main/kotlin/org/evomaster/core/search/gene/EnumGene.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/gene/EnumGene.kt	(date 1600095677035)
+++ core/src/main/kotlin/org/evomaster/core/search/gene/EnumGene.kt	(date 1600095677035)
@@ -99,8 +99,6 @@
         val next = (index+1) % values.size
         index = next
         return true
-
-        //throw IllegalArgumentException("impact is null or not EnumGeneImpact")
     }
 
 
Index: core/src/main/kotlin/org/evomaster/core/search/gene/LongGene.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/gene/LongGene.kt	(date 1600257081941)
+++ core/src/main/kotlin/org/evomaster/core/search/gene/LongGene.kt	(date 1600257081941)
@@ -5,6 +5,7 @@
 import org.evomaster.core.search.service.Randomness
 import org.evomaster.core.search.service.mutator.MutationWeightControl
 import org.evomaster.core.search.service.mutator.genemutation.AdditionalGeneMutationInfo
+import org.evomaster.core.search.service.mutator.genemutation.DifferentGeneInHistory
 import org.evomaster.core.search.service.mutator.genemutation.SubsetGeneSelectionStrategy
 
 
@@ -41,12 +42,14 @@
         if (enableAdaptiveGeneMutation){
             additionalGeneMutationInfo?:throw IllegalArgumentException("additional gene mutation info shouldnot be null when adaptive gene mutation is enabled")
             if (additionalGeneMutationInfo.hasHistory()){
-                additionalGeneMutationInfo.archiveGeneMutator.historyBasedValueMutation(
-                        additionalGeneMutationInfo,
-                        this,
-                        allGenes
-                )
-                return true
+                try {
+                    additionalGeneMutationInfo.archiveGeneMutator.historyBasedValueMutation(
+                            additionalGeneMutationInfo,
+                            this,
+                            allGenes
+                    )
+                    return true
+                }catch (e: DifferentGeneInHistory){}
             }
         }
 
Index: core/src/main/kotlin/org/evomaster/core/search/gene/FloatGene.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/gene/FloatGene.kt	(date 1600257069764)
+++ core/src/main/kotlin/org/evomaster/core/search/gene/FloatGene.kt	(date 1600257069764)
@@ -5,6 +5,7 @@
 import org.evomaster.core.search.service.Randomness
 import org.evomaster.core.search.service.mutator.MutationWeightControl
 import org.evomaster.core.search.service.mutator.genemutation.AdditionalGeneMutationInfo
+import org.evomaster.core.search.service.mutator.genemutation.DifferentGeneInHistory
 import org.evomaster.core.search.service.mutator.genemutation.SubsetGeneSelectionStrategy
 import java.math.BigDecimal
 import java.math.RoundingMode
@@ -26,12 +27,14 @@
         if (enableAdaptiveGeneMutation){
             additionalGeneMutationInfo?:throw IllegalArgumentException("additional gene mutation info shouldnot be null when adaptive gene mutation is enabled")
             if (additionalGeneMutationInfo.hasHistory()){
-                additionalGeneMutationInfo.archiveGeneMutator.historyBasedValueMutation(
-                        additionalGeneMutationInfo,
-                        this,
-                        allGenes
-                )
-                return true
+                try {
+                    additionalGeneMutationInfo.archiveGeneMutator.historyBasedValueMutation(
+                            additionalGeneMutationInfo,
+                            this,
+                            allGenes
+                    )
+                    return true
+                }catch (e: DifferentGeneInHistory){}
             }
         }
 
Index: core/src/main/kotlin/org/evomaster/core/search/gene/DoubleGene.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/gene/DoubleGene.kt	(date 1600257055638)
+++ core/src/main/kotlin/org/evomaster/core/search/gene/DoubleGene.kt	(date 1600257055638)
@@ -6,6 +6,7 @@
 import org.evomaster.core.search.service.Randomness
 import org.evomaster.core.search.service.mutator.MutationWeightControl
 import org.evomaster.core.search.service.mutator.genemutation.AdditionalGeneMutationInfo
+import org.evomaster.core.search.service.mutator.genemutation.DifferentGeneInHistory
 import org.evomaster.core.search.service.mutator.genemutation.SubsetGeneSelectionStrategy
 import java.math.BigDecimal
 import java.math.RoundingMode
@@ -28,12 +29,15 @@
         if (enableAdaptiveGeneMutation){
             additionalGeneMutationInfo?:throw IllegalArgumentException("additional gene mutation info shouldnot be null when adaptive gene mutation is enabled")
             if (additionalGeneMutationInfo.hasHistory()){
-                additionalGeneMutationInfo.archiveGeneMutator.historyBasedValueMutation(
-                        additionalGeneMutationInfo,
-                        this,
-                        allGenes
-                )
-                return true
+                try {
+                    additionalGeneMutationInfo.archiveGeneMutator.historyBasedValueMutation(
+                            additionalGeneMutationInfo,
+                            this,
+                            allGenes
+                    )
+                    return true
+                }catch (e : DifferentGeneInHistory){}
+
             }
         }
 
Index: core/src/main/kotlin/org/evomaster/core/search/gene/IntegerGene.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/gene/IntegerGene.kt	(date 1600257081937)
+++ core/src/main/kotlin/org/evomaster/core/search/gene/IntegerGene.kt	(date 1600257081937)
@@ -6,6 +6,7 @@
 import org.evomaster.core.search.service.Randomness
 import org.evomaster.core.search.service.mutator.MutationWeightControl
 import org.evomaster.core.search.service.mutator.genemutation.AdditionalGeneMutationInfo
+import org.evomaster.core.search.service.mutator.genemutation.DifferentGeneInHistory
 import org.evomaster.core.search.service.mutator.genemutation.SubsetGeneSelectionStrategy
 
 
@@ -73,12 +74,14 @@
         if (enableAdaptiveGeneMutation){
             additionalGeneMutationInfo?:throw IllegalArgumentException("additional gene mutation info shouldnot be null when adaptive gene mutation is enabled")
             if (additionalGeneMutationInfo.hasHistory()){
-                additionalGeneMutationInfo.archiveGeneMutator.historyBasedValueMutation(
-                        additionalGeneMutationInfo,
-                        this,
-                        allGenes
-                )
-                return true
+                try {
+                    additionalGeneMutationInfo.archiveGeneMutator.historyBasedValueMutation(
+                            additionalGeneMutationInfo,
+                            this,
+                            allGenes
+                    )
+                    return true
+                }catch (e: DifferentGeneInHistory){}
             }
         }
 
Index: core/src/main/kotlin/org/evomaster/core/search/impact/impactinfocollection/ImpactUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/impact/impactinfocollection/ImpactUtils.kt	(date 1600191375995)
+++ core/src/main/kotlin/org/evomaster/core/search/impact/impactinfocollection/ImpactUtils.kt	(date 1600191375995)
@@ -231,11 +231,16 @@
          * find a gene that has the same with [gene], but different value
          * @param gene is one of root genes of [action]
          */
-        fun findMutatedGene(action: Action, gene : Gene) : Gene?{
+        fun findMutatedGene(action: Action, gene : Gene, includeSameValue : Boolean = false) : Gene?{
+            return findMutatedGene(action.seeGenes(), gene, includeSameValue)
+        }
+
+
+        fun findMutatedGene(genes: List<Gene>, gene : Gene, includeSameValue : Boolean = false) : Gene?{
             val template = ParamUtil.getValueGene(gene)
-            return action.seeGenes().filter {o->
+            return genes.filter {o->
                 val g = ParamUtil.getValueGene(o)
-                g.name == template.name && g::class.java.simpleName == template::class.java.simpleName && g.containsSameValueAs(template)
+                g.name == template.name && g::class.java.simpleName == template::class.java.simpleName && (includeSameValue || !g.containsSameValueAs(template))
             }.also {
                 if (it.size > 1)
                     log.warn("{} genes have been mutated with the name {},",it.size, gene.name)
Index: core/src/main/kotlin/org/evomaster/core/search/tracer/TraceableElement.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/tracer/TraceableElement.kt	(date 1600248959086)
+++ core/src/main/kotlin/org/evomaster/core/search/tracer/TraceableElement.kt	(date 1600248959086)
@@ -49,7 +49,8 @@
 
     fun <T: TraceableElement> wrapWithTracking(evaluatedResult: EvaluatedMutation?, trackingHistory: TrackingHistory<T>?){
         wrapped()
-        this.evaluatedResult = evaluatedResult
+        if (this.evaluatedResult == null || evaluatedResult!=null)
+            this.evaluatedResult = evaluatedResult
         this.tracking = trackingHistory
     }
 
Index: core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/mutationupdate/LongMutationUpdate.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/mutationupdate/LongMutationUpdate.kt	(date 1600374466850)
+++ core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/mutationupdate/LongMutationUpdate.kt	(date 1600374466850)
@@ -25,7 +25,7 @@
         return (preferMin/2.0 + preferMax/2.0).toLong()
     }
 
-    override fun random(apc: AdaptiveParameterControl, randomness: Randomness, current: Long, probOfMiddle: Double, start: Int, end: Int): Long {
+    override fun random(apc: AdaptiveParameterControl, randomness: Randomness, current: Long, probOfMiddle: Double, start: Int, end: Int, minimalTimeForUpdate: Int): Long {
         var c = current
         if (randomness.nextBoolean(probOfMiddle)) {
             val middle = middle()
@@ -43,13 +43,21 @@
     }
 
     override fun compareTo(other: LongMutationUpdate): Int {
-        return (-candidatesBoundary() + other.candidatesBoundary()).toInt()
+        val result = try{
+            Math.subtractExact(other.candidatesBoundary(), candidatesBoundary())
+        }catch (e : ArithmeticException) {
+            return other.candidatesBoundary().compareTo(candidatesBoundary())
+        }
+        return if (result > Int.MAX_VALUE.toLong()) Int.MAX_VALUE else if (result < Int.MIN_VALUE.toLong()) Int.MIN_VALUE else result.toInt()
     }
 
     override fun candidatesBoundary(): Long {
-        if(preferMax == Long.MAX_VALUE) return  Long.MAX_VALUE
-        //FIXME
-        return (preferMax - preferMin).also {
+        val range = try {
+            Math.subtractExact(preferMax, preferMin)
+        }catch (e : ArithmeticException){
+            return  Long.MAX_VALUE
+        }
+        return range.also {
             if (it < 0) throw IllegalStateException("preferMax < preferMin: $preferMax, $preferMin")
         }
     }
@@ -60,10 +68,18 @@
         latest?:return
         if (current == latest) return
         val value = latest!!/2.0 + current/2.0
-        if ( (doesCurrentBetter && current > latest!!) || (!doesCurrentBetter && current < latest!!)){
-            preferMin = if (value < preferMax) value.toLong()+1L else value.toLong()
-        }else
-            preferMax = value.toLong()
+        val updateMin = (doesCurrentBetter && current > latest!!) || (!doesCurrentBetter && current < latest!!)
+        if (updateMin){
+            preferMin = if (value > preferMax) {
+                if (value.toLong()+1L > preferMax) preferMax
+                else value.toLong()+1L
+            } else value.toLong()
+        }else{
+            preferMax = if(value < preferMin) {
+                if(value.toLong() +1L < preferMin) preferMin
+                else value.toLong() +1L
+            } else value.toLong()
+        }
         updateTimes +=1
     }
 }
\ No newline at end of file
Index: core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/mutationupdate/DoubleMutationUpdate.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/mutationupdate/DoubleMutationUpdate.kt	(date 1600374484421)
+++ core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/mutationupdate/DoubleMutationUpdate.kt	(date 1600374484421)
@@ -23,7 +23,7 @@
 
     override fun middle(): Double = preferMin/2.0 + preferMax/2.0
 
-    override fun random(apc: AdaptiveParameterControl, randomness: Randomness, current: Double, probOfMiddle: Double, start: Int, end: Int): Double {
+    override fun random(apc: AdaptiveParameterControl, randomness: Randomness, current: Double, probOfMiddle: Double, start: Int, end: Int, minimalTimeForUpdate: Int): Double {
         if(randomness.nextBoolean(probOfMiddle)) {
             val m = middle()
             if (m != current) return m
@@ -42,7 +42,11 @@
     override fun copy(): DoubleMutationUpdate = DoubleMutationUpdate(preferMin, preferMax, updateTimes, counter, reached, latest, preferMin, preferMax)
 
     override fun candidatesBoundary(): Double {
-        return (preferMax - preferMin).also {
+        val result = preferMax - preferMin
+        if (Double.NEGATIVE_INFINITY == result || result == Double.NaN || result == Double.NEGATIVE_INFINITY)
+            return Long.MAX_VALUE.toDouble()
+
+        return result.also {
             if (it < 0) throw IllegalStateException("preferMax < preferMin: $preferMax, $preferMin")
         }
     }
@@ -54,9 +58,9 @@
         val value = latest!!/2.0 + current/2.0
         updateCounter(doesCurrentBetter)
         if ( (doesCurrentBetter && current > latest!!) || (!doesCurrentBetter && current < latest!!)){
-            preferMin = value
+            preferMin = if(value > preferMax) preferMax else value
         }else
-            preferMax = value
+            preferMax = if(value < preferMin) preferMin else value
         updateTimes +=1
     }
 }
\ No newline at end of file
Index: core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/mutationupdate/MutationBoundaryUpdate.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/mutationupdate/MutationBoundaryUpdate.kt	(date 1600247618850)
+++ core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/mutationupdate/MutationBoundaryUpdate.kt	(date 1600247618850)
@@ -31,7 +31,7 @@
     fun isReached(current : T) : Boolean = preferMin == preferMax && preferMin == current
 
     abstract fun middle() : T
-    abstract fun random(apc: AdaptiveParameterControl, randomness: Randomness, current: T, probOfMiddle : Double, start: Int, end: Int) : T
+    abstract fun random(apc: AdaptiveParameterControl, randomness: Randomness, current: T, probOfMiddle : Double, start: Int, end: Int, minimalTimeForUpdate: Int) : T
 
     abstract fun doReset(current : T, doesCurrentBetter: Boolean) : Boolean
     abstract fun updateBoundary(current: T, doesCurrentBetter : Boolean)
@@ -45,6 +45,15 @@
         updateCounter(doesCurrentBetter)
         latest = current
     }
+
+    fun updateOrRestBoundary(history : List<Pair<T, Boolean>>){
+        (0 until history.size).forEach {i->
+            updateOrRestBoundary(
+                    current = history[i].first,
+                    doesCurrentBetter = history[i].second
+            )
+        }
+    }
 }
 
 
Index: core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/ArchiveGeneMutator.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/ArchiveGeneMutator.kt	(date 1600374230779)
+++ core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/ArchiveGeneMutator.kt	(date 1600374230779)
@@ -63,11 +63,14 @@
     fun historyBasedValueMutation(additionalGeneMutationInfo: AdditionalGeneMutationInfo, gene: Gene, allGenes: List<Gene>) {
         val history = manageHistory(additionalGeneMutationInfo, additionalGeneMutationInfo.targets)
         when (gene) {
-            is StringGene -> deriveMutatorForStringValue(history, gene, allGenes)
+            is StringGene -> {
+                val applied = deriveMutatorForStringValue(history, gene, allGenes)
+                if (!applied) gene.standardValueMutation(randomness, allGenes, apc)
+            }
             is IntegerGene -> gene.value = sampleValue(
                     history = history.map {
                         ((it.first as? IntegerGene)
-                                ?: throw IllegalArgumentException("element in history has different type, ie, ${it.first::class.java.simpleName}")
+                                ?: throw DifferentGeneInHistory(gene, it.first)
                                 ).value.toLong() to (it.second.result?.isEffective() == true)
                     },
                     value = gene.value.toLong(),
@@ -76,7 +79,8 @@
             ).toInt()
             is LongGene -> gene.value =  sampleValue(
                     history = history.map {
-                        ((it.first as? LongGene)?: throw IllegalArgumentException(" ")).value to (it.second.result?.isEffective() == true)
+                        ((it.first as? LongGene)
+                                ?: throw DifferentGeneInHistory(gene, it.first)).value to (it.second.result?.isEffective() == true)
                     },
                     value = gene.value,
                     valueUpdate = LongMutationUpdate(min = Long.MIN_VALUE, max = Long.MAX_VALUE),
@@ -84,7 +88,7 @@
             )
             is DoubleGene -> gene.value =  sampleValue(
                     history = history.map {
-                        ((it.first as? DoubleGene)?: throw IllegalArgumentException(" ")).value to (it.second.result?.isEffective() == true)
+                        ((it.first as? DoubleGene)?: throw DifferentGeneInHistory(gene, it.first)).value to (it.second.result?.isEffective() == true)
                     },
                     value = gene.value,
                     valueUpdate = DoubleMutationUpdate(min = Double.MIN_VALUE, max = Double.MAX_VALUE),
@@ -92,7 +96,7 @@
             )
             is FloatGene -> gene.value = sampleValue(
                     history = history.map {
-                        ((it.first as? FloatGene)?: throw IllegalArgumentException(" ")).value.toDouble() to (it.second.result?.isEffective() == true)
+                        ((it.first as? FloatGene)?: throw DifferentGeneInHistory(gene, it.first)).value.toDouble() to (it.second.result?.isEffective() == true)
                     },
                     value = gene.value.toDouble(),
                     valueUpdate = DoubleMutationUpdate(min = Float.MIN_VALUE.toDouble(), max = Float.MAX_VALUE.toDouble()),
@@ -123,13 +127,14 @@
                 current = value,
                 probOfMiddle = probOfMiddle(valueUpdate),
                 start = start,
-                end = end
+                end = end,
+                minimalTimeForUpdate = 5
         )
     }
 
     /**************************** String Gene ********************************************/
 
-    private fun deriveMutatorForStringValue(history : List<Pair<Gene, EvaluatedInfo>>, gene: StringGene, allGenes: List<Gene>) {
+    private fun deriveMutatorForStringValue(history : List<Pair<Gene, EvaluatedInfo>>, gene: StringGene, allGenes: List<Gene>) : Boolean{
         val others = allGenes.flatMap { it.flatView() }
                 .filterIsInstance<StringGene>()
                 .map { it.getValueAsRawString() }
@@ -158,12 +163,35 @@
 
         val p = randomness.nextDouble()
         val pOfLen = apc.getExploratoryValue(0.6, 0.2)
-        when{
-            p < 0.02 && others.isNotEmpty() -> gene.value = randomness.choose(others)
-            lenMutationUpdate.isReached(gene.value.length.toLong()) || (p < (1.0 - pOfLen) && gene.value.isNotBlank()) -> mutateChars(charsMutationUpdate, gene)
-            gene.value.isBlank() || (p < (1.0 - pOfLen/2.0) && gene.value.length < gene.maxLength) -> gene.value += randomness.nextWordChar()
-            else -> gene.value = gene.value.dropLast(1)
+        val pLength = lenMutationUpdate.random(
+                apc = apc,
+                randomness = randomness,
+                current = gene.value.length.toLong(),
+                probOfMiddle = probOfMiddle(lenMutationUpdate),
+                start = 6,
+                end = 3,
+                minimalTimeForUpdate = 2
+        )
+
+        val anyCharToMutate = charsMutationUpdate.filterIndexed {
+            index, longMutationUpdate -> !longMutationUpdate.isReached(gene.value[index].toLong()) }.isNotEmpty() && charsMutationUpdate.isNotEmpty()
+        if (!anyCharToMutate && lenMutationUpdate.isReached(gene.value.length.toLong())) return false
+
+        if (p < 0.02 && others.isNotEmpty()){
+            gene.value = randomness.choose(others)
+            return true
+        }
+
+        if (lenMutationUpdate.isReached(gene.value.length.toLong()) || (p < (1.0 - pOfLen) && anyCharToMutate && gene.value.isNotBlank())){
+            return mutateChars(charsMutationUpdate, gene)
         }
+        val append = pLength.toInt() > gene.value.length || (pLength.toInt() == gene.value.length && p < 1.0 - pOfLen/2.0)
+        if (append){
+            gene.value += randomness.nextWordChar() //(0 until (pLength.toInt() - gene.value.length)).map {randomness.nextWordChar()}.joinToString("")
+        }else{
+            gene.value = gene.value.dropLast(1)
+        }
+        return true
     }
 
     /**
@@ -172,12 +200,13 @@
      * @param charsMutationUpdate collects the candidates
      * @param gene that is String to mutate
      */
-    private fun mutateChars(charsMutationUpdate : List<LongMutationUpdate>, gene : StringGene) {
+    private fun mutateChars(charsMutationUpdate : List<LongMutationUpdate>, gene : StringGene) : Boolean {
         val weightsMap = charsMutationUpdate.mapIndexed { index, intMutationUpdate ->
             index to intMutationUpdate
         }.filter{ !it.second.isReached(gene.value[it.first].toLong()) }.map { it.first to it.second.candidatesBoundary().toDouble() }.toMap()
         if (weightsMap.isEmpty()) {
             log.warn("none of chars to select for the mutation")
+            return false
         }
 
         val chars = mwc.selectSubsetWithWeight(weightsMap, true, mwc.getNGeneToMutate(weightsMap.size, 1))
@@ -188,10 +217,12 @@
                     apc = apc,
                     start = 6,
                     end = 3,
-                    probOfMiddle = probOfMiddle(charsMutationUpdate[it])
+                    probOfMiddle = probOfMiddle(charsMutationUpdate[it]),
+                    minimalTimeForUpdate = 3
             ).toChar()
             gene.value = modifyIndex(gene.value, index = it, char = mc)
         }
+        return true
     }
 
     fun mutateStringGene(
Index: core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/DifferentGeneInHistory.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/DifferentGeneInHistory.kt	(date 1600256996480)
+++ core/src/main/kotlin/org/evomaster/core/search/service/mutator/genemutation/DifferentGeneInHistory.kt	(date 1600256996480)
@@ -0,0 +1,9 @@
+package org.evomaster.core.search.service.mutator.genemutation
+
+import org.evomaster.core.search.gene.Gene
+
+/**
+ * created by manzh on 2020-09-16
+ */
+class DifferentGeneInHistory(gene: Gene, geneInHistory: Gene)
+    : IllegalArgumentException("gene is ${gene::class.java.simpleName} but its was ${geneInHistory::class.java.simpleName}")
\ No newline at end of file
Index: core/src/main/kotlin/org/evomaster/core/search/service/mutator/StandardMutator.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/service/mutator/StandardMutator.kt	(date 1600191418644)
+++ core/src/main/kotlin/org/evomaster/core/search/service/mutator/StandardMutator.kt	(date 1600191418644)
@@ -196,12 +196,12 @@
      * @param targets is a set of targets to cover
      * @param mutatedGene contains what genes are mutated in this mutation
      */
-    private fun mutationConfiguration(
+    fun mutationConfiguration(
             gene: Gene, individual: T,
             eval : EvaluatedIndividual<T>,
             enableAGS : Boolean,
             enableAGM: Boolean,
-            targets: Set<Int>, mutatedGene: MutatedGeneSpecification?) : AdditionalGeneMutationInfo?{
+            targets: Set<Int>, mutatedGene: MutatedGeneSpecification?, includeSameValue : Boolean = false) : AdditionalGeneMutationInfo?{
 
         val isDb = individual.seeInitializingActions().any { it.seeGenes().contains(gene) }
 
@@ -210,10 +210,10 @@
         } catch (e: Exception){
             "exception"
         }
-        val position = if (isDb){
-            individual.seeInitializingActions().indexOfFirst { it.seeGenes().contains(gene) }
-        } else{
-            individual.seeActions().indexOfFirst { it.seeGenes().contains(gene) }
+        val position = when {
+            individual.seeActions(isDb).isEmpty() -> individual.seeGenes().indexOf(gene)
+            isDb -> individual.seeInitializingActions().indexOfFirst { it.seeGenes().contains(gene) }
+            else -> individual.seeActions().indexOfFirst { it.seeGenes().contains(gene) }
         }
 
         mutatedGene?.addMutatedGene(isDb, valueBeforeMutation = value, gene = gene, position = position)
@@ -231,30 +231,44 @@
                 TODO might conduct further experiment on the 'maxlengthOfHistoryForAGM'?
              */
             val effective = eval.getLast<EvaluatedIndividual<T>>(config.maxlengthOfHistoryForAGM, EvaluatedMutation.range(min = EvaluatedMutation.BETTER_THAN.value)).filter {
-                it.individual.seeActions(isDb).size > position &&
-                        it.individual.seeActions(isDb)[position].getName() == individual.seeActions(isDb)[position].getName()
+                it.individual.seeActions(isDb).isEmpty() ||
+                        (it.individual.seeActions(isDb).size > position && it.individual.seeActions(isDb)[position].getName() == individual.seeActions(isDb)[position].getName())
             }
             val history = eval.getLast<EvaluatedIndividual<T>>(config.maxlengthOfHistoryForAGM, EvaluatedMutation.range()).filter {
-                it.individual.seeActions(isDb).size > position &&
-                        it.individual.seeActions(isDb)[position].getName() == individual.seeActions(isDb)[position].getName()
+                it.individual.seeActions(isDb).isEmpty() ||
+                        (it.individual.seeActions(isDb).size > position && it.individual.seeActions(isDb)[position].getName() == individual.seeActions(isDb)[position].getName())
             }
 
 
             additionInfo!!.effectiveHistory.addAll(effective.mapNotNull {
-                ImpactUtils.findMutatedGene(
-                        it.individual.seeActions(isDb)[position], gene)
+                if (it.individual.seeActions(isDb).isEmpty())
+                    ImpactUtils.findMutatedGene(it.individual.seeGenes(), gene, includeSameValue)
+                else
+                    ImpactUtils.findMutatedGene(
+                        it.individual.seeActions(isDb)[position], gene, includeSameValue)
             })
 
             additionInfo.history.addAll(history.mapNotNull {e->
-                ImpactUtils.findMutatedGene(
-                        e.individual.seeActions(isDb)[position], gene)?.run {
-                    this to EvaluatedInfo(
-                            index =  e.index,
-                            result = e.evaluatedResult,
-                            targets = e.fitness.getViewOfData().keys,
-                            specificTargets = if (!isDb) e.fitness.getTargetsByAction(position) else setOf()
-                    )
-                }
+                if (e.individual.seeActions(isDb).isEmpty())
+                    ImpactUtils.findMutatedGene(
+                           e.individual.seeGenes(), gene, includeSameValue)?.run {
+                        this to EvaluatedInfo(
+                                index =  e.index,
+                                result = e.evaluatedResult,
+                                targets = e.fitness.getViewOfData().keys,
+                                specificTargets = if (!isDb) e.fitness.getTargetsByAction(position) else setOf()
+                        )
+                    }
+                else
+                    ImpactUtils.findMutatedGene(
+                            e.individual.seeActions(isDb)[position], gene, includeSameValue)?.run {
+                        this to EvaluatedInfo(
+                                index =  e.index,
+                                result = e.evaluatedResult,
+                                targets = e.fitness.getViewOfData().keys,
+                                specificTargets = if (!isDb) e.fitness.getTargetsByAction(position) else setOf()
+                        )
+                    }
             })
         }
 
Index: core/src/main/kotlin/org/evomaster/core/search/service/mutator/MutationWeightControl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/kotlin/org/evomaster/core/search/service/mutator/MutationWeightControl.kt	(date 1600205067453)
+++ core/src/main/kotlin/org/evomaster/core/search/service/mutator/MutationWeightControl.kt	(date 1600205067453)
@@ -103,9 +103,10 @@
     fun <T>selectSubsetWithWeight(weights : Map<T, Double>, forceNotEmpty: Boolean, numToMutate : Double) : List<T>{
         if (weights.isEmpty()) throw IllegalArgumentException("Cannot select with an empty list")
         if (weights.size == 1) return weights.keys.toList()
-        val results  = mutableListOf<T>()
-        do {
-            val sw = weights.values.sum()
+        val sw = weights.values.sum()
+        if (sw == 0.0) return randomness.choose(weights.keys.toList(), 1)
+        val results  = mutableListOf<T>()
+        do {
             val size = weights.size
             weights.keys.forEach { g->
                 val m = calculatedAdaptiveMutationRate(size, config.d, numToMutate, sw, weights.getValue(g))
Index: core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/StringGeneMutationUpdate.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/StringGeneMutationUpdate.kt	(date 1600248913380)
+++ core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/StringGeneMutationUpdate.kt	(date 1600248913380)
@@ -0,0 +1,142 @@
+package org.evomaster.core.search.impact.genemutation.archivemutationinfo
+
+import com.google.inject.Injector
+import com.google.inject.Key
+import com.google.inject.Module
+import com.google.inject.TypeLiteral
+import com.netflix.governator.guice.LifecycleInjector
+import org.evomaster.core.BaseModule
+import org.evomaster.core.EMConfig
+import org.evomaster.core.search.EvaluatedIndividual
+import org.evomaster.core.search.algorithms.MioAlgorithm
+import org.evomaster.core.search.gene.IntegerGene
+import org.evomaster.core.search.gene.StringGene
+import org.evomaster.core.search.matchproblem.*
+import org.evomaster.core.search.service.Archive
+import org.evomaster.core.search.service.mutator.EvaluatedMutation
+import org.evomaster.core.search.service.mutator.MutatedGeneSpecification
+import org.evomaster.core.search.service.mutator.StandardMutator
+import org.evomaster.core.search.service.mutator.genemutation.AdditionalGeneMutationInfo
+import org.evomaster.core.search.service.mutator.genemutation.ArchiveGeneMutator
+import org.evomaster.core.search.service.mutator.genemutation.mutationupdate.LongMutationUpdate
+import org.evomaster.core.search.tracer.ArchiveMutationTrackService
+import org.evomaster.core.search.tracer.TrackingHistory
+import org.junit.jupiter.api.BeforeEach
+import org.junit.jupiter.api.Test
+import org.junit.jupiter.api.Assertions.*
+
+/**
+ * created by manzh on 2020-09-10
+ */
+class StringGeneMutationUpdate {
+
+    private lateinit var config: EMConfig
+    private lateinit var mio: MioAlgorithm<PrimitiveTypeMatchIndividual>
+    private lateinit var mutator : StandardMutator<PrimitiveTypeMatchIndividual>
+    private lateinit var sampler : PrimitiveTypeMatchSampler
+    private lateinit var ff: PrimitiveTypeMatchFitness
+
+    private lateinit var archive : Archive<PrimitiveTypeMatchIndividual>
+    private lateinit var agm : ArchiveGeneMutator
+    private lateinit var tracker : ArchiveMutationTrackService
+
+    private val budget = 300
+
+    @BeforeEach
+    fun init(){
+        val injector: Injector = LifecycleInjector.builder()
+                .withModules(* arrayOf<Module>(PrimitiveTypeMatchModule(), BaseModule()))
+                .build().createInjector()
+
+        mio = injector.getInstance(Key.get(
+                object : TypeLiteral<MioAlgorithm<PrimitiveTypeMatchIndividual>>() {}))
+
+        config = injector.getInstance(EMConfig::class.java)
+        config.maxActionEvaluations = budget
+        config.stoppingCriterion = EMConfig.StoppingCriterion.FITNESS_EVALUATIONS
+        config.probOfRandomSampling = 0.0
+
+        sampler = injector.getInstance(PrimitiveTypeMatchSampler::class.java)
+        sampler.template = PrimitiveTypeMatchIndividual.stringTemplate()
+
+        ff = injector.getInstance(PrimitiveTypeMatchFitness::class.java)
+        ff.type = ONE2M.ONE_EQUAL_WITH_ONE
+        archive = injector.getInstance(Key.get(object : TypeLiteral<Archive<PrimitiveTypeMatchIndividual>>(){}))
+        mutator = injector.getInstance( Key.get(object : TypeLiteral<StandardMutator<PrimitiveTypeMatchIndividual>>(){}))
+        tracker = injector.getInstance(ArchiveMutationTrackService::class.java)
+
+        agm = injector.getInstance(ArchiveGeneMutator::class.java)
+
+        config.enableTrackEvaluatedIndividual = true
+        config.probOfArchiveMutation = 1.0
+        config.weightBasedMutationRate = true
+
+        config.maxLengthOfTraces = 10
+        config.maxlengthOfHistoryForAGM = 10
+    }
+
+    @Test
+    fun testHistoryExtraction(){
+        config.archiveGeneMutation = EMConfig.ArchiveGeneMutation.NONE
+
+        val first = ff.calculateCoverage(sampler.sample())!!.also { archive.addIfNeeded(it) }
+
+        val mutated = mutator.mutateAndSave(10, first, archive)
+
+        assertNotNull(mutated.tracking)
+        assertEquals(10, mutated.tracking!!.history.size)
+
+        val copy = mutated.copy(tracker.getCopyFilterForEvalInd(mutated))
+        val ind = copy.individual.copy() as PrimitiveTypeMatchIndividual
+
+        assertEquals(1, ind.seeGenes().size)
+        val geneToMutate = ind.seeGenes().first()
+
+        val mutationInfo = MutatedGeneSpecification()
+
+        val additionalInfo = mutator.mutationConfiguration(
+                gene = geneToMutate, individual = ind,
+                eval = copy, enableAGS = true, enableAGM = true,
+                targets = archive.notCoveredTargets(),  mutatedGene = mutationInfo, includeSameValue = true)
+
+        assertNotNull(additionalInfo)
+        assertEquals(10, additionalInfo!!.history.size)
+    }
+
+
+    @Test
+    fun testMutationUpdate(){
+        val template = PrimitiveTypeMatchIndividual.stringTemplate()
+        val specified = listOf("","a","ax","bx","bg","be","bc","ba","bax")
+        val history = mutableListOf<EvaluatedIndividual<PrimitiveTypeMatchIndividual>>()
+        specified.forEach {
+            val ind = template.copy() as PrimitiveTypeMatchIndividual
+            (ind.gene as StringGene).value = it
+            val eval = ff.calculateCoverage(ind, archive.notCoveredTargets())
+            assertNotNull(eval)
+            val er = if(history.isNotEmpty()){
+                mutator.evaluateMutation(
+                        mutated = history.last(),
+                        current = eval!!,
+                        archive = archive,
+                        targets = archive.notCoveredTargets()
+                ).apply {
+                    assertEquals(EvaluatedMutation.BETTER_THAN, this)
+                }
+            }else{
+                EvaluatedMutation.UNSURE
+            }
+
+            eval!!.wrapWithEvaluatedResults(er)
+            history.add(eval)
+        }
+
+        val current = (history.last().copy(tracker.getCopyFilterForEvalInd(history.last())))
+        val th = TrackingHistory<EvaluatedIndividual<PrimitiveTypeMatchIndividual>>(config.maxLengthOfTraces)
+        th.history.addAll(history)
+        current.wrapWithTracking(null, th)
+
+
+    }
+
+}
\ No newline at end of file
Index: core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/IntegerGeneMutationUpdate.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/IntegerGeneMutationUpdate.kt	(date 1600245269775)
+++ core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/IntegerGeneMutationUpdate.kt	(date 1600245269775)
@@ -0,0 +1,119 @@
+package org.evomaster.core.search.impact.genemutation.archivemutationinfo
+
+import com.google.inject.Injector
+import com.google.inject.Key
+import com.google.inject.Module
+import com.google.inject.TypeLiteral
+import com.netflix.governator.guice.LifecycleInjector
+import org.evomaster.core.BaseModule
+import org.evomaster.core.EMConfig
+import org.evomaster.core.search.algorithms.MioAlgorithm
+import org.evomaster.core.search.gene.IntegerGene
+import org.evomaster.core.search.matchproblem.*
+import org.evomaster.core.search.service.Archive
+import org.evomaster.core.search.service.mutator.EvaluatedMutation
+import org.evomaster.core.search.service.mutator.MutatedGeneSpecification
+import org.evomaster.core.search.service.mutator.StandardMutator
+import org.evomaster.core.search.service.mutator.genemutation.ArchiveGeneMutator
+import org.evomaster.core.search.service.mutator.genemutation.mutationupdate.LongMutationUpdate
+import org.evomaster.core.search.tracer.ArchiveMutationTrackService
+import org.junit.jupiter.api.BeforeEach
+import org.junit.jupiter.api.Test
+import org.junit.jupiter.api.Assertions.*
+
+/**
+ * created by manzh on 2020-09-10
+ */
+class IntegerGeneMutationUpdate {
+
+    private lateinit var config: EMConfig
+    private lateinit var mio: MioAlgorithm<PrimitiveTypeMatchIndividual>
+    private lateinit var mutator : StandardMutator<PrimitiveTypeMatchIndividual>
+    private lateinit var sampler : PrimitiveTypeMatchSampler
+    private lateinit var ff: PrimitiveTypeMatchFitness
+
+    private lateinit var archive : Archive<PrimitiveTypeMatchIndividual>
+    private lateinit var agm : ArchiveGeneMutator
+    private lateinit var tracker : ArchiveMutationTrackService
+
+    private val budget = 300
+
+    @BeforeEach
+    fun init(){
+        val injector: Injector = LifecycleInjector.builder()
+                .withModules(* arrayOf<Module>(PrimitiveTypeMatchModule(), BaseModule()))
+                .build().createInjector()
+
+        mio = injector.getInstance(Key.get(
+                object : TypeLiteral<MioAlgorithm<PrimitiveTypeMatchIndividual>>() {}))
+
+        config = injector.getInstance(EMConfig::class.java)
+        config.maxActionEvaluations = budget
+        config.stoppingCriterion = EMConfig.StoppingCriterion.FITNESS_EVALUATIONS
+        config.probOfRandomSampling = 0.0
+
+        sampler = injector.getInstance(PrimitiveTypeMatchSampler::class.java)
+        sampler.template = PrimitiveTypeMatchIndividual.intTemplate()
+
+        ff = injector.getInstance(PrimitiveTypeMatchFitness::class.java)
+        ff.type = ONE2M.ONE_EQUAL_WITH_ONE
+        archive = injector.getInstance(Key.get(object : TypeLiteral<Archive<PrimitiveTypeMatchIndividual>>(){}))
+        mutator = injector.getInstance( Key.get(object : TypeLiteral<StandardMutator<PrimitiveTypeMatchIndividual>>(){}))
+        tracker = injector.getInstance(ArchiveMutationTrackService::class.java)
+
+        agm = injector.getInstance(ArchiveGeneMutator::class.java)
+
+        config.enableTrackEvaluatedIndividual = true
+        config.probOfArchiveMutation = 1.0
+        config.weightBasedMutationRate = true
+
+        config.maxLengthOfTraces = 10
+        config.maxlengthOfHistoryForAGM = 10
+    }
+
+    @Test
+    fun testHistoryExtraction(){
+        config.archiveGeneMutation = EMConfig.ArchiveGeneMutation.NONE
+
+        val first = ff.calculateCoverage(sampler.sample())!!.also { archive.addIfNeeded(it) }
+
+        val mutated = mutator.mutateAndSave(10, first, archive)
+
+        assertNotNull(mutated.tracking)
+        assertEquals(10, mutated.tracking!!.history.size)
+
+        val copy = mutated.copy(tracker.getCopyFilterForEvalInd(mutated))
+        val ind = copy.individual.copy() as PrimitiveTypeMatchIndividual
+
+        assertEquals(1, ind.seeGenes().size)
+        val geneToMutate = ind.seeGenes().first()
+
+        val mutationInfo = MutatedGeneSpecification()
+
+        val additionalInfo = mutator.mutationConfiguration(
+                gene = geneToMutate, individual = ind,
+                eval = copy, enableAGS = true, enableAGM = true,
+                targets = archive.notCoveredTargets(),  mutatedGene = mutationInfo, includeSameValue = true)
+
+        assertNotNull(additionalInfo)
+        assertEquals(10, additionalInfo!!.history.size)
+    }
+
+
+    @Test
+    fun testMutationUpdate(){
+        val specified = listOf(Int.MAX_VALUE/2, Int.MAX_VALUE/4, 0, Int.MIN_VALUE/4, Int.MIN_VALUE/2)
+
+        val mutationinfo = LongMutationUpdate(Int.MIN_VALUE, Int.MAX_VALUE)
+
+        mutationinfo.updateOrRestBoundary(specified.map {
+            it.toLong() to EvaluatedMutation.BETTER_THAN.isEffective()
+        })
+
+        assertEquals(Int.MIN_VALUE, mutationinfo.preferMin.toInt())
+        assertEquals(specified.size-1, mutationinfo.updateTimes)
+        assertEquals(0, mutationinfo.resetTimes)
+        assertEquals(specified.subList(3, specified.size).average().toInt(), mutationinfo.preferMax.toInt())
+    }
+
+}
\ No newline at end of file
Index: core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/GeneArchiveMutationInfoUpdateTest.kt
===================================================================
--- core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/GeneArchiveMutationInfoUpdateTest.kt	(date 0)
+++ core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/GeneArchiveMutationInfoUpdateTest.kt	(date 0)
@@ -1,158 +0,0 @@
-package org.evomaster.core.search.impact.genemutation.archivemutationinfo
-
-import com.google.inject.Injector
-import com.google.inject.Module
-import com.netflix.governator.guice.LifecycleInjector
-import org.evomaster.core.BaseModule
-import org.evomaster.core.EMConfig
-import org.evomaster.core.search.gene.IntegerGene
-import org.evomaster.core.search.gene.StringGene
-import org.evomaster.core.search.service.AdaptiveParameterControl
-import org.evomaster.core.search.service.Randomness
-import org.evomaster.core.search.service.SearchTimeController
-import org.evomaster.core.search.service.mutator.EvaluatedMutation
-import org.evomaster.core.search.service.mutator.genemutation.ArchiveGeneMutator
-import org.junit.jupiter.api.Assertions.*
-import org.junit.jupiter.api.BeforeEach
-import org.junit.jupiter.api.Test
-
-
-/**
- * created by manzh on 2020-06-16
- */
-class GeneArchiveMutationInfoUpdateTest {
-
-
-//    private lateinit var config: EMConfig
-//    private lateinit var time : SearchTimeController
-//    private lateinit var apc: AdaptiveParameterControl
-//    private lateinit var archiveMutator: ArchiveGeneMutator
-//    private lateinit var randomness: Randomness
-//
-//    @BeforeEach
-//    fun init(){
-//
-//        val injector: Injector = LifecycleInjector.builder()
-//                .withModules(* arrayOf<Module>(BaseModule()))
-//                .build().createInjector()
-//        randomness = injector.getInstance(Randomness::class.java)
-//        config = injector.getInstance(EMConfig::class.java)
-//        time = injector.getInstance(SearchTimeController::class.java)
-//        apc = injector.getInstance(AdaptiveParameterControl::class.java)
-//        archiveMutator = injector.getInstance(ArchiveGeneMutator::class.java)
-//
-//        config.stoppingCriterion = EMConfig.StoppingCriterion.FITNESS_EVALUATIONS
-//        config.focusedSearchActivationTime = 0.5
-//        config.maxActionEvaluations = 10
-//        config.probOfArchiveMutation = 1.0
-//        config.archiveGeneMutation = EMConfig.ArchiveGeneMutation.SPECIFIED
-//
-//    }
-//
-//    @Test
-//    fun testStringGeneArchiveCharMutationUpdate(){
-//        val f = 'f'
-//        val f2 = f.toInt() + 1
-//
-//        val foo = StringGene(name = "foo", value = "${f}oo")
-//        val f2oo = StringGene(name = "foo", value = "${f2.toChar()}oo")
-//
-//        val target = 9
-//
-//        // mutated is not this. from foo to f2oo, fitness becomes worse, ie, -1 for targets
-//        foo.archiveMutationUpdate(original = foo, mutated = f2oo, targetsEvaluated = mutableMapOf(target to EvaluatedMutation.WORSE_THAN), archiveMutator = archiveMutator)
-//        assertEquals(1, foo.mutationInfo.map.size)
-//
-//        val gmi = foo.mutationInfo.map[target] as? StringGeneArchiveMutationInfo
-//
-//        gmi.apply {
-//            assertNotNull(this)
-//            assertEquals(0, this!!.mutatedIndex)
-//            assertEquals(3, charsMutation.size)
-//            assert(charsMutation[0].preferMax < f2)
-//        }
-//
-//        val f3 = f.toInt() - 1
-//        val f3oo = foo.copy() as StringGene
-//        f3oo.value = "${f3.toChar()}oo"
-//
-//        //mutated is this. from foo to f3oo, fitness becomes worse
-//        f3oo.archiveMutationUpdate(original = foo, mutated = f3oo, targetsEvaluated = mutableMapOf(target to EvaluatedMutation.WORSE_THAN), archiveMutator = archiveMutator)
-//        f3oo.apply {
-//            assertEquals(1, mutationInfo.map.size)
-//            assertNotNull(mutationInfo.map[target])
-//            assert((mutationInfo.map[target]!! as StringGeneArchiveMutationInfo).charsMutation[0].preferMin > f3)
-//            assert((mutationInfo.map[target]!! as StringGeneArchiveMutationInfo).charsMutation[0].preferMax < f2)
-//            assert((mutationInfo.map[target]!! as StringGeneArchiveMutationInfo).charsMutation[0].reached)
-//        }
-//    }
-//
-//
-//    @Test
-//    fun testStringGeneArchiveLengthMutationUpdate(){
-//
-//        val foo = StringGene(name = "foo", value = "f")
-//        val f2oo = StringGene(name = "foo", value = "fo")
-//
-//        val target = 9
-//
-//        // mutated is not this. from foo to f2oo, fitness becomes worse, ie, -1 for targets
-//        foo.archiveMutationUpdate(original = foo, mutated = f2oo, targetsEvaluated = mutableMapOf(target to EvaluatedMutation.WORSE_THAN), archiveMutator = archiveMutator)
-//        assertEquals(1, foo.mutationInfo.map.size)
-//
-//        (foo.mutationInfo.map[target] as? StringGeneArchiveMutationInfo).apply {
-//            assertNotNull(this)
-//            assertEquals(-1, this!!.mutatedIndex)
-//            assertEquals(1, charsMutation.size)
-//            assert(lengthMutation.preferMax <= f2oo.value.length)
-//            assertEquals(foo.minLength, lengthMutation.preferMin)
-//        }
-//
-//        val f3oo = foo.copy() as StringGene
-//        f3oo.value = ""
-//
-//        f3oo.archiveMutationUpdate(original = foo, mutated = f3oo, targetsEvaluated = mutableMapOf(target to EvaluatedMutation.BETTER_THAN), archiveMutator = archiveMutator)
-//        (f3oo.mutationInfo.map[target] as? StringGeneArchiveMutationInfo).apply {
-//            assertNotNull(this)
-//            assertEquals(-1, this!!.mutatedIndex)
-//            assertEquals(0, charsMutation.size)
-//            assertEquals(0, lengthMutation.preferMax)
-//            assertEquals(f3oo.minLength, lengthMutation.preferMin)
-//            assert(lengthMutation.reached)
-//        }
-//        assert(f3oo.reachOptimal(setOf(9)))
-//    }
-//
-//    @Test
-//    fun testIntegerGeneArchiveMutation(){
-//        val i1 = IntegerGene("foo", value = 1)
-//
-//        val target = 9
-//        val i10 = i1.copy() as IntegerGene
-//        i10.value = 10
-//
-//        i1.archiveMutationUpdate(i1, i10, targetsEvaluated = mutableMapOf(target to EvaluatedMutation.WORSE_THAN), archiveMutator = archiveMutator)
-//
-//        (i1.mutationInfo.map[target] as? IntegerGeneArchiveMutationInfo).apply {
-//            assertNotNull(this)
-//            assert(this!!.valueMutation.preferMax <= i10.value)
-//            assertEquals(i1.min, valueMutation.preferMin)
-//        }
-//
-//        val im1000 = i1.copy() as IntegerGene
-//        im1000.value = -1000
-//
-//        (im1000.mutationInfo.map[target] as? IntegerGeneArchiveMutationInfo).apply {
-//            assertNotNull(this)
-//            assertEquals((i1.mutationInfo.map[target] as IntegerGeneArchiveMutationInfo).valueMutation.preferMax, this!!.valueMutation.preferMax)
-//            assertEquals((i1.mutationInfo.map[target] as IntegerGeneArchiveMutationInfo).valueMutation.preferMin, valueMutation.preferMin)
-//        }
-//
-//        im1000.archiveMutationUpdate(i1, im1000, targetsEvaluated = mutableMapOf(target to EvaluatedMutation.BETTER_THAN), archiveMutator = archiveMutator)
-//        (im1000.mutationInfo.map[target] as? IntegerGeneArchiveMutationInfo)?.apply {
-//            assertNotNull(this)
-//            assert(valueMutation!!.preferMax <=  (im1000.value + i1.value)/2 + 1)
-//            assertEquals((i1.mutationInfo.map[target] as IntegerGeneArchiveMutationInfo).valueMutation.preferMin, valueMutation.preferMin)
-//        }
-//    }
-}
\ No newline at end of file
Index: core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/GeneArchiveMutationInfoSortTest.kt
===================================================================
--- core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/GeneArchiveMutationInfoSortTest.kt	(date 0)
+++ core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/archivemutationinfo/GeneArchiveMutationInfoSortTest.kt	(date 0)
@@ -1,72 +0,0 @@
-package org.evomaster.core.search.impact.genemutation.archivemutationinfo
-
-
-import org.junit.jupiter.api.Test
-import org.junit.jupiter.api.Assertions.assertEquals
-
-/**
- * created by manzh on 2020-06-16
- */
-class GeneArchiveMutationInfoSortTest {
-
-//    @Test
-//    fun testStringGeneArchiveMutationComparable(){
-//
-//        val minLength = 0
-//        val maxLength = 16
-//        val value = "foo"
-//
-//        val g1 = GeneArchieMutationInfo()
-//
-//        val m0 = StringGeneArchiveMutationInfo(minLength = minLength, maxLength = maxLength)
-//        g1.map[0] = m0
-//
-//        val m_len1 = StringGeneArchiveMutationInfo(minLength = minLength, maxLength = maxLength)
-//        m_len1.plusMutatedTimes()
-//        m_len1.charsMutation.clear()
-//        m_len1.charsMutation.addAll((0 until value.length).map { IntMutationUpdate(0, 3) })
-//        m_len1.charMutationInitialized()
-//        assertEquals(-1, m0.compareTo(m_len1))
-//        g1.map[1] = m_len1
-//
-//        val m_len1_cha1 = m_len1.copy()
-//        m_len1_cha1.mutatedIndex = 0
-//        g1.map[2] = m_len1_cha1
-//
-//        val m_len2_cha1 = m_len1_cha1.copy()
-//        m_len2_cha1.lengthMutation.preferMax = 4
-//        g1.map[3] = m_len2_cha1
-//
-//        val m_len1_cha2 = m_len1_cha1.copy()
-//        m_len1_cha1.charsMutation[0].preferMin = 0
-//        m_len1_cha1.charsMutation[0].preferMax = 1
-//        g1.map[4] = m_len1_cha2
-//
-//        val sorted = g1.sort(setOf(0,1,2,3,4))
-//        assertEquals(0, sorted.indexOf(m0))
-//        assertEquals(1, sorted.indexOf(m_len1))
-//        assertEquals(2, sorted.indexOf(m_len1_cha1))
-//        assertEquals(3, sorted.indexOf(m_len1_cha2))
-//        assertEquals(4, sorted.indexOf(m_len2_cha1))
-//
-//    }
-//
-//    @Test
-//    fun testIntegerGeneArchiveMutationComparable(){
-//        val g1 = GeneArchieMutationInfo()
-//
-//        val m0 = IntegerGeneArchiveMutationInfo(0, 16)
-//        g1.map[0] = m0
-//
-//        val m1 = IntegerGeneArchiveMutationInfo(0, 7)
-//        g1.map[1] = m1
-//
-//        val m2 = IntegerGeneArchiveMutationInfo(-1, 8)
-//        g1.map[2] = m2
-//
-//        val sorted = g1.sort(setOf(0,1,2))
-//        assertEquals(0, sorted.indexOf(m0))
-//        assertEquals(1, sorted.indexOf(m2))
-//        assertEquals(2, sorted.indexOf(m1))
-//    }
-}
\ No newline at end of file
Index: core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/IntegerGeneMatchTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/IntegerGeneMatchTest.kt	(date 1600240710415)
+++ core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/IntegerGeneMatchTest.kt	(date 1600240710415)
@@ -23,7 +23,7 @@
     private lateinit var config: EMConfig
     private lateinit var mio: MioAlgorithm<PrimitiveTypeMatchIndividual>
 
-    private val budget = 300
+    private val budget = 6000
 
     @BeforeEach
     fun init(){
@@ -37,34 +37,20 @@
         config = injector.getInstance(EMConfig::class.java)
         config.maxActionEvaluations = budget
         config.stoppingCriterion = EMConfig.StoppingCriterion.FITNESS_EVALUATIONS
-        config.focusedSearchActivationTime = 0.0
 
         val sampler = injector.getInstance(PrimitiveTypeMatchSampler::class.java)
         sampler.template = PrimitiveTypeMatchIndividual.intTemplate()
 
         val ff = injector.getInstance(PrimitiveTypeMatchFitness::class.java)
-        ff.type = ONE2M.ONE_EQUAL_WITH_MANY
-
-    }
-
-    @Test
-    fun shareInfoWithASM(){
-        config.archiveGeneMutation = EMConfig.ArchiveGeneMutation.SPECIFIED
-        config.probOfArchiveMutation = 1.0
-        config.baseTaintAnalysisProbability = 0.0
-
-        val solution = mio.search()
-
-        assert(solution.individuals.size > 1)
-//        val info = (solution.individuals.first().individual.gene as IntegerGene).mutationInfo
-//
-//        assert(solution.individuals.all { (it.individual.gene as IntegerGene).mutationInfo == info })
+        ff.type = ONE2M.ONE_EQUAL_WITH_ONE
 
     }
 
     @Test
     fun testASM(){
 
+        config.weightBasedMutationRate = true
+        config.enableTrackEvaluatedIndividual = true
         config.archiveGeneMutation = EMConfig.ArchiveGeneMutation.SPECIFIED
         config.probOfArchiveMutation = 1.0
 
Index: core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/StringMatchTest.kt
===================================================================
--- core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/StringMatchTest.kt	(date 0)
+++ core/src/test/kotlin/org/evomaster/core/search/impact/genemutation/StringMatchTest.kt	(date 0)
@@ -1,82 +0,0 @@
-package org.evomaster.core.search.impact.genemutation
-
-import com.google.inject.Injector
-import com.google.inject.Key
-import com.google.inject.Module
-import com.google.inject.TypeLiteral
-import com.netflix.governator.guice.LifecycleInjector
-import org.evomaster.core.BaseModule
-import org.evomaster.core.EMConfig
-import org.evomaster.core.search.algorithms.MioAlgorithm
-import org.evomaster.core.search.gene.StringGene
-import org.evomaster.core.search.matchproblem.*
-import org.junit.jupiter.api.Test
-import org.junit.jupiter.api.Assertions.assertEquals
-import org.junit.jupiter.api.BeforeEach
-
-/**
- * created by manzh on 2020-06-16
- */
-class StringMatchTest {
-
-    private lateinit var config: EMConfig
-    private lateinit var mio: MioAlgorithm<PrimitiveTypeMatchIndividual>
-
-    private val budget = 500
-
-    @BeforeEach
-    fun init(){
-        val injector: Injector = LifecycleInjector.builder()
-                .withModules(* arrayOf<Module>(PrimitiveTypeMatchModule(), BaseModule()))
-                .build().createInjector()
-
-        mio = injector.getInstance(Key.get(
-                object : TypeLiteral<MioAlgorithm<PrimitiveTypeMatchIndividual>>() {}))
-
-        config = injector.getInstance(EMConfig::class.java)
-        config.maxActionEvaluations = budget
-        config.stoppingCriterion = EMConfig.StoppingCriterion.FITNESS_EVALUATIONS
-        config.focusedSearchActivationTime = 0.0
-
-        val sampler = injector.getInstance(PrimitiveTypeMatchSampler::class.java)
-        sampler.template = PrimitiveTypeMatchIndividual.stringTemplate()
-
-        val ff = injector.getInstance(PrimitiveTypeMatchFitness::class.java)
-        ff.type = ONE2M.ONE_EQUAL_WITH_MANY
-
-    }
-
-    @Test
-    fun shareInfoWithASM(){
-        config.archiveGeneMutation = EMConfig.ArchiveGeneMutation.SPECIFIED
-        config.probOfArchiveMutation = 1.0
-        config.baseTaintAnalysisProbability = 0.0
-
-        val solution = mio.search()
-
-        assert(solution.individuals.size > 1)
-//        val info = (solution.individuals.first().individual.gene as StringGene).mutationInfo
-//
-//        assert(solution.individuals.all { (it.individual.gene as StringGene).mutationInfo == info })
-
-    }
-
-    @Test
-    fun testASM(){
-
-        config.archiveGeneMutation = EMConfig.ArchiveGeneMutation.SPECIFIED
-        config.probOfArchiveMutation = 1.0
-
-        val solution = mio.search()
-
-        assertEquals(3, solution.overall.coveredTargets())
-    }
-
-    @Test
-    fun testWithoutASM(){
-
-        val solution = mio.search()
-
-        assert(solution.overall.coveredTargets() < 3)
-    }
-}
\ No newline at end of file
Index: core/src/test/kotlin/org/evomaster/core/search/matchproblem/PrimitiveTypeMatchFitness.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/test/kotlin/org/evomaster/core/search/matchproblem/PrimitiveTypeMatchFitness.kt	(date 1600161022506)
+++ core/src/test/kotlin/org/evomaster/core/search/matchproblem/PrimitiveTypeMatchFitness.kt	(date 1600161022506)
@@ -29,7 +29,7 @@
 
     private fun getTargets(individual: PrimitiveTypeMatchIndividual) : List<Any>{
         return when{
-            individual.gene is StringGene -> listOf("foo", "", "Y8l4x0WC9qtH5mTN")
+            individual.gene is StringGene -> listOf("bar", "", "Y8l4x0WC9qtH5mTN")
             individual.gene is IntegerGene -> listOf(Int.MIN_VALUE, -1, 0, 1, Int.MAX_VALUE)
             individual.gene is DoubleGene -> listOf(Double.MIN_VALUE, -1.0, 0.0, 1.0, Double.MAX_VALUE)
             individual.gene is FloatGene -> listOf(Float.MIN_VALUE, -1.0f, 0.0f, 1.0f, Float.MAX_VALUE)
Index: core/target/test-classes/swagger/sut/news.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/sut/news.json	(date 1600375346723)
+++ core/target/test-classes/swagger/sut/news.json	(date 1600375346723)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/sut/catwatch.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/sut/catwatch.json	(date 1600375346735)
+++ core/target/test-classes/swagger/sut/catwatch.json	(date 1600375346735)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/sut/ocvn_1oc.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/sut/ocvn_1oc.json	(date 1600375346734)
+++ core/target/test-classes/swagger/sut/ocvn_1oc.json	(date 1600375346734)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/sut/scout-api.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/sut/scout-api.json	(date 1600375346721)
+++ core/target/test-classes/swagger/sut/scout-api.json	(date 1600375346721)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/sut/proxyprint.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/sut/proxyprint.json	(date 1600375346716)
+++ core/target/test-classes/swagger/sut/proxyprint.json	(date 1600375346716)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/sut/features_service.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/sut/features_service.json	(date 1600375346719)
+++ core/target/test-classes/swagger/sut/features_service.json	(date 1600375346719)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/sut/features_service_null.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/sut/features_service_null.json	(date 1600375346718)
+++ core/target/test-classes/swagger/sut/features_service_null.json	(date 1600375346718)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/others/petstore.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/others/petstore.json	(date 1600375346755)
+++ core/target/test-classes/swagger/others/petstore.json	(date 1600375346755)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/others/cyclotron.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/others/cyclotron.json	(date 1600375346754)
+++ core/target/test-classes/swagger/others/cyclotron.json	(date 1600375346754)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/artificial/foo.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/artificial/foo.json	(date 1600375346752)
+++ core/target/test-classes/swagger/artificial/foo.json	(date 1600375346752)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/artificial/branches.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/artificial/branches.json	(date 1600375346753)
+++ core/target/test-classes/swagger/artificial/branches.json	(date 1600375346753)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/artificial/simpleform.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/artificial/simpleform.json	(date 1600375346750)
+++ core/target/test-classes/swagger/artificial/simpleform.json	(date 1600375346750)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/artificial/bodyparams_v2.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/artificial/bodyparams_v2.json	(date 1600375346749)
+++ core/target/test-classes/swagger/artificial/bodyparams_v2.json	(date 1600375346749)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/artificial/multi_param_path.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/artificial/multi_param_path.json	(date 1600375346751)
+++ core/target/test-classes/swagger/artificial/multi_param_path.json	(date 1600375346751)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/artificial/positive_integer_swagger.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/artificial/positive_integer_swagger.json	(date 1600375346752)
+++ core/target/test-classes/swagger/artificial/positive_integer_swagger.json	(date 1600375346752)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v2/apis.guru.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v2/apis.guru.json	(date 1600375346736)
+++ core/target/test-classes/swagger/apisguru-v2/apis.guru.json	(date 1600375346736)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v2/greenpeace.org.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v2/greenpeace.org.json	(date 1600375346737)
+++ core/target/test-classes/swagger/apisguru-v2/greenpeace.org.json	(date 1600375346737)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/news.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/news.json	(date 1600375346746)
+++ core/target/test-classes/swagger/apisguru-v3/news.json	(date 1600375346746)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/bcgnws.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/bcgnws.json	(date 1600375346741)
+++ core/target/test-classes/swagger/apisguru-v3/bcgnws.json	(date 1600375346741)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/bclaws.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/bclaws.json	(date 1600375346745)
+++ core/target/test-classes/swagger/apisguru-v3/bclaws.json	(date 1600375346745)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/checker.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/checker.json	(date 1600375346748)
+++ core/target/test-classes/swagger/apisguru-v3/checker.json	(date 1600375346748)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/open511.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/open511.json	(date 1600375346740)
+++ core/target/test-classes/swagger/apisguru-v3/open511.json	(date 1600375346740)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/disposable.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/disposable.json	(date 1600375346747)
+++ core/target/test-classes/swagger/apisguru-v3/disposable.json	(date 1600375346747)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/validation.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/validation.json	(date 1600375346746)
+++ core/target/test-classes/swagger/apisguru-v3/validation.json	(date 1600375346746)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/bng2latlong.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/bng2latlong.json	(date 1600375346738)
+++ core/target/test-classes/swagger/apisguru-v3/bng2latlong.json	(date 1600375346738)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/geolocation.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/geolocation.json	(date 1600375346739)
+++ core/target/test-classes/swagger/apisguru-v3/geolocation.json	(date 1600375346739)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/ip2proxy.com.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/ip2proxy.com.json	(date 1600375346748)
+++ core/target/test-classes/swagger/apisguru-v3/ip2proxy.com.json	(date 1600375346748)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/fraud-detection.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/fraud-detection.json	(date 1600375346744)
+++ core/target/test-classes/swagger/apisguru-v3/fraud-detection.json	(date 1600375346744)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/swagger/apisguru-v3/sms-verification.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/swagger/apisguru-v3/sms-verification.json	(date 1600375346743)
+++ core/target/test-classes/swagger/apisguru-v3/sms-verification.json	(date 1600375346743)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/news.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/news.sql	(date 1600375346763)
+++ core/target/test-classes/sql_schema/news.sql	(date 1600375346763)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/ocvn.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/ocvn.sql	(date 1600375346768)
+++ core/target/test-classes/sql_schema/ocvn.sql	(date 1600375346768)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/ind_0.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/ind_0.sql	(date 1600375346762)
+++ core/target/test-classes/sql_schema/ind_0.sql	(date 1600375346762)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/doctors.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/doctors.sql	(date 1600375346757)
+++ core/target/test-classes/sql_schema/doctors.sql	(date 1600375346757)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/catwatch.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/catwatch.sql	(date 1600375346771)
+++ core/target/test-classes/sql_schema/catwatch.sql	(date 1600375346771)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/passports.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/passports.sql	(date 1600375346765)
+++ core/target/test-classes/sql_schema/passports.sql	(date 1600375346765)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/scout-api.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/scout-api.sql	(date 1600375346761)
+++ core/target/test-classes/sql_schema/scout-api.sql	(date 1600375346761)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/proxyprint.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/proxyprint.sql	(date 1600375346769)
+++ core/target/test-classes/sql_schema/proxyprint.sql	(date 1600375346769)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/like_check_db.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/like_check_db.sql	(date 1600375346759)
+++ core/target/test-classes/sql_schema/like_check_db.sql	(date 1600375346759)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/xml_column_db.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/xml_column_db.sql	(date 1600375346758)
+++ core/target/test-classes/sql_schema/xml_column_db.sql	(date 1600375346758)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/date_column_db.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/date_column_db.sql	(date 1600375346765)
+++ core/target/test-classes/sql_schema/date_column_db.sql	(date 1600375346765)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/text_column_db.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/text_column_db.sql	(date 1600375346763)
+++ core/target/test-classes/sql_schema/text_column_db.sql	(date 1600375346763)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/uuid_column_db.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/uuid_column_db.sql	(date 1600375346766)
+++ core/target/test-classes/sql_schema/uuid_column_db.sql	(date 1600375346766)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/jsonb_column_db.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/jsonb_column_db.sql	(date 1600375346764)
+++ core/target/test-classes/sql_schema/jsonb_column_db.sql	(date 1600375346764)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/features_service.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/features_service.sql	(date 1600375346767)
+++ core/target/test-classes/sql_schema/features_service.sql	(date 1600375346767)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/alter_table_check.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/alter_table_check.sql	(date 1600375346760)
+++ core/target/test-classes/sql_schema/alter_table_check.sql	(date 1600375346760)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/create_table_check.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/create_table_check.sql	(date 1600375346762)
+++ core/target/test-classes/sql_schema/create_table_check.sql	(date 1600375346762)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/similarto_check_db.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/similarto_check_db.sql	(date 1600375346770)
+++ core/target/test-classes/sql_schema/similarto_check_db.sql	(date 1600375346770)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/alter_table_check_enum.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/alter_table_check_enum.sql	(date 1600375346759)
+++ core/target/test-classes/sql_schema/alter_table_check_enum.sql	(date 1600375346759)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/sql_schema/create_table_check_enum.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/sql_schema/create_table_check_enum.sql	(date 1600375346757)
+++ core/target/test-classes/sql_schema/create_table_check_enum.sql	(date 1600375346757)
@@ -1,0 +0,0 @@
Index: core/target/test-classes/logback_for_determinism_check.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/target/test-classes/logback_for_determinism_check.xml	(date 1600375346756)
+++ core/target/test-classes/logback_for_determinism_check.xml	(date 1600375346756)
@@ -1,0 +0,0 @@
Index: statistics.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- statistics.csv	(date 1600260935329)
+++ statistics.csv	(date 1600260935329)
@@ -24,3 +24,8 @@
 30361,26037,100001,963,46,128,545,85312,18,14,14,35,17,118,426,6,3345,0,33,200,20,2.2777777777777777,3,0,0,0,feature-service,0.25,0.25,0.25,0.25,false,APPROACH_IMPACT,MIO,true,archive.csv,SPECIFIED_WITH_TARGETS,10,false,0.9,false,,,false,false,coveredTargets.txt,NAME,true,true,0.8,dependencies.csv,false,false,false,false,true,false,true,false,true,10,null,exceedTargets.txt,false,true,false,false,false,false,extra_heuristics.csv,true,LAST,0.5,ONE_OVER_N_BIASED_SQL,RATIO,false,true,true,impactSnapshot.csv,impact.csv,./app-driver.js,100000,10,0.9,1000000,50,5,10,60s,0,4,10,2,mutatedGeneInfo.csv,FIRST_NOT_COVERED_TARGET,src/em,JAVA_JUNIT_4,30,0.0,0.8,0.0,0.5,0.1,0.5,REST,process_data,100,false,NONE,false,false,false,AVG_DISTANCE_SAME_N_ACTIONS,-1,true,-1.0,snapshot.csv,false,1,0.5,feature-service,statistics.csv,FITNESS_EVALUATIONS,0.5,localhost,40100,EvoMasterTest,NONE,10,true,true,true,false,true,0.7
 33588,26332,100000,847,45,90,464,88584,18,12,14,35,17,118,426,6,3345,0,33,169,15,2.1666666666666665,4,0,0,0,feature-service,0.25,0.25,0.25,0.25,false,APPROACH_IMPACT,MIO,true,archive.csv,SPECIFIED_WITH_TARGETS,10,false,0.9,false,,,false,false,coveredTargets.txt,NAME,true,true,0.8,dependencies.csv,false,false,false,false,true,false,true,false,true,10,null,exceedTargets.txt,false,true,false,false,false,false,extra_heuristics.csv,true,LAST,0.5,ONE_OVER_N_BIASED_SQL,RATIO,false,true,true,impactSnapshot.csv,impact.csv,./app-driver.js,100000,10,0.9,1000000,50,5,10,60s,0,4,10,2,mutatedGeneInfo.csv,FIRST_NOT_COVERED_TARGET,src/em,JAVA_JUNIT_4,30,0.0,0.8,0.0,0.5,0.1,0.5,REST,process_data,100,false,NONE,false,false,false,AVG_DISTANCE_SAME_N_ACTIONS,-1,true,-1.0,snapshot.csv,false,1,0.5,feature-service,statistics.csv,FITNESS_EVALUATIONS,0.5,localhost,40100,EvoMasterTest,NONE,10,true,true,true,false,true,0.7
 34389,17146,100000,8763,256,463,1842,98398,74,49,47,110,51,988,2613,113,3458,0,93,663,78,2.9054054054054053,5,9,0,0,feature-service,0.25,0.25,0.25,0.25,false,APPROACH_IMPACT,MIO,true,archive.csv,SPECIFIED,10,false,0.9,false,,,false,false,coveredTargets.txt,NAME,true,true,0.8,dependencies.csv,false,false,false,false,true,false,true,false,true,10,null,exceedTargets.txt,false,true,false,false,false,false,extra_heuristics.csv,true,LAST,0.5,ONE_OVER_N_BIASED_SQL,RATIO,false,true,true,impactSnapshot.csv,impact.csv,./app-driver.js,100000,10,0.9,1000000,50,5,10,60s,0,10,10,2,mutatedGeneInfo.csv,FIRST_NOT_COVERED_TARGET,src/em,JAVA_JUNIT_4,30,0.0,0.8,0.0,0.5,0.1,0.5,REST,process_data,100,false,NONE,false,false,false,AVG_DISTANCE_SAME_N_ACTIONS,-1,true,-1.0,snapshot.csv,false,1,0.5,feature-service,statistics.csv,FITNESS_EVALUATIONS,0.5,localhost,40100,EvoMasterTest,NONE,10,true,true,true,false,true,0.7
+31632,25675,100000,821,44,117,544,97084,18,14,14,35,17,118,426,6,3345,0,33,200,20,2.2222222222222223,4,0,0,0,feature-service,0.25,0.25,0.25,0.25,false,APPROACH_IMPACT,MIO,true,archive.csv,SPECIFIED,10,false,0.9,false,,,false,false,coveredTargets.txt,NAME,true,true,0.8,dependencies.csv,false,false,false,false,true,false,true,false,true,10,null,exceedTargets.txt,false,true,false,false,false,false,extra_heuristics.csv,true,LAST,0.5,ONE_OVER_N_BIASED_SQL,RATIO,false,true,true,impactSnapshot.csv,impact.csv,./app-driver.js,100000,10,0.9,1000000,50,5,10,60s,0,10,10,2,mutatedGeneInfo.csv,FIRST_NOT_COVERED_TARGET,src/em,JAVA_JUNIT_4,30,0.0,0.8,0.0,0.5,0.1,0.5,REST,process_data,100,false,NONE,false,false,false,AVG_DISTANCE_SAME_N_ACTIONS,-1,true,-1.0,snapshot.csv,false,1,0.5,feature-service,statistics.csv,FITNESS_EVALUATIONS,0.5,localhost,40100,EvoMasterTest,NONE,10,true,true,true,false,true,0.7
+22298,0,100002,478,62,299,629,99613,6,6,0,5,5,232,286,0,2237,0,9,252,155,1.8333333333333333,2,0,0,0,feature-service,0.25,0.25,0.25,0.25,false,APPROACH_IMPACT,MIO,true,archive.csv,SPECIFIED,10,false,0.9,false,,,false,false,coveredTargets.txt,NAME,true,true,0.8,dependencies.csv,false,false,false,false,true,false,true,false,true,10,null,exceedTargets.txt,false,true,false,false,false,false,extra_heuristics.csv,true,LAST,0.5,ONE_OVER_N_BIASED_SQL,RATIO,false,true,true,impactSnapshot.csv,impact.csv,./app-driver.js,100000,10,0.9,1000000,50,5,10,60s,0,10,10,2,mutatedGeneInfo.csv,FIRST_NOT_COVERED_TARGET,src/em,JAVA_JUNIT_4,30,0.0,0.8,0.0,0.5,0.1,0.5,REST,process_data,100,false,NONE,false,false,false,AVG_DISTANCE_SAME_N_ACTIONS,-1,true,-1.0,snapshot.csv,false,1,0.5,feature-service,statistics.csv,FITNESS_EVALUATIONS,0.5,localhost,40100,EvoMasterTest,NONE,10,true,true,true,false,true,0.7
+23877,0,100006,312,126,891,853,97148,11,11,0,11,11,294,301,86,2234,0,13,244,150,2.8181818181818183,3,0,0,0,feature-service,0.25,0.25,0.25,0.25,false,APPROACH_IMPACT,MIO,true,archive.csv,SPECIFIED,10,false,0.9,false,,,false,false,coveredTargets.txt,NAME,true,true,0.8,dependencies.csv,false,false,false,false,true,false,true,false,true,10,null,exceedTargets.txt,false,true,false,false,false,false,extra_heuristics.csv,true,LAST,0.5,ONE_OVER_N_BIASED_SQL,RATIO,false,true,true,impactSnapshot.csv,impact.csv,./app-driver.js,100000,10,0.9,1000000,50,5,10,60s,0,10,10,2,mutatedGeneInfo.csv,FIRST_NOT_COVERED_TARGET,src/em,JAVA_JUNIT_4,30,0.0,0.8,0.0,0.5,0.1,0.5,REST,process_data,100,false,NONE,false,false,false,AVG_DISTANCE_SAME_N_ACTIONS,-1,true,-1.0,snapshot.csv,false,1,0.5,feature-service,statistics.csv,FITNESS_EVALUATIONS,0.5,localhost,40100,EvoMasterTest,NONE,10,true,true,true,false,true,0.7
+17556,14114,100005,1323,25,110,309,96975,7,3,2,6,4,236,184,4,3605,0,15,89,60,1.8571428571428572,3,0,0,0,feature-service,0.25,0.25,0.25,0.25,false,APPROACH_IMPACT,MIO,true,archive.csv,SPECIFIED,10,false,0.9,false,,,false,false,coveredTargets.txt,NAME,true,true,0.8,dependencies.csv,false,false,false,false,true,false,true,false,true,10,null,exceedTargets.txt,false,true,false,false,false,false,extra_heuristics.csv,true,LAST,0.5,ONE_OVER_N_BIASED_SQL,RATIO,false,true,true,impactSnapshot.csv,impact.csv,./app-driver.js,100000,10,0.9,1000000,50,5,10,60s,0,10,10,2,mutatedGeneInfo.csv,FIRST_NOT_COVERED_TARGET,src/em,JAVA_JUNIT_4,30,0.0,0.8,0.0,0.5,0.1,0.5,REST,process_data,100,false,NONE,false,false,false,AVG_DISTANCE_SAME_N_ACTIONS,-1,true,-1.0,snapshot.csv,false,1,0.5,feature-service,statistics.csv,FITNESS_EVALUATIONS,0.5,localhost,40100,EvoMasterTest,NONE,10,true,true,true,false,true,0.7
+40383,20684,100004,586,27,84,350,98875,7,5,2,7,5,236,184,4,3607,0,15,97,66,2.4285714285714284,4,0,0,0,feature-service,0.25,0.25,0.25,0.25,false,APPROACH_IMPACT,MIO,true,archive.csv,SPECIFIED,10,false,0.9,false,,,false,false,coveredTargets.txt,NAME,true,true,0.8,dependencies.csv,false,false,false,false,true,false,true,false,true,10,null,exceedTargets.txt,false,true,false,false,false,false,extra_heuristics.csv,true,LAST,0.5,ONE_OVER_N_BIASED_SQL,RATIO,false,true,true,impactSnapshot.csv,impact.csv,./app-driver.js,100000,10,0.9,1000000,50,5,10,60s,0,10,10,2,mutatedGeneInfo.csv,FIRST_NOT_COVERED_TARGET,src/em,JAVA_JUNIT_4,30,0.0,0.8,0.0,0.5,0.1,0.5,REST,process_data,100,false,NONE,false,false,false,AVG_DISTANCE_SAME_N_ACTIONS,-1,true,-1.0,snapshot.csv,false,1,0.5,feature-service,statistics.csv,FITNESS_EVALUATIONS,0.5,localhost,40100,EvoMasterTest,NONE,10,true,true,true,false,true,0.7
