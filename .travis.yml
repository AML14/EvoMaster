language: java
dist: xenial
os: linux



# As the build will download JAR files from Maven Central, optimize their storage,
# so they do not get re-downloaded each time
cache:
  directories:
  - .autoconf
  - $HOME/.m2

notifications:
  email: true

services:
  - docker

## We should try to support the main LTS (long-term-support) releases
jdk:
  - openjdk8
#  - openjdk11

# By default, Travis does a "mvn install" during its onw 'install' phase.
# This is annoying, and unnecessarily time consuming when using multiple run-scripts.
# So, we override this behavior.
# We just force the downloading of dependencies here to reduce the clutter in the logs.

install: mvn de.qaware.maven:go-offline-maven-plugin:1.2.5:resolve-dependencies

## Unfortunately, the official Maven plugin is completely broken...
## ie most of its options do not work at all, and bug reports have been opened for years...
## https://github.com/apache/maven-dependency-plugin/pull/2
#install: mvn dependency:resolve -DexcludeGroupIds=org.evomaster


env:
  CI_env: Travis


# As Travis has a 50 minute limit per script, we need to split the build in different stages.
jobs:
  include:
    - stage: init
      script: mvn clean install --fae -P skipE2E_V2
    - stage: e2e
      script:
        - cd e2e-tests/spring-examples
        - mvn verify --fae
#    - stage: jdk11
#      script:
#        - jdk_switcher use openjdk11
#        - mvn compile -DskipTests

### WARNING
### Unfortunately, it looks like current support for switching JDKs in Travis is completely broken.
### So, at least for the time being, here we build for JDK 8, and do JDK 11 on CircleCI



# After build is finished, upload coverage results to CodeCov
after_success:
  - bash <(curl -s https://codecov.io/bash)